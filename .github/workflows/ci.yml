name: CI
on: [push, pull_request]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
  CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}
  CROWDIN_BRANCH: docs-next
  LOCAL_BRANCH: docs/update-from-crowdin

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('./yarn.lock') }}
      - run: yarn --frozen-lockfile --non-interactive
      - run: yarn run build:lib
        working-directory: ./packages/vuetify
      - run: yarn run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('./yarn.lock') }}

      - run: yarn --frozen-lockfile --non-interactive
      - run: yarn lerna run test:coverage -- -- -i
      - uses: codecov/codecov-action@v1

  deploy:
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startswith(github.ref, 'refs/tags/v') && github.repository_owner == 'vuetifyjs'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('./yarn.lock') }}
      - run: yarn --frozen-lockfile --non-interactive
      - run: yarn lerna run build --scope vuetify
      - run: echo ::set-env name=RELEASE_TAG::${GITHUB_REF#refs/tags/}
      - run: rm -rf release
      - run: cp -r ./packages/vuetify/dist release
      - run: for file in ./release/*.*; do mv "$file" "${file/release\/vuetify/release/vuetify-${RELEASE_TAG}}"; done
      - run: zip -jr "release/vuetify-${RELEASE_TAG}.zip" release/*
      - name: NPM Release
        run: bash scripts/deploy.sh
        env:
          NPM_API_KEY: ${{ secrets.NPM_TOKEN }}
          TAG_NAME: ${{ env.RELEASE_TAG }}
      - name: GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: ${{ env.RELEASE_TAG }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/vuetify-${{ env.RELEASE_TAG }}.zip
          asset_name: vuetify-${{ env.RELEASE_TAG }}.zip
          asset_content_type: application/zip

  publish-docs:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download eo-UY
        uses: crowdin/github-action@1.0.9
        with:
          config: crowdin.yml
          upload_sources: false
          download_translations: true
          push_translations: false
          export_only_approved: true
          download_language: eo
          localization_branch_name: ${{ env.LOCAL_BRANCH }}
          crowdin_branch_name: ${{ env.CROWDIN_BRANCH }}

      - name: Download de-DE
        uses: crowdin/github-action@1.0.9
        with:
          config: crowdin.yml
          upload_sources: false
          download_translations: true
          push_translations: false
          export_only_approved: true
          download_language: de
          localization_branch_name: ${{ env.LOCAL_BRANCH }}
          crowdin_branch_name: ${{ env.CROWDIN_BRANCH }}

      - name: Download fr-FR
        uses: crowdin/github-action@1.0.9
        with:
          config: crowdin.yml
          upload_sources: false
          download_translations: true
          push_translations: false
          export_only_approved: true
          download_language: fr
          localization_branch_name: ${{ env.LOCAL_BRANCH }}
          crowdin_branch_name: ${{ env.CROWDIN_BRANCH }}

      - name: Download ru-RU
        uses: crowdin/github-action@1.0.9
        with:
          config: crowdin.yml
          upload_sources: false
          download_translations: true
          push_translations: false
          export_only_approved: true
          download_language: ru
          localization_branch_name: ${{ env.LOCAL_BRANCH }}
          crowdin_branch_name: ${{ env.CROWDIN_BRANCH }}

      - name: Download zh-CN
        uses: crowdin/github-action@1.0.9
        with:
          config: crowdin.yml
          upload_sources: false
          download_translations: true
          push_translations: false
          export_only_approved: true
          download_language: zh-CN
          localization_branch_name: ${{ env.LOCAL_BRANCH }}
          crowdin_branch_name: ${{ env.CROWDIN_BRANCH }}

      - name: Download ko-KR
        uses: crowdin/github-action@1.0.9
        with:
          config: crowdin.yml
          upload_sources: false
          download_translations: true
          push_translations: false
          export_only_approved: true
          download_language: ko
          localization_branch_name: ${{ env.LOCAL_BRANCH }}
          crowdin_branch_name: ${{ env.CROWDIN_BRANCH }}

      - name: Download ja-JP
        uses: crowdin/github-action@1.0.9
        with:
          config: crowdin.yml
          upload_sources: false
          download_translations: true
          export_only_approved: true
          push_translations: false
          download_language: ja
          localization_branch_name: ${{ env.LOCAL_BRANCH }}
          crowdin_branch_name: ${{ env.CROWDIN_BRANCH }}

      - name: deploy-to-vercel
        uses: amondnet/vercel-action@v19.0.1+1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          scope: ${{ secrets.VERCEL_ORG_ID }}
          github-comment: false
