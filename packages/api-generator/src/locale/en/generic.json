{
  "props": {
    "activeClass": "The class applied to the component when it is in an active state",
    "attach": "Specifies which DOM element that this component should detach to. String can be any valid querySelector and Object can be any valid Node. This attachs to the root `v-app` component by default",
    "auto": "Centers list on selected element",
    "bgColor": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
    "clearable": "Add input clear functionality, default icon is Material Design Icons **mdi-clear**",
    "color": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
    "contentClass": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component",
    "disabled": "Removes the ability to click or target the component",
    "falseValue": "Sets value for falsy state",
    "fullWidth": "Sets the component width to 100%",
    "height": "Sets the height for the component",
    "items": "An array of strings or objects used for automatically generating children components",
    "noDataText": "Text shown when no items are provided to the component",
    "persistent": "Clicking outside or pressing **esc** key will not dismiss the dialog",
    "size": "Sets the height and width of the component.",
    "tag": "Specify a custom tag used on the root element",
    "textColor": "Applies a specified color to the control text - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)",
    "trueValue": "Sets value for truthy state",
    "valueComparator": "Apply a custom comparison algorithm used for values",
    "width": "Sets the width for the component"
  },
  "slots": {
    "activator": "When used, will activate the component when clicked (or hover for specific components). This manually stops the event propagation. Without this slot, if you open the component through its model, you will need to manually stop the event propagation",
    "append": "Adds an item inside the input and after input content",
    "default": "The default Vue slot.",
    "label": "Replaces the default label",
    "prepend": "Adds an item outside the input and before input content",
    "progress": "Slot for custom progress linear (displayed when **loading** prop is not equal to Boolean False)"
  },
  "events": {
    "click": "Event that is emitted when the component is clicked",
    "input": "The updated bound model",
    "update:modelValue": "Event that is emitted when the component's model changes"
  }
}
