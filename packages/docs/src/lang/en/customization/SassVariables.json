{
  "heading": "# SASS variables",
  "headingText": "Vuetify uses **SASS/SCSS** to craft the style and appearance of all aspects of the framework. Utilizing the _sass/scss data option_ of your `vue.config.js` file, you can optionally pass in custom variables to overwrite the global defaults. A list of available variables is located within each component's API section and in the [Variable API](#variable-api) of this page. This functionality is automatically handled by [vue-cli-plugin-vuetify](https://github.com/vuetifyjs/vue-cli-plugin-vuetify).",
  "variableApiDesc": "There are many SASS/SCSS variables that can be customized across the entire Vuetify framework. Below is an example of a custom **variables** file. You can find more information about available [variables](#variable-api) below:",
  "setupHeading": "## Vue CLI 3 install",
  "setupText1": "If you have not installed Vuetify, check out the [quick-start guide](/getting-started/quick-start#vue-cli-3-install). Once installed, create a folder called `sass`, `scss` or `styles` in your src directory with a file named `variables.scss` or `variables.sass`. The **vuetify-loader** will automatically bootstrap your variables into Vue CLI's compilation process, overwriting the framework defaults.",
  "setupText2": "When you run yarn serve, the vuetify-cli-plugin will automatically hoist the global Vuetify variables to all of your sass/scss files. When making changes to individual component variables, you will still need to manually include its variables file. You can find an example of a [custom variables](#example-variable-file) file below.",
  "sassAlert1": "Note: SASS/SCSS variables are only supported using [A-la-carte installation](/customization/a-la-carte). This is automatically setup when using the **vue-cli-plugin-vuetify** plugin.",
  "nuxtHeading1": "## Nuxt install",
  "nuxtText1a": "Coming soon. If you are interested in collaborating on this section, please reach out to _johnleider_ in the [community](https://community.vuetifyjs.com).",
  "caveatsHeading1": "## Caveats",
  "caveatsText1a": "When using sass variables, there are a few considerations to be aware of.",
  "caveatsHeading2": "### Importing in variable files",
  "caveatsText2a": "When using variable files, ensure that you **only** define or import other variables. The bootstrapped files will be added to every component and will cause duplicate CSS in your app. Below is an example of what **NOT** to do.",
  "caveatsHeading3": "### Compilation time",
  "caveatsText3a": "When using variables, the initial compilation of your application will increase. This is due to the fact that styles are updated in real time whenever you make a modification to a hoisted variable file. This is only experienced with the initial compilation step and can be improved by changing where you import Vuetify from. Keep in mind this _will not_ work if your application is affected by any of the [Vuetify loader limitations](/customization/a-la-carte#limitations); your application will still work, but not receive the performance increase.",
  "componentSassImportHeading1": "## Usage in components",
  "componentSassImportText1a": "There are two ways to import and use Vuetify variables within your components, both which provide the same outcome. The first method is to import the default framework styles file:",
  "componentSassImportText1b": "This is the preferred method if you are using [Presets](/customization/presets) or **not** using a variables file at all.",
  "componentSassImportText1c": "The second method is to import your project's _specific_ variables file. This is recommended if you are using your own variables file to import the global Vuetify styles.",
  "componentSassImportText1d": "Keep in mind, it _does not matter_ which syntax you use, SASS or SCSS, when importing and using variable files.",
  "webpackHeading": "## Webpack install",
  "webpackText1": "This section assumes you have already followed our Webpack guide on the [Quick start](/getting-started/quick-start#webpack-install) page. The option can vary depending upon the version of [sass-loader](https://github.com/webpack-contrib/sass-loader) you are use using. Ensure that you use the proper syntax when setting up the SASS/SCSS data options as they have different line endings. You can find more information about [prependData](https://github.com/webpack-contrib/sass-loader#prependdata) on sass-loader's Github page.",
  "exampleHeading1": "## Example variable file",
  "exampleText1a": "Below is an example of what a variable file looks like:"
}
