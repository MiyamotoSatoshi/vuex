{
  "header": "# SASS variables",
  "headerText": "Starting with version **2.0**, Vuetify is built using **SASS/SCSS**. Using the data option in your `vue.config.js`, we can also pass in custom variables. A list of available variables is located in each components' folder. In order to build the SASS file, you will need to configure your application to support [SASS](https://sass-lang.com/dart-sass) and [Fibers](https://github.com/laverdet/node-fibers). This can be selected when creating a new Vue application and is automatically handled by [vue-cli-plugin-vuetify](https://github.com/vuetifyjs/vue-cli-plugin-vuetify).",
  "setupHeading": "## vue-cli-3 Setup",
  "setupText1": "Once you have installed Vuetify into your vue-cli-3, create a folder called `sass` in your src directory with a file named `variables.scss` or `variables.sass`. When you run yarn serve, the vuetify-cli-plugin will automatically hoist the global Vuetify variables to all of your sass/scss files. When making changes to individual component variables, you will still need to manually include its variables file. Many of the Vuetify variables are using [SASS Lists](https://sass-lang.com/documentation/file.SASS_REFERENCE.html#lists) and must be updated with [map-merge](https://sass-lang.com/documentation/Sass/Script/Functions.html#map_merge-instance_method) as demonstrated below:",
  "setupText2": "When updating nested lists, this process can become daunting and end up taking a lot of vertical space:",
  "setupText3": "In order to alleviate this issue, you have 2 special functions available to your variables file, **map-deep-get** and **map-deep-set**. This will allow you to make your updates in a cleaner way.",
  "sassAlert1": "Note: SCSS/SASS variables are only supported using [A-la-carte installation](/customization/a-la-carte). This is automatically setup when using the **vue-cli-plugin-vuetify** plugin.",
  "setupText4": "The next time you run **yarn run serve**, Vue CLI 3 will inject the variables file into your style files. Under the hood, Vuetify global styles will be hoisted to the top of the compiled styles and used to override the default behavior.",
  "webpackHeading": "## Webpack Setup",
  "webpackText1": "This step is only necessary if you are modifying SASS Variables in a webpack project. If you are using vue-cli-3 with the **vue-cli-plugin-vuetify** plugin, this is handled automatically for you by creating a `variables.sass` or `variables.scss` file in the `src/sass` directory of your project. A detailed guide of how to setup the loader can be found on the [Quick start](/getting-started/quick-start#webpack-installation) page."
}
