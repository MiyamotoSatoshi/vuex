{
  "heading": "# Motion",
  "headingText": "Smooth animations help make a UI feel great. Using Vue's transition system and re-usable functional components, you can easily control the motion of your application. Most components can have their transition altered through the <code>transition</code> prop.",
  "examples": {
    "usage": {
      "desc": "Vuetify comes with over 10 custom css animations that can be applied to numerous components or your own custom use-case"
    },
    "slide-x-transitions": {
      "heading": "### Slide X transitions",
      "desc": "Slide x transitions move along the horizontal axis."
    },
    "slide-y-transitions": {
      "heading": "### Slide Y transitions",
      "desc": "Animations use the application's <code>$primary-transition</code>."
    },
    "scroll-x-transitions": {
      "heading": "### Scroll X transitions",
      "desc": "Scroll X transitions continue along the horizontal axis."
    },
    "scroll-y-transitions": {
      "heading": "### Scroll Y transitions",
      "desc": "Scroll Y transitions continue along the vertical axis."
    },
    "scale-transition": {
      "heading": "### Scale transition",
      "desc": "Many of Vuetify's components contain a <code>transition</code> prop which allows you to specify your own."
    },
    "fade-transition": {
      "heading": "### Fade transition",
      "desc": "Another example of the fade transition can be found on the Carousel component."
    },
    "expand-transition": {
      "heading": "### Expand transition",
      "desc": "The expand transition is used in Expansion Panels and List Groups. There is also a horizonal version available with `v-expand-x-transition`."
    },
    "custom-origin": {
      "heading": "### Custom Origin",
      "desc": "Programmatically control the transition origin with a simple prop."
    },
    "todo": {
      "heading": "### Todo list",
      "desc": "Using multiple custom transitions, it is easy to bring a simple todo list to life!"
    }
  },
  "createYourOwnHeader": "## Create your own",
  "createYourOwnText1": "You can use Vuetify's transition helper function to easily create your own custom transitions. This function will return an object that you can import into Vue. Using Vue's [functional component](https://vuejs.org/v2/guide/render-function.html#Functional-Components) option will make sure your transition is as efficient as possible. Simply import the function:",
  "createYourOwnText2": "The <code>createSimpleTransition</code> function accepts 1 argument, name. This will be the name that you can hook into with your style. This is an example of what <code>v-fade-transition</code> looks like:",
  "props": {
    "group": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)",
    "hideOnLeave": "Hides the leaving element (no exit animation)",
    "leaveAbsolute": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))",
    "mode": "Mixins.Transitionable.props.mode",
    "origin": "Mixins.Transitionable.props.origin"
  }
}
