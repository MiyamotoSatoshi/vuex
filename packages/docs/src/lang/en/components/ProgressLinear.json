{
  "header": "# Progress Linear",
  "headerText": "The `v-progress-linear` component is used to convey data visually to users. They can also represent an indeterminate amount, such as loading or processing.",
  "examples": {
    "usage": {
      "desc": "By default, progress circular uses the applications secondary color."
    },
    "linearDeterminate": {
      "header": "### Determinate",
      "desc": "The progress linear component can have a determinate state modified by `v-model`."
    },
    "linearIndeterminate": {
      "header": "### Indeterminate",
      "desc": "Just as with the progress circular component, progress linear has an indeterminate state."
    },
    "linearBuffer": {
      "header": "### Buffer",
      "desc": "A buffer state represents two values simultaneously. The primary value is controled by the model, whereas the buffer is controlled by the `buffer-value` prop."
    },
    "linearQueryIndeterminateAndDeterminate": {
      "header": "### Query Indeterminate and Determinate",
      "desc": "To query state is controlled by the truthiness of indeterminate with the query prop set to true."
    },
    "linearCustomHeightAndContextualColors": {
      "header": "### Custom height and contextual colors",
      "desc": "A custom height or contextual color can be applied to a progress bar. The bars primary color is your applications primary color."
    },
    "linearCustomColors": {
      "header": "### Custom colors",
      "desc": "You can also set the color using the props `color` and `background-color`."
    },
    "rounded": {
      "header": "### Rounded",
      "desc": "The **rounded** prop is an alternative style that adds a border radius to the progress component."
    },
    "loader": {
      "header": "### Toolbar loader",
      "desc": "Using the **absolute** prop we are able to position the `v-progress-linear` component at the bottom of the `v-toolbar` one. We also use the **active** prop which allows us to control the visibility of the progress."
    },
    "stream": {
      "header": "### Stream",
      "desc": "The **stream** property works with **buffer-value** to convey to the user that there is some action taking place. You can use any combination of **buffer-value** and **value** to achieve your design."
    },
    "striped": {
      "header": "### Striped",
      "desc": "This applies a striped background over the value portion of the `v-progress-linear`."
    },
    "slot": {
      "header": "### Slots and Scoped Slots",
      "desc": "The `v-progress-linear` component will be responsive to user input when using **v-model**. You can use a default **scoped slot** or bind a local model to display inside of the progress. If you are looking for advanced features on a linear type component, check out [v-slider](/components/sliders)."
    }
  },
  "props": {
    "active": "Components.ProgressCircular.props.active",
    "backgroundColor": "Components.ProgressCircular.props.backgroundColor",
    "backgroundOpacity": "Components.ProgressCircular.props.backgroundOpacity",
    "bufferValue": "Components.ProgressCircular.props.bufferValue",
    "fill": "Components.ProgressCircular.props.fill",
    "indeterminate": "Components.ProgressCircular.props.indeterminate",
    "query": "Animates like **indeterminate** prop but inverse",
    "rounded": "Adds a border radius to the progress component",
    "size": "Components.ProgressCircular.props.size",
    "stream": "An alternative style for portraying loading that works in tandem with **buffer-value**",
    "striped": "Adds a stripe background to the filled portion of the progress component",
    "value": "Components.ProgressCircular.props.value"
  },
  "scopedSlots": {
    "default": "Provides the current value of the component"
  }
}
