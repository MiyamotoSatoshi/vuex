{
  "heading": "# Buttons",
  "headingText": "The `v-btn` component replaces the standard html button with a material design theme and a multitude of options. Any color helper class can be used to alter the background or text color.",
  "alert": "`v-btn` is the only component that behaves differently when using the **dark** prop. Normally components use the **dark** prop to denote that they have a dark colored background and need their text to be white. While this will work for `v-btn`, it is advised to only use the prop when the button **IS ON** a colored background due to the disabled state blending in with white backgrounds. If you need white text, simply add the **white--text** class.",
  "usageText": "Buttons in their simplest form contain uppercase text, a slight elevation, hover effect, and a ripple effect on click.",
  "examples": {
    "flat": {
      "heading": "### Flat",
      "desc": "Flat buttons have no box shadow and no background. Only on hover is the container for the button shown."
    },
    "raised": {
      "heading": "### Raised",
      "desc": "Raised buttons have a box shadow that increases when clicked. This is the default style."
    },
    "depressed": {
      "heading": "### Depressed",
      "desc": "Depressed buttons still maintain their background color, but have no box shadow."
    },
    "dropdown": {
      "heading": "### Button Dropdown Variants",
      "desc": "Button dropdowns are regular selects with additional styling.",
      "uninverted": true
    },
    "icon": {
      "heading": "### Icon",
      "desc": "Icons can be used for the primary content of a button."
    },
    "floating": {
      "heading": "### Floating",
      "desc": "Floating buttons are rounded and usually contain an icon."
    },
    "loaders": {
      "heading": "### Loaders",
      "desc": "Using the loading prop, you can notify a user that there is processing taking place. The default behavior is to use a `v-progress-circular` component but this can be customized."
    },
    "sizing": {
      "heading": "### Sizing",
      "desc": "Buttons can be given different sizing options to fit a multitude of scenarios."
    },
    "outlined": {
      "heading": "### Outlined",
      "desc": "Outlined buttons inherit their borders from the current color applied."
    },
    "rounded": {
      "heading": "### Rounded",
      "desc": "Rounded buttons behave the same as regular buttons but have rounded edges."
    },
    "tile": {
      "heading": "### Tile",
      "desc": "Tile buttons behave the same as regular buttons but have no border radius."
    },
    "block": {
      "heading": "### Block",
      "desc": "Block buttons extend the full available width."
    }
  },
  "props": {
    "v-btn": {
      "block": "Expands the button to 100% of available space.",
      "depressed": "Removes the button box shadow.",
      "fab": "Designates the button as a floating-action-button - _round_.",
      "icon": "Designates the button as icon - _round and flat_",
      "inputValue": "Controls the button's active state.",
      "left": "Aligns the component towards the left. This should be used with the **absolute** or **fixed** props.",
      "loading": "Adds a loading icon animation",
      "outlined": "Makes the background transparent and applies a thin border.",
      "right": "Aligns the component towards the right. This should be used with the **absolute** or **fixed** props.",
      "rounded": "Applies a large border radius on the button.",
      "text": "Makes the background transparent.",
      "type": "Set the button's **type** attribute",
      "value": "Mixins.Groupable.props.value",
      "retainFocusOnClick": "Don't blur on click."
    },
    "v-btn-toggle": {
      "rounded": "Applies a large border radius on the buttons."
    }
  },
  "events": {
    "v-btn-toggle": {
      "change": "Components.Inputs.events.change"
    }
  },
  "slots": {
    "v-btn": {
      "loader": "Custom loader"
    }
  }
}
