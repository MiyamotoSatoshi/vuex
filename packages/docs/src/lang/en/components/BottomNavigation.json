{
  "heading": "# Bottom navigation",
  "headingText": "The `v-bottom-navigation` is an alternative to the sidebar. It is primarily used on mobile and comes in two variants, icons and text, and shift.",
  "examples": {
    "usage": {
      "desc": "While the bottom nav is meant to be used with the `vue-router`, you can also programmatically control the active state of the buttons by using the `active.sync` prop. You can change a button's value by using its `value` attribute."
    },
    "color": {
      "heading": "### Color",
      "desc": "The `color` prop applies a color to the background the bottom navigation. It is recommended to use the `light` and `dark` props to properly contrast text color."
    },
    "grow": {
      "heading": "### Grow",
      "desc": "If `v-bottom-navigation` has `grow` property, buttons within it grow to fill available space."
    },
    "horizontal": {
      "heading": "### Horizontal",
      "desc": "The `horizontal` prop, places nav text next to the icon as appose to beneath it."
    },
    "shift": {
      "heading": "### Shift",
      "desc": "The `shift` prop will hide the button text until active. For this to work, `v-btn` text is required to be wrapped in a `<span>` tag."
    },
    "toggle": {
      "heading": "### Toggle",
      "desc": "The display state of `v-bottom-navigation` can be toggled using the `input-value` prop. You can also control the currently active button using `v-model`."
    },
    "hide-on-scroll": {
      "heading": "### Hide on scroll",
      "desc": "Hide-on-scroll hides `v-bottom-navigation` when target element is scrolled."
    },
    "scroll-threshold": {
      "heading": "### Scroll threshold",
      "desc": "`scroll-threshold` property allows you to customize the threshold you can scroll before `v-bottom-navigation` disappears."
    }
  },
  "props": {
    "absolute": "Mixins.Positionable.props.absolute",
    "activeClass": "The class applied to a [v-btn](/components/buttons) when activated.",
    "backgroundColor": "Changes the background-color for the component.",
    "fixed": "Mixins.Positionable.props.fixed",
    "grow": "Force [v-btn](/components/buttons)s to take up all available space.",
    "hideOnScroll": "Will transition the navigation off screen when scrolling up.",
    "horizontal": "Uses an alternative horizontal styling for [v-btn](/components/buttons).",
    "inputValue": "Controls whether the component is visible or hidden. Supports the **.sync** modifier.",
    "mandatory": "Mixins.BaseItemGroup.props.mandatory",
    "shift": "Hides text of [v-btn](/components/buttons)s when they are not active.",
    "value": "Holds the value of the currently active [v-btn](/components/buttons). If the button has no value supplied, its index will be used instead.."
  },
  "events": {
    "change": "The value of currently selected button. If no value is assigned, will be the current index of the button.",
    "update:input-value": "The event used for `input-value.sync`."
  }
}
