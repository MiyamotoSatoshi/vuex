{
  "heading": "# Skeleton loaders",
  "headingText": "The `v-skeleton-loader` component is a versatile tool that can fill many roles within a project.  At its heart, the component provides an indication to the user that something is coming but not yet available. There are over 30 pre-defined options available that can be combined to make custom examples.",
  "accessibility": {
    "desc": "By default, the `v-skeleton-loader` component is assigned a [WAI-ARIA](https://www.w3.org/WAI/standards-guidelines/aria/) role of [**alert**](https://www.w3.org/TR/wai-aria/#alert). We augment this role with two aria properties. An [**aria-busy**](https://www.w3.org/TR/wai-aria-1.0/states_and_properties#aria-busy) value of **true** denotes that a widget is missing required owned elements. An [**aria-live**](https://www.w3.org/TR/wai-aria-1.1/#aria-live) value of **polite** sets the screen reader's priority of live regions."
  },
  "examples": {
    "usage": {
      "desc": "The `v-skeleton-loader` component provides a user with a visual indicator that content is coming / loading. This is better received than traditional full-screen loaders."
    },
    "boilerplate": {
      "heading": "### Boilerplate component",
      "desc": "The `v-skeleton-loader` can be used as boilerplate designs when creating mockups. Mix and match various pre-defined options or create your own unique implementations. In this example, we are extending the `v-skeleton-loader` into a new component called `v-boilerplate` for use as a functional boilerplate component."
    },
    "implementation": {
      "heading": "### Implementation methods",
      "desc": "There are 2 ways that you can utilize the `v-skeleton-component`. The **default slot** or a **v-if** conditional. The built in slot is the most convenient and easiest to use, but generates an extra div once rendered. If the extra div is an issue in your setup, you can utilize a **v-if** conditional with a Vuetify [transition component](/styles/transitions) or a custom one."
    }
  },
  "props": {
    "boilerplate": "Remove the loading animation from the skeleton",
    "tile": "Components.Sheets.props.tile",
    "loading": "Applies loading style to cursor on hover",
    "type": "A string delimited list of skeleton components to create such as `type=\"text@3\"` or `type=\"card, list-item\"`. Will recursively generate a corresponding skeleton from the provided string. Also supports short-hand for multiple elements such as **article@3** and **paragraph@2** which will generate 3 _article_ skeletons and 2 _paragraph_ skeletons. Please see below for a list of available pre-defined options.",
    "types": "A custom types object that will be combined with the pre-defined options. For a list of available pre-defined options, see the **type** prop."
  }
}
