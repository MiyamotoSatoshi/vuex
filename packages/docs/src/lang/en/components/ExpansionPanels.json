{
  "heading": "# Expansion panels",
  "headingText": "The `v-expansion-panel` component is useful for reducing vertical space with large amounts of information. The default functionality of the component is to only display one expansion-panel body at a time; however, with the `multiple` property, the expansion-panel can remain open until explicitly closed.",
  "examples": {
    "usage": {
      "desc": "Expansion panels in their simplest form display a list of expandable items."
    },
    "external": {
      "heading": "### External control",
      "desc": "Expansion panels can be controlled externally by modifying the `v-model`. Its value corresponds to a zero-based index of the currently opened expansion panel content. If `multiple` prop is used then it is an array containing the indices of the open items."
    },
    "disabled": {
      "heading": "### Disabled",
      "desc": "Both the expansion-panel and its content can be disabled using the `disabled` prop."
    },
    "readonly": {
      "heading": "### Readonly",
      "desc": "`readonly` prop does the same thing as `disabled`, but it doesn't touch styles."
    },
    "popout": {
      "heading": "### Popout",
      "desc": "The expansion-panel also has **popout** design. With it, expansion-panel is enlargened when activated."
    },
    "inset": {
      "heading": "### Inset",
      "desc": "**inset** expansion-panel becomes smaller when activated."
    },
    "accordion": {
      "heading": "### Accordion",
      "desc": "**accordion** expansion-panel hasn't got margins around active panel."
    },
    "custom-icons": {
      "heading": "### Custom icon",
      "desc": "Expand action icon can be customized with `expand-icon` prop or the `actions` slot."
    },
    "focusable": {
      "heading": "### Focusable",
      "desc": "The expansion-panel headers can be made focusable with the prop `focusable`."
    },
    "advanced": {
      "heading": "### Advanced",
      "desc": "The expansion panel component provides a rich playground to build truly advanced implementations. Here we take advantage of slots in the `v-expansion-panel-header` component to react to the state of being open or closed by fading content in and out.",
      "uninverted": true
    }
  },
  "props": {
    "v-expansion-panels": {
      "accordion": "Removes the margin around open panels",
      "disabled": "Disables the entire expansion-panel",
      "expand": "Leaves the expansion-panel open while selecting another",
      "focusable": "Makes the expansion-panel headers focusable",
      "flat": "Removes the expansion-panel's elevation and borders",
      "hover": "Applies a background-color shift on hover to expansion panel headers",
      "inset": "Makes the expansion-panel open with a inset style",
      "popout": "Makes the expansion-panel open with an popout style",
      "readonly": "Makes the entire expansion-panel read only.",
      "tile": "Removes the border-radius",
      "value": "Controls the opened/closed state of content in the expansion-panel. Corresponds to a zero-based index of the currently opened content. If the `multiple` prop (previously `expand` in 1.5.x) is used then it is an array of numbers where each entry corresponds to the index of the opened content.  The index order is not relevant."
    },
    "v-expansion-panel": {
      "disabled": "Disables the expansion-panel content",
      "readonly": "Makes the expansion-panel content read only.",
      "value": "Controls the opened/closed state of content"
    },
    "v-expansion-panel-header": {
      "disableIconRotate": "Removes the icon rotation animation when expanding a panel",
      "expandIcon": "Set the expand action icon",
      "hideActions": "Hide the expand icon in the content header",
      "ripple": "Mixins.Rippleable.props.ripple"
    }
  },
  "events": {
    "v-expansion-panel": {
      "change": "Toggles the value of the selected panel",
      "click": "Mouse click event"
    },
    "v-expansion-panel-header": {
      "click": "Mouse click event"
    }
  },
  "slots": {
    "v-expansion-panel-header": {
      "actions": "Expansion header actions"
    }
  }
}
