{
  "heading": "# Chips",
  "headingText": "The `v-chip` component is used to convey small pieces of information. Using the `close` property, the chip becomes interactive, allowing user interaction. This component is used by the [v-chip-group](/components/chip-groups) for advanced selection options.",
  "usageText": "Chips come in the following variations: Default, closeable, filter, outlined, pill. The default slot of `v-chip` will also accept avatars and icons alongside text.",
  "examples": {
    "colored": {
      "heading": "### Colored",
      "desc": "Any color from the Material Design palette can be used to change a chips color."
    },
    "icon": {
      "heading": "### Icon",
      "desc": "Chips can use text or any icon available in the Material Icons font library."
    },
    "outlined": {
      "heading": "### Outlined",
      "desc": "Outlined chips inherit their border color from the current text color."
    },
    "label": {
      "heading": "### Label",
      "desc": "Label chips use the `v-card` border-radius."
    },
    "closable": {
      "heading": "### Closable",
      "desc": "Closable chips can be controlled with a v-model. You can also listen to the `click:close` event if you want to know when a chip has been closed.",
      "uninverted": true
    },
    "in-selects": {
      "heading": "### In selects",
      "desc": "Selects can use chips to display the selected data. Try adding your own tags below.",
      "uninverted": true
    },
    "photos": {
      "heading": "### Custom lists",
      "desc": "In this example we opt to use a customized list instead of [v-autocomplete](/components/autocompletes). This allows us to always display the options available while still providing the same functionality of search and selection."
    },
    "action-chips": {
      "heading": "### Action chips",
      "desc": "Chips can be used as actionable items. Provided with a _click_ event, the chip becomes interactive and can invoke methods."
    },
    "filtering": {
      "heading": "### Additional filtering",
      "desc": "Chips are great for providing supplementary actions to a particular task. In this instance, we are searching a list of items and collecting a subset of information to display available keywords."
    },
    "expandable": {
      "heading": "### Expandable",
      "desc": "Chips can be combined with `v-menu` to enable a specific set of actions for a chip."
    },
    "sizes": {
      "heading": "### Sizes",
      "desc": "`v-chip` component can have various sizes from `x-small` to `x-large`."
    },
    "draggable": {
      "heading": "### Draggable",
      "desc": "`draggable` `v-chip` component can be dragged by mouse."
    },
    "filter": {
      "heading": "### Filter",
      "desc": "`v-chip` component has `filter` option which shows an additional icon to you if chip is active. It can be customized using `filter-icon`."
    },
    "no-ripple": {
      "heading": "### No ripple",
      "desc": "`v-chip` can be rendered without ripple if `ripple` prop is set to `false`."
    }
  },
  "props": {
    "active": "Determines whether the chip is visible or not.",
    "close": "Adds remove button",
    "closeIcon": "Change the default icon used for **close** chips",
    "disabled": "Disables the chip, making it un-selectable",
    "draggable": "Makes the chip draggable",
    "filter": "Displays a selection icon when selected",
    "filterIcon": "Change the default icon used for **filter** chips",
    "inputValue": "Controls the **active** state of the item. This is typically used to highlight the component.",
    "label": "Removes circle edges",
    "link": "Explicitly define the chip as a link",
    "outlined": "Removes background and applies border and text color",
    "pill": "Remove `v-avatar` padding",
    "value": "The value used when a child of a [v-chip-group](/components/chip-groups)."
  },
  "events": {
    "click": "Emitted when component is clicked, toggles chip if contained in a chip group - Will trigger component to ripple when clicked unless the `.native` modifier is used",
    "click:close": "Emitted when close icon is clicked",
    "update:active": "Emitted when close icon is clicked, sets active to `false`"
  }
}
