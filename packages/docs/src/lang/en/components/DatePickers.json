{
  "examples": {
    "dateAllowedDates": {
      "desc": "You can specify allowed dates using arrays, objects, and functions.",
      "header": "### Date pickers - Allowed dates"
    },
    "dateBirthday": {
      "desc": "Starting with year picker by default, resticting dates range and closing the picker menu after selecting the day make the perfect birthday picker.",
      "header": "### Date pickers - birthday picker"
    },
    "dateColorable": {
      "desc": "Date picker colors can be set using the `color` and `header-color` props. If `header-color` prop is not provided header will use the `color` prop value.",
      "header": "### Date pickers - Colors"
    },
    "dateCurrent": {
      "desc": "By default the current date is displayed using outline button - **show-current** prop allows you to remove the border or select different date to be displayed as the current one.",
      "header": "### Date pickers - current date indicator"
    },
    "dateDialogAndMenu": {
      "desc": "When integrating a picker into a `v-text-field`, it is recommended to use the **readonly** prop. This will prevent mobile keyboards from triggering. To save vertical space, you can also hide the picker title.  \n\n  Pickers expose a scoped slot that allow you to hook into save and cancel functionality. This will maintain an old value which can be replaced if the user cancels.",
      "header": "### Date pickers - In dialog and menu"
    },
    "dateEvents": {
      "desc": "You can specify events using arrays, objects or functions. To change the default color of the event use **event-color** prop. Your **events** function or object can return an array of colors (material or css) in case you want to display multiple event indicators.",
      "header": "### Date pickers - Events"
    },
    "dateFormatting": {
      "desc": "If you need to display date in the custom format (different than YYYY-MM-DD) you need to use the formatting function.",
      "header": "### Date pickers - formatting date"
    },
    "dateFormattingMomentDatefns": {
      "desc": "Formatting dates is possible also with external libs such as Moment.js or date-fns",
      "header": "### Date pickers - formatting date using external libs"
    },
    "dateIcons": {
      "desc": "You can override the default icons used in the picker.",
      "header": "### Date pickers - icons"
    },
    "dateInternationalization": {
      "desc": "The date picker supports internationalization through the JavaScript Date object. Specify a BCP 47 language tag using the `locale` prop, and then set the first day of the week with the `first-day-of-week` prop.",
      "header": "### Date pickers - Internationalization"
    },
    "dateMultiple": {
      "desc": "Date picker can now select multiple dates with the `multiple` prop. If using `multiple` then date picker expects its model to be an array.",
      "header": "### Date pickers - Mutiple"
    },
    "datePickerDate": {
      "desc": "You can watch the `pickerDate` which is the displayed month/year (depending on the picker type and active view) to perform some action when it changes.",
      "header": "### Date pickers - react to displayed month/year change"
    },
    "dateReadonly": {
      "desc": "Selecting new date could be disabled by adding **readonly** prop.",
      "header": "### Date pickers - read only"
    },
    "dateWidth": {
      "desc": "You can specify allowed the picker's width or make it full width.",
      "header": "### Date pickers - Setting picker width"
    },
    "monthAllowedMonths": {
      "desc": "You can specify allowed months using arrays, objects or functions.",
      "header": "### Month pickers - Allowed months"
    },
    "monthColorable": {
      "desc": "Month picker colors can be set using the `color` and `header-color` props. If `header-color` prop is not provided header will use the `color` prop value.",
      "header": "### Month pickers - Colors"
    },
    "monthCurrent": {
      "desc": "By default the current month is displayed using outline button - **show-current** prop allows you to remove the border or select different month to be displayed as the current one.",
      "header": "### Month pickers - current month indicator"
    },
    "monthDialogAndMenu": {
      "desc": "When integrating a picker into a `v-text-field`, it is recommended to use the **readonly** prop. This will prevent mobile keyboards from triggering. To save vertical space, you can also hide the picker title. \n\n Pickers expose a scoped slot that allow you to hook into save and cancel functionality. This will maintain an old value which can be replaced if the user cancels.",
      "header": "### Month pickers - In dialog and menu"
    },
    "monthEvents": {
      "desc": "You can specify events using arrays, objects or functions. To change the default color of the event use **event-color** prop. Your **events** function or object can return an array of colors (material or css) in case you want to display multiple event indicators.",
      "header": "### Month pickers - Events"
    },
    "monthIcons": {
      "desc": "You can override the default icons used in the picker.",
      "header": "### Month pickers - icons"
    },
    "monthInternationalization": {
      "desc": "The month picker supports internationalization through the JavaScript Date object. Specify a BCP 47 language tag using the `locale` prop, and then set the first day of the week with the `first-day-of-week` prop.",
      "header": "### Month pickers - Internationalization"
    },
    "monthLight": {
      "desc": "Month pickers come in two orientation variations, portrait **(default)** and landscape.",
      "header": "### Month pickers"
    },
    "monthMultiple": {
      "desc": "Month pickers can now select multiple months with the `multiple` prop. If using `multiple` then the month picker expects its model to be an array.",
      "header": "### Month pickers - Multiple"
    },
    "monthReadonly": {
      "desc": "Selecting new date could be disabled by adding **readonly** prop.",
      "header": "### Month pickers - read only"
    },
    "monthWidth": {
      "desc": "You can specify allowed the picker's width or make it full width.",
      "header": "### Month pickers - Setting picker width"
    },
    "usage": {
      "desc": "Date pickers come in two orientation variations, portrait **(default)** and landscape. By default they are emitting `input` event when the day (for date picker) or month (for month picker), but with **reactive** prop they can update the model even after clicking year/month."
    }
  },
  "header": "# Date/month picker",
  "headerText": "The `v-date-picker` is stand-alone component that can be utilized in many existing Vuetify components. It offers the user a visual representation for selecting date/month.",
  "props": {
    "disabled": "Disables interaction with the picker",
    "allowedDates": "Restricts which dates can be selected",
    "dayFormat": "Allows you to customize the format of the day string that appears in the date table. Called with date (ISO 8601 string) arguments.",
    "eventColor": "Sets the color for event dot. It can be string (all events will have the same color) or `object` where attribute is the event date and value is boolean/color/array of colors for specified date or `function` taking date as a parameter and returning boolean/color/array of colors for that date",
    "events": "Array of dates or object defining events or colors or function returning boolean/color/array of colors",
    "firstDayOfWeek": "Sets the first day of the week, starting with 0 for Sunday.",
    "headerDateFormat": "Allows you to customize the format of the month string that appears in the header of the calendar. Called with date (ISO 8601 string) arguments.",
    "locale": "Sets the locale. Accepts a string with a BCP 47 language tag.",
    "max": "Maximum allowed date/month (ISO 8601 format)",
    "min": "Minimum allowed date/month (ISO 8601 format)",
    "monthFormat": "Formatting function used for displaying months in the months table. Called with date (ISO 8601 string) arguments.",
    "multiple": "Allow the selection of multiple dates",
    "nextIcon": "Sets the icon for next month/year button",
    "pickerDate": "Displayed year/month",
    "prevIcon": "Sets the icon for previous month/year button",
    "reactive": "Updates the picker model when changing months/years automatically",
    "readonly": "Makes the picker readonly (doesnt't allow to select new date)",
    "scrollable": "Allows changing displayed month with mouse scroll",
    "showCurrent": "Toggles visibility of the current date/month outline or shows the provided date/month as a current",
    "showWeek": "Toggles visibility of the week numbers in the body of the calendar",
    "titleDateFormat": "Allows you to customize the format of the date string that appears in the title of the date picker. Called with date (ISO 8601 string) arguments.",
    "type": "Determines the type of the picker - `date` for date picker, `month` for month picker",
    "value": "Date picker model (ISO 8601 format, YY-mm-dd or YY-mm)",
    "weekdayFormat": "Allows you to customize the format of the weekday string that appears in the body of the calendar. Called with date (ISO 8601 string) arguments.",
    "yearFormat": "Allows you to customize the format of the year string that appears in the header of the calendar. Called with date (ISO 8601 string) arguments.",
    "yearIcon": "Sets the icon in the year selection button"
  },
  "functions": {
    "allowedDates": "Checks if date is allowed by picker",
    "dayFormat": "Formats day string that appears in the date table to specified locale",
    "headerDateFormat": "Formats current date string that appears in the header to specified locale",
    "monthFormat": "Formats month string that appears in the months table to specified locale",
    "titleDateFormat": "Formats date string that appears in the title to specified locale",
    "yearFormat": "Formats year string that appears in the header to specified locale"
  }
}
