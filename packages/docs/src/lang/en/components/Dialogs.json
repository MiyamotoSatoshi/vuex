{
  "heading": "# Dialogs",
  "headingText": "The `v-dialog` component inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks. Use dialogs sparingly because they are interruptive.",
  "examples": {
    "usage": {
      "desc": "A dialog contains two slots, one for its activator and one for its content (default). Good for Privacy Policies."
    },
    "without-activator": {
      "heading": "### Without activator",
      "desc": "If for some reason you are unable to use the activator slot, be sure to add the `.stop` modifier to the event that triggers the dialog.",
      "uninverted": true
    },
    "modal": {
      "heading": "### Modal",
      "desc": "Similar to a Simple Dialog, except that it's not dismissed when touching outside.",
      "uninverted": true
    },
    "fullscreen": {
      "heading": "### Fullscreen",
      "desc": "Due to limited space, full-screen dialogs may be more appropriate for mobile devices than dialogs used on devices with larger screens.",
      "uninverted": true
    },
    "form": {
      "heading": "### Form",
      "desc": "Just a simple example of a form in a dialog.",
      "uninverted": true
    },
    "scrollable": {
      "heading": "### Scrollable",
      "desc": "Example of a dialog with scrollable content.",
      "uninverted": true
    },
    "overflowed": {
      "heading": "### Overflowed",
      "desc": "Modals that do not fit within the available window space will scroll the container.",
      "uninverted": true
    },
    "advanced": {
      "heading": "### Nested dialogs",
      "desc": "Dialogs can be nested: you can open one dialog from another.",
      "uninverted": true
    },
    "loader": {
      "heading": "### Loader",
      "desc": "The `v-dialog` component makes it easy to create a customized loading experience for your application."
    }
  },
  "props": {
    "dark": "Mixins.Themeable.props.dark",
    "fullWidth": "Forces the dialog to expand 100% of available width.",
    "fullscreen": "Changes layout for fullscreen display.",
    "internalActivator": "Detaches the menu content inside of the component as opposed to the document.",
    "eager": "Mixins.Bootable.props.eager",
    "light": "Mixins.Themeable.props.light",
    "maxWidth": "Mixins.Measurable.props.maxWidth",
    "noClickAnimation": "Disables the bounce effect when clicking outside of a `v-dialog`'s content when using the **persistent** prop.",
    "openOnHover": "Designates whether component should activate when its activator is hovered.",
    "origin": "Mixins.Transitionable.props.origin",
    "persistent": "Clicking outside of the element will not deactivate it.",
    "retainFocus": "Tab focus will return to the first child of the dialog by default. Disable this when using external tools that require focus such as TinyMCE or vue-clipboard.",
    "scrollable": "When set to true, expects a `v-card` and a `v-card-text` component with a designated height. For more information, check out the [scrollabe example](/components/dialogs#scrollable).",
    "transition": "Mixins.Transitionable.props.transition",
    "width": "Mixins.Measurable.props.width"
  },
  "events": {
    "click:outside": "Event that fires when clicking outside an active dialog.",
    "keydown": "Event that fires when key is pressed. If dialog is active and not using the **persistent** prop, the **esc** key will deactivate it."
  }
}
