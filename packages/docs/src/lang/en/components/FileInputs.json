{
  "header": "# File inputs",
  "headerText": "The `v-file-input` component is a specialized input that provides a clean interface for selecting files, showing detailed selection information and upload progress. It is meant to be a direct replacement for a standard file input.",
  "examples": {
    "usage": {
      "desc": "At its core, the `v-file-input` component is a basic container that extends [v-text-field](/components/text-fields)."
    },
    "multiple": {
      "header": "### Multiple",
      "desc": "The `v-file-input` can contain multiple files at the same time when using the **multiple** prop."
    },
    "accept": {
      "header": "### Accept formats",
      "desc": "`v-file-input` component can accept only specific media formats/file types if you want. For more information, checkout the documentation on the [accept attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept)."
    },
    "chips": {
      "header": "### With chips",
      "desc": "A selected file can be displayed as a [chip](/components/chips). When using the **chips** and **multiple** props, each chip will be displayed (as opposed to the file count)."
    },
    "size": {
      "header": "### Size displaying",
      "desc": "The displayed size of the selected file(s) can be configured with the **show-size** property. Display sizes can be either _1024_ (the default used when providing **true**) or _1000_."
    },
    "counter": {
      "header": "### Counter",
      "desc": "When using the **show-size** property along with **counter**, the total number of files and size will be displayed under the input."
    },
    "selection": {
      "header": "### Selection slot",
      "desc": "Using the `selection` slot, you can customize the appearance of your input selections. This is typically done with [chips](/components/chips), however any component or markup can be used."
    },
    "custom-icon": {
      "header": "### Custom icons",
      "desc": "The `v-file-input` has a default prepended icon that can be set on the component or adjusted globally. More information on changing global components can be found on the [customizing icons page](/customization/icons)."
    },
    "validation": {
      "header": "### Validation",
      "desc": "Similar to other inputs, you can use the **rules** prop to can create your own custom validation parameters."
    },
    "advanced": {
      "header": "### Complex selection slots",
      "desc": "The flexibility of the selection slot allows you accomodate complex use-cases. In this example we show the first 2 selections as chips while adding a number indicator for the remaining amount."
    }
  },
  "props": {
    "accept": "One or more [unique file type specifiers](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Unique_file_type_specifiers) describing file types to allow.",
    "chips": "Components.Selects.props.chips",
    "counterSizeString": "The text displayed when using the **counter** and **show-size** props. Can also be customized globally on the [internationalization page](/customization/internationalization).",
    "counterString": "The text displayed when using the **counter** prop. Can also be customized globally on the [internationalization page](/customization/internationalization).",
    "multiple": "Adds the **multiple** attribute to the input, allowing multiple file selections.",
    "showSize": "Sets the displayed size of selected file(s). When using **true** will default to _1000_ displaying (**kB, MB, GB**) while _1024_ will display (**KiB, MiB, GiB**).",
    "smallChips": "Components.Selects.props.smallChips",
    "truncateLength": "The length of a filename before it is truncated with ellipsis",
    "value": "A single or array of [File objects](https://developer.mozilla.org/en-US/docs/Web/API/File)."
  },
  "slots": {
    "selection": "Slot for defining a custom appearance for selected item(s). Provides the current **index**, **text** (truncated) and [file](https://developer.mozilla.org/en-US/docs/Web/API/File)."
  },
  "events": {
    "change": "Components.Inputs.events.change"
  }
}
