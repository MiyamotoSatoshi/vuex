{
  "header": "# Card",
  "headerText": "The `v-card` component is a versatile component that can be used for anything from a panel to a static image. The **card** component has numerous helper components to make markup as easy as possible. Components that have no listed options use **Vue's** functional component option for faster rendering and serve as markup sugar to make building easier.",
  "examples": {
    "usage": {
      "desc": "A card has 3 basic components, `v-card-title`, `v-card-text` and `v-card-actions`."
    },
    "infoCard": {
      "header": "### Information card",
      "desc": "Cards are entry points to more detailed information. To keep things concise, ensure to limit the number of actions the user can take."
    },
    "mediaWithText": {
      "header": "### Media with text",
      "desc": "Using the layout system, we can add custom text anywhere within the background."
    },
    "outlined": {
      "header": "### Outlined cards",
      "desc": "An **outlined** card has 0 elevation and contains a soft border."
    },
    "horizontal": {
      "header": "### Horizontal cards",
      "desc": "Using `v-flex`, you can create customized horizontal cards. Use the `contain` property to shrink the `v-img` to fit inside the container, instead of covering."
    },
    "grids": {
      "header": "### Grids",
      "desc": "Using grid lists, you can create beautiful layouts."
    },
    "customActions": {
      "header": "### Custom actions",
      "desc": "With a simple conditional, you can easily add supplementary text that is hidden until opened."
    },
    "twitterCard": {
      "header": "### Twitter card",
      "desc": "The `v-card` component has multiple children components that help you build complex examples without having to worry about spacing. This example is comprised of the `v-card-title`, `v-card-text` and `v-card-actions` components."
    },
    "loading": {
      "header": "### Loading card",
      "desc": "Cards can be set to a loading state when processing a user action. This disables further actions and provides visual feedback with an indeterminate [v-progress-linear](/components/progress-linear)."
    },
    "weather": {
      "header": "### Weather card",
      "desc": "Using [v-list-items](/components/lists) and a [v-slider](/components/sliders), we are able to create a unique weather card. The list components ensure that we have consistent spacing and functionality while the slider component allows us to provide a useful interface of selection to the user."
    },
    "advanced": {
      "header": "### Advanced",
      "desc": "Using `v-list-item` and `v-img` allows us to create unique card layouts in an advanced setting"
    },
    "intermediate": {
      "header": "### Intermediate",
      "desc": "The `v-card` component is useful for wrapping content."
    }
  },
  "cardMediaWarning": "`v-card-media` is deprecated, use `v-img` instead.",
  "props": {
    "alt": "Components.Images.props.alt",
    "aspectRatio": "Components.Images.props.aspectRatio",
    "contain": "Change the background-size to contain.",
    "flat": "Removes card box shadow",
    "gradient": "Components.Images.props.gradient",
    "height": "Manually define the height of the card",
    "hover": "Apply a higher elevation on hover",
    "img": "Specifies an image background",
    "lazySrc": "Components.Images.props.lazySrc",
    "link": "Applies styles as if element were a link",
    "outlined": "Removes card elevation shadow and adds a 1px border",
    "position": "Components.Images.props.position",
    "primaryTitle": "Applies primary title specific padding.",
    "raised": "Specifies a higher default elevation",
    "sizes": "Components.Images.props.sizes",
    "src": "The image to display as a background.",
    "srcset": "Components.Images.props.srcset",
    "transition": "Components.Images.props.transition"
  }
}
