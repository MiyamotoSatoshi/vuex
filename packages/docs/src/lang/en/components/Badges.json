{
  "heading": "# Badges",
  "headingText": "The `v-badge` component superscripts or subscripts an avatar-like icon or text onto content to highlight information to a user or to just draw attention to a specific element. Content within the badge usually contains numbers or icons.",
  "usageText": "Badges in their simplest form display to the upper right of the content that it wraps and requires the badge slot.",
  "examples": {
    "tabs": {
      "heading": "### Tabs",
      "desc": "Badges help convey information to the user in a variety of ways."
    },
    "hover": {
      "heading": "### Show-on-hover",
      "desc": "You can do many things with visibility control, for example, show badge on hover."
    },
    "dynamic": {
      "heading": "### Dynamic notifications",
      "desc": "You can incorporate badges with dynamic content to make things such as a notification system."
    },
    "customization": {
      "heading": "### Customization options",
      "desc": "The `v-badge` component is flexible and can be used in a variety of use-cases over numerous elements. Options to tweak the location are also available through the **offset-x** and **offset-y** props."
    }
  },
  "props": {
    "avatar": "Removes badge padding for the use of the `v-avatar` in the **badge** slot.",
    "bordered": "Applies a **2px** by default and **1.5px** border around the badge when using the **dot** property.",
    "content": "Any content you want injected as text into the badge.",
    "dot": "Reduce the size of the badge and hide its contents",
    "icon": "Designates a specific icon used in the badge.",
    "inline": "Moves the badge to be inline with the wrapping element. Supports the usage of the **left** prop.",
    "label": "The **aria-label** used for the badge",
    "offsetX": "Offset the badge on the x-axis.",
    "offsetY": "Offset the badge on the y-axis.",
    "bottom": "Mixins.Positionable.props.bottom",
    "left": "Mixins.Positionable.props.left",
    "overlap": "Overlaps the slotted content on top of the component.",
    "transition": "Mixins.Transitionable.props.transition"
  },
  "slots": {
    "badge": "The slot used for the badge's content."
  }
}
