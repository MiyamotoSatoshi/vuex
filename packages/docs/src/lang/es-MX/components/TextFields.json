{
  "examples": {
    "single-line": {
      "desc": "Los text-fields de una sola línea no flotan su etiqueta cuando se enfocan o cuando tienen datos."
    },
    "icon": {
      "heading": "Íconos",
      "desc": "Los íconos pueden ser especificados como anexos al principio o al final."
    },
    "password": {
      "desc": "Un input para contraseña puede ser utilizado con un ícono anexo al principio y un _callback_ para controlar la visibilidad."
    },
    "validation": {
      "heading": "Validación",
      "desc": "Vuetify incluye una validación simple a través de la prop `rules`. La prop acepta un arreglo de _callbacks_. Durante la validación de las reglas, el valor del  v-model actual será pasado al callback. Este callback debe retornar ya sea `true` o un `String` con el mensaje de error."
    },
    "full-width-with-character-counter": {
      "desc": "Los text fields de ancho total te permiten crear inputs que no tienen límite de ancho. En este ejemplo, usamos un `v-divider` para separar los campos."
    },
    "hint": {
      "desc": "La prop **hint** en los campos de texto agrega el texto proveído detrás del campo de texto. al usar **persistent-hint** mantiene la pista visible cuando el text field no está enfocado."
    },
    "prefixes-and-suffixes": {
      "desc": "Las props **prefix** y **suffix** te permiten añadir al principio o al final un texto no modificable junto al text field."
    },
    "custom-validation": {
      "desc": "Aunque el `v-form` prefabricado o un plugin de terceros como [vuelidate](https://github.com/monterail/vuelidate) o [vee-validation](https://github.com/logaretm/vee-validate) pueden ayudarte a llevar a cabo tu proceso de validación de forma sencilla, puedes elejir controlarlo manualmente."
    },
    "box": {
      "desc": "Los text fields pueden ser utilizados con un diseño alternativo de _box design_. Los íconos adjuntos al principio o al final **no están** soportados en este modo."
    },
    "custom-colors": {
      "desc": "Puedes opcionalmente cambiar un text field a cualquier otro color en la paleta de Material design. Debajo hay un ejemplo de una implementación de un _form_ personalizado con validación."
    },
    "progress-bar": {
      "desc": "Puedes desplegar una barra de progreso en lugar de la línea de abajo. Puedes usar el progreso indeterminado default que tenga el mismo color que el text field o indicar que usarás un color personalizado utilizando el slot `progress`."
    }
  },
  "props": {
    "autoGrow": "Crece el tamaño del input automáticamente. Esta opción requiere el uso de **v-model**",
    "autofocus": "Habilita el autoenfoque",
    "counter": "Crea un contador para la longitud del input. Si no se especifica un número, el default es 25. No aplica ninguna validación.",
    "multiLine": "Lo convierte en un textarea",
    "prefix": "Muestra un texto de prefijo",
    "rows": "Número de renglones en el textarea",
    "suffix": "Muestra un texto de sufijo",
    "textarea": "Un textaarea con un estilo alternativo",
    "toggleKeys": "Arreglo de códigos de teclas que alternarán el valor del input (toggle) si es que lo soporta",
    "type": "Configura el tipo de input"
  }
}
