{
  "heading": "# Inicio rápido",
  "headingText": "Use um dos pacotes Vuetify Vue CLI _(com base nos exemplos oficiais)_ para começar seu projeto. Vuetify suporta **SSR** (server-side rendering), **SPA** (single page application), **PWA** (progressive web application) e páginas **HTML** padrão.",
  "vueCliHeader": "## Instalação Vue CLI 3",
  "vueCliText1": "Vue CLI 3 é a ferramenta de cli da próxima geração para ajudá-lo a começar mais simples do que antes. Quando você iniciar seu aplicativo com Vue CLI 3, você também será capaz de obter as atualizações e alterações de configuração oficiais do webpack, bem como as atualizações do Vuetify sem um processo de atualização árduo.",
  "vueCliText2": "Para informações sobre como usar o Vue CLI 3, visite a [documentação oficial](https://cli.vuejs.org/guide/)",
  "vueCliText3": "**Dica**: Se você já tem **Vue CLI** instalado, você pode verificar se está na versão mais recente digitando <kbd>vue --version</kbd> em seu terminal.",
  "vueCliText4": "Uma vez que o cli está instalado, você pode gerar um novo esqueleto de projeto. Selecione a _instalação padrão_ a menos que você tenha pacotes específicos que você precisa incluir (ex.: _vuex_ ou _vue-router_). Isto irá criar um novo projeto Vue que está pronto para funcionar com suas opções selecionadas.",
  "vueCliText5": "Agora que você tem um projeto instanciado, você pode adicionar o [pacote Vuetify](https://github.com/vuetifyjs/vue-cli-plugin-vuetify) usando a cli.",
  "vueCliText6": "Isto irá fornecer-lhe um conjunto de opções para personalizar sua instalação. A predefinição padrão tem [a-la-carte](/customization/a-la-carte) já habilitado para você.",
  "vueCliText7": "Após a instalação, simplesmente execute <kbd>yarn serve</kbd> ou <kbd>npm run serve</kbd> para iniciar sua aplicação.",
  "uiHeader": "## Instalação Vue UI",
  "uiText1": "Vuetify também pode ser instalado usando **Vue UI**, a nova aplicação visual para _@vue/cli_. Certifique-se de que você tenha a versão mais recente do Vue CLI instalada, e depois digite em seu terminal:",
  "uiText2": "Isto irá iniciar a Interface de Usuário Vue e abrir uma [nova janela](http://localhost:8000) no seu navegador. No lado esquerdo da sua tela, clique em **Plugins**. Uma vez navegado, simplesmente procure por _Vuetify_ no campo de entrada.",
  "uiImg1": "Instalar o Plugin Vuetify",
  "uiImg2": "Configurar sua instalação Vuetify",
  "uiText3": "Após a instalação, você terá a opção de configurar as configurações padrão do Vuetify da sua aplicação.",
  "browserHeader": "## Navegadores suportados",
  "browserText": "Vuetify é um framework progressivo que tenta levar o desenvolvimento web para o próximo nível. Para melhor realizar esta tarefa, alguns sacrifícios tiveram que ser feitos em termos de suporte para versões antigas do Internet Explorer. Esta não é uma lista completa dos navegadores compatíveis, mas sim dos principais.",
  "cdnHeader": "## Uso de CDN",
  "cdnText": "Para testar o Vuetify.js sem instalar um template do Vue CLI, copie o código abaixo em seu `index.html`. Isto irá carregar a versão mais recente do Vue e Vuetify, permitindo que você comece a brincar com componentes. Você também pode usar o [Vuetify starter](https://template.vuetifyjs.com) no codepen. Embora não recomendado, se você precisa usar os pacotes cdn em um ambiente _production_ é recomendado que você esconda as versões de seus ativos. Para mais informações sobre como fazer isso, navegue para o site [jsdelivr](https://www.jsdelivr.com/).",
  "newHeader": "Novas aplicações",
  "existingHeader": "Aplicações existentes",
  "existingAlert": "Se sua aplicação existente está usando Vue CLI 3, por favor, use o [guia acima](#new-applications) sobre como instalar o pacote Vuetify.",
  "existingText1": "Para incluir o Vuetify em um projeto existente, você deve inseri-lo em seu node_modules. Você pode usar `npm` ou `yarn` para realizar esta tarefa. Estes são ambos gerenciadores de pacotes nos quais permitem que você controle quais recursos estarão disponíveis na sua aplicação.",
  "existingText2": "Para uma explicação detalhada de como fazer o `npm` funcionar em seu ambiente, confira a [documentação oficial do npm](https://docs.npmjs.com/getting-started/what-is-npm). Alternativamente, se você quiser usar o yarn, você pode encontrar mais informações na [documentação oficial do yarn](https://yarnpkg.com/lang/en/docs/). Uma vez configurado, você pode executar qualquer comando a partir da cli.",
  "existingText3": "Uma vez que o Vuetify foi instalado, crie uma pasta dentro do seu `src` diretório chamado `plugins`. Dentro, adicione um arquivo **vuetify.js**. Aqui é onde vamos lidar com todos os nossos bootstrapping e setup do Vuetify para o seu projeto.",
  "existingText3a1": "Se há alguma razão pela qual você não pode usar o pacote **Vue CLI 3**, você pode instalar manualmente o **vuetify-loader** através da configuração **vue.config.js** ou **webpack**. Para mais informações sobre instalação manual, navegue para a [página A-la-carte](/customization/a-la-carte).",
  "existingText3b": "Você também pode importar manualmente componentes individuais sem a necessidade do **vuetify-loader**. Isto é considerado **A-la-carte** manual.",
  "existingText3c": "O último método irá importar e configurar **todos** dos recursos e estilos do Vuetify. Como foi dito acima, ainda é **recomendado** que você utilize o **vuetify-loader** se possível. Para esta instalação, você precisará _manualmente_ importar os estilos de Vuetify. Este é também o processo usado quando inicializa o Vuetify através de um navegador, em vez de compilar. Você pode observar a instalação do navegador em nosso [cdn quickstart](https://codepen.io/johnjleider/pen/bgJOrX).",
  "webpackHeader1": "### Instalação Webpack",
  "webpackText1": "Ao usar o webpack, você tem a habilidade de configurar seu aplicativo com as opções acima (**Completo** ou **Instalação A-la-carte**). No entanto, você precisará configurar uma regra webpack (ou modificar um existente) para arquivos sass. Você pode começar instalando as dependências necessárias:",
  "webpackText2": "Uma vez instalado, localize seu arquivo `webpack.config.js` e copie o código abaixo para o array **regras**. Se você tem uma regra **sass** existente configurada, você pode precisar aplicar algumas ou todas as alterações abaixo. Se você está procurando utilizar também o **vuetify-loader** você pode encontrar mais informações sobre a configuração com o webpack na página [A-la-carte](/customization/a-la-carte#vueconfigjs-installation).",
  "existingHeader4": "## Inicialização do objeto Vuetify",
  "existingText4": "Depois de configurar suas opções iniciais de Vuetify em seu arquivo `src/plugins/vuetify.js`, você deve passar esse objeto para as opções principais de instância do Vue. Este processo de instalação é semelhante ao **vue-router** e **vuex**",
  "existingHeader5": "## Instalação da Fonte",
  "existingText5": "Vuetify usa a fonte Google Roboto por [Especificação do Design Material](https://material.io/design/typography/the-type-system.html). A maneira mais fácil de usar esta fonte é adicionando um elemento `<link>` no `<head>` do seu `index.html` principal.",
  "existingText6": "Você também pode carregar as fontes de forma assíncrona usando o [webfontloader](https://github.com/typekit/webfontloader).",
  "existingHeader7": "### Ícone MDI",
  "existingText7": "Vuetify usa [Material Design Icons](https://materialdesignIcon.com/) como seu iconfont padrão. A maneira mais simples de instalá-lo é através do `npm`.",
  "existingText8": "Uma vez que o pacote está instalado, basta importá-lo para o arquivo `vuetify.js` na sua pasta de plugins.",
  "existingText9": "Para mais informações sobre suporte a diferentes iconfonts e implementações avançadas, navegue para a página [Icons](/customization/icons).",
  "alert2": "*Aviso*: Embora o Vuetify tenta ao máximo não causar qualquer colisão no CSS, não há garantia de que seus estilos personalizados não alterem sua experiência ao integrar este framework em seu projeto existente.",
  "edgeHeader": "## Suporte ao Edge",
  "edgeText1": "`vuetify/lib` agora usa ES6, que pode causar alguns erros de script quando usado com o navegador Edge (non-chromium). Além disso, para dar suporte ao **modo moderno** no vue-cli-3, `vuetify/lib` não é transpilado. Para estes cenários, você deve dizer ao vue-cli para transpilar o pacote `vuetify`. Isso será automaticamente tratado no futuro pelo vue-cli-plugin-vuetify após uma correção pendente no vue-cli-3.",
  "ie11Header": "## Suporte ao IE11 e Safari 9",
  "ie11Text": "Vuetify utiliza recursos de ES2015/2017 que exigem a necessidade de usar poliyfills para **Internet Explorer 11** e **Safari 9/10**. Se você estiver usando Vue CLI 3, isso é feito automaticamente para você. Caso contrário, no seu diretório de projeto, você pode instalar `babel-polyfill`:",
  "ie11Text1": "Vuetify utiliza recursos de ES2015/2017 que exigem a necessidade de usar poliyfills para **Internet Explorer 11** e **Safari 9/10**. Se você estiver usando Vue CLI 3, isso é feito automaticamente para você. Caso contrário, no seu diretório de projeto, você pode instalar `babel-polyfill`:",
  "ie11Text2": "Devido ao suporte limitado do Internet Explorer para tags `<template>`, você deve enviar elementos do dom totalmente compilados para o navegador. Isso pode ser feito tanto construindo antecipamente seu código Vue quanto criando componentes auxiliares para substituir os elementos do DOM. Por exemplo, se for enviado diretamente para o IE, isso falhará:",
  "ie11Text3": "É recomendado que use o `babel-preset-env` com o polyfill correspondente para garantir que apenas os polyfills necessários sejam adicionados à sua aplicação. Para mais informações sobre `babel-preset-env`, [visite a documentação](https://babeljs.io/docs/en/next/babel-preset-env.html)",
  "ie11Text4": "Uma vez instalado, adicione a predefinição ao seu `.babelrc` ou `babel.config.js`",
  "ie11Text5": "Infelizmente o Vue CLI 3 não adiciona a compatibilidade ao IE11 automaticamente, de forma que você talvez encontre diversos erros (como <i>Symbol is not defined</i>). Para auxiliar na solução desses erros você pode precisar adicionar manualmente o parâmetro `transpileDependencies` no arquivo `vue.config.js`",
  "ie11Text6": "Devido ao suporte limitado do Internet Explorer para as tags `<template>`, você deve enviar elementos de conteúdo completamente compilados para o navegador. Isso pode ser feito criando o código Vue antecipadamente ou criando componentes de ajuda para substituir os elementos do dom. Por exemplo, se enviado diretamente para o IE, isso falhará:",
  "browserSupport": {
    "supported": "Suportado",
    "notSupported": "Não suportado",
    "polyfill": "Suportado com polyfill"
  }
}
