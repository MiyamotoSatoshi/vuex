{
  "heading": "# Campos de texto",
  "headingText": "Os componentes de campo de texto são usados para coletar informação provida pelo usuário.",
  "examples": {
    "usage": {
      "desc": "Um text-field simples com placeholder e/ou label."
    },
    "single-line": {
      "heading": "### Linha Única",
      "desc": "Text-fields em linha única não possuem seu label flutuando quando estiver focado ou com dados."
    },
    "disabled-and-readonly": {
      "heading": "### Desativado e somente leitura",
      "desc": "Os campos de texto podem ser `disabled` ou `readonly`."
    },
    "dense": {
      "heading": "### Denso",
      "desc": "Você pode reduzir a altura do campo de texto com a propriedade `dense`."
    },
    "icon": {
      "heading": "### Ícones",
      "desc": "Ícones podem ser especificados como prepended ou appended."
    },
    "clearable": {
      "heading": "### Limpável",
      "desc": "Quando `clearable`, você pode personalizar o ícone de limpeza com `clear-icon`."
    },
    "icon-events": {
      "heading": "### Eventos de ícone"
    },
    "password": {
      "desc": "Um campo de senha pode ser usado com um ícone anexado e uma função de retorno (callback) para de controlar sua visibilidade."
    },
    "validation": {
      "heading": "Validação",
      "desc": "Vuetify inclui uma validação simples através da propriedade `rules`. Esta propriedade aceita um array de funções de retorno (callbacks). Enquanto estiver validando as regras, o valor do v-model atual será passado para a função de retorno. Esta função de retorno deve retornar `true` ou `String`, com a mensagem de erro."
    },
    "full-width-with-character-counter": {
      "desc": "Text fields com largura total possibilitam a você criar campos de entrada sem limites. Neste exemplo, nós usamos o `v-divider` para separar os campos."
    },
    "hint": {
      "desc": "A propriedade **hint** nos text-fields adiciona a string fornecida abaixo do text-field. Usando **persistent-hint** mantém a sugestão visível quando o text-field não estiver focado."
    },
    "prefixes-and-suffixes": {
      "desc": "As propriedades **prefix** e **suffix** permitem a você adicionar na mesma linha um texto não modificável próximo ao text-field, no começo ou final"
    },
    "custom-validation": {
      "desc": "Enquanto o `v-form` ou plugins de terceiros como [vuelidate](https://github.com/monterail/vuelidate) ou [vee-validation](https://github.com/logaretm/vee-validate) podem ajudar a simplificar seu processo de validação, você pode simplesmente escolher controlar você mesmo."
    },
    "box": {
      "desc": "Text-fields podem ser usados com um design em caixa alternativo. As props de ícones append e prepend **não** são suportadas neste modo."
    },
    "solo": {
      "desc": "Text-fields podem ser usados com um design solo alternativo."
    },
    "custom-colors": {
      "desc": "Você pode opcionalmente modificar um text-field em qualquer cor que a oalheta de cores do Material design contenha. Abaixo é um exemplo de uma implementação de um formulário customizado com validação."
    },
    "progress-bar": {
      "desc": "Você pode exibir uma barra de progresso ao invés da linha inferior. Você pode usar o progresso indeterminado padrão que possuirá a mesma cor que o text field ou designar uma cor customizada usando o slot `progress`"
    }
  },
  "props": {
    "autoGrow": "O campo de entrada crescerá de forma automática. Esta opção requer o uso do **v-model**",
    "autofocus": "Habilita focagem automática",
    "counter": "Cria um contador para o tamanho da entrada. O padrão é 25 se nenhum número for especificado. Não é aplicada nenhuma validação.",
    "multiLine": "Transforma em um textarea",
    "prefix": "Exibe um texto como prefixo",
    "rows": "Número de linhas em um textarea",
    "suffix": "Exibe um texto como sufixo",
    "textarea": "Textarea text-field com um estilo alternativo",
    "toggleKeys": "Array de códigos chave que irão alternar o campo de entrada (se ele suportar alternação)",
    "type": "Seta o tipo do campo de entrada"
  }
}
