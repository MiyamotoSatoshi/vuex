{
  "headingText": "Vuetify는 이슈를 남기고, Pull Request를 제출하거나, 소중한 피드백을 주는 놀라운 커뮤니티에 의해 만들어지고 있어요. 물론, 여러분들이 놀라운 애플리케이션을 만들 수 있도록 하는 것이 우리의 일이긴 하죠. 하지만 대부분의 경우, 여러분이 되려 더 나은 것을 만들 수 있다는 걸 발견하곤 했습니다. 가령 버그를 찾아주거나, 아니면 추가적인 기능에 대한 아이디어가 있듯이 말이에요. 아주 멋진 일이죠! 이를 위해 Vuetify 리포지토리를 clone하고, 작업 환경을 구성할 수 있는 방법을 알아보도록 하겠습니다.",
  "issueHeader": "## 이슈 남기기",
  "issue1": "버그 리포트를 작성하거나, 새로운 기능을 요청할 때 남길 수 있어요. 만약 부적절한 이슈라고 판단된다면, 바로 closed 될 수도 있답니다.",
  "issue2": "평범한 질문일 경우에는, 저희의 [community](https://chat.vuetifyjs.com)를 이용해주세요.",
  "issue3": "대부분의 경우 질문에 대한 답은 이미 나와있을거에요.",
  "issue4": "오류가 발생되었다면 최신 버전인지 확인해주세요.",
  "issue5": "그럼에도 불구하고 오류가 발생되었다면, 이를 재현할 수 있는 [codepen](https://template.vuetifyjs.com) 또는 리포지토리를 저희에게 제공해주세요.",
  "issue6": "그리고 [새로운 이슈](https://issues.vuetifyjs.com)를 만들어 저희에게 알려주세요.",
  "localHeader": "## 개발 환경 구성에 앞서",
  "localText1": "Vuetify에는 새로운 기능이나 함수, 컴포넌트를 테스트할 수 있는 로컬 개발 환경을 포함하고 있습니다. 하지만 시작하기 전에, Vuetify의 많은 부분을 관리할 수 있도록 하는 몇 가지 여러분이 설치해야 할 것들이 있습니다.",
  "localSubHeader1": "### Commitizen 설치",
  "localText2": "Vuetify 팀은 [Commitizen](https://github.com/commitizen/cz-cli)을 이용해 모든 commit을 관리하고 있습니다. 이를 통해 쉽게 commit을 쉽게 읽고 관리할 수 있게 되었죠. Commitizen은 npm을 통해 다음과 같은 순서로 설치할 수 있습니다:",
  "localTextWarning": "때때로 cmd를 통해 .czrc 파일을 만들 수 없는 경우가 있어요. 이런 상황이 발생되면, VS Code를 사용해 파일을 만들어주세요.",
  "localText3": "짝짝짝! Commitizen이 설치되었습니다! 이제 여러분이 commit을 할 때는, 그냥 평범하게 파일을 add하고, `git commit` 대신 `git cz`를 프롬프트에 입력해주세요.",
  "localText4": "commit 가이드라인은 아래의 \"Commit 가이드라인 with Commitizen\"을 참고해주세요.",
  "localSubHeader2": "### PM2 설치하기 (옵션)",
  "localText5": "PM2를 설치하게 되면, 한 번에 Vuetify 모노레포의 여러 부분(Playground, Docs, 등...)을 실행할 수 있어요. 루트 디렉터리에 포함된 몇 개의 PM2 구성 파일은 Vuetify가 제공하는 모든 것을 시작하게끔 할 수 있죠. 아래의 명령으로 PM2를 설치할 수 있답니다:",
  "setupHeader": "## 개발 환경 구성하기",
  "setupText1": "로컬에 개발 환경을 구성하는 건 간단해요! 먼저 [Vuetify](https://github.com/vuetifyjs/vuetify) 리포지토리를 fork해 여러분의 리포지토리로 복사해주세요. 그리고 아래의 명령을 통해 여러분의 컴퓨터로 clone을 해주세요.",
  "setupText2": "자 이제 남은 건 개발 환경을 실행하는 것 뿐입니다!",
  "startupHeader": "## 개발 환경 실행하기",
  "startupText1": "Vuetify 모노레포를 실행하는 건 두 가지 방법을 사용할 수 있답니다:",
  "startupSubHeader1": "### Yarn",
  "startupSubHeader2": "### PM2",
  "startupText4": "먼저 아래와 같이 PM2 인스턴스를 설정해줘야해요.",
  "startupText5": "이제 아래의 명령을 통해 PM2를 시작하거나 멈추거나 재시작할 수 있습니다.",
  "startupText6": "현재는 2개의 이름만이 지원됩니다: `vuetify` (playground), `vuetify-docs`",
  "commitHeader": "## Commit 가이드라인 with Commitizen",
  "commitText1": "Commitizen은 의미있는 버전 관리를 위해 유동적인 인터페이스를 제공합니다. 그리고 패치 노트를 더 쉽게 쓸 수 있게끔 하는 아주 훌륭한 예시를 제공해주고 있죠.",
  "commitText2": "모든 commit은 언급한대로, [commitizen](https://github.com/commitizen/cz-cli)과 [conventional-changelog](https://www.npmjs.com/package/cz-conventional-changelog)를 통해 진행해야만 합니다. 또한, commit은 `<type>: <subject>`또는 `<type>(scope): <subject>` 형태로 작성해주세요.",
  "commitSubHeader1": "### Commit 타입",
  "commitText3": "- **feat:** 새로운 기능이 포함된 commit인 경우 사용합니다. 이전 버전과 호환되는 기능은 다음 **MINOR** 버전에서 릴리스되지만, 제대로 작동하지 않을 위험성이 있는 새로운 주요 기능들은 다음 **MAJOR** 버전에서 릴리스됩니다. 만약 제대로 작동하지 않을 위험성이 있는 사항인 경우, commit 메시지 본문이 `BREAKING CHANGE`로 시작해야만 하고 API가 어떻게 변경되는지 설명이 반드시 있어야만 합니다.",
  "commitText4": "- **fix:** Vuetify 코드 내 버그를 수정한 commit 사용합니다.",
  "commitText5": "- **docs:** 문서를 업데이트한 commit의 경우 사용합니다.",
  "commitText6": "- **style:** 코드 포맷 변경과 같이 실행에는 영향을 끼치지 않는 commit의 경우 사용합니다.",
  "commitText7": "- **refactor:** 버그를 수정하거나 기능을 추가하지 않는 commit인 경우 사용합니다.",
  "commitText8": "- **perf:** 성능 향상과 관련된 commit인 경우 사용합니다.",
  "commitText9": "- **test:** 누락되었거나, 기존의 테스트를 수정하는 commit인 경우 사용합니다.",
  "commitText11": "- **revert:** 이전 commit으로 되돌리는 경우 사용합니다.",
  "changesHeader": "## 변경 사항 및 Pull Request 제출하기",
  "changesText1": "여러분이 commit을 하기 전에, 항상 최신 버전인지 확인해주세요. 대부분의 충돌이 여기서 발생됩니다. 개발이 끊임없이 진행되기에, 자주 pull 해주는 것이 좋을거예요.",
  "changesText4": "마지막으로 `git push`를 한 다음, 새로운 pull request를 만들어주세요.",
  "changesSubHeader1": "### Vuetify에서의 Pull Request",
  "changesText7": "Vuetify와 관련된 pull request 목록:\n* **bug fixes** 와 **documentation updates** 는 `master` 브랜치로 pull request를 해주세요.\n* **new features** 와 **enhancements** 는 `dev` 브랜치로 pull request를 해주세요.\n* **v1.5/LTS** 와 관련된 **bugs** 및 **critical fixes** 는 `stable` 브랜치로 pull request를 해주세요.\n* **breaking changes** 가 포함된 모든 **features** 는 `next` 브랜치로 pull request를 해주세요. ",
  "changesSubHeader2": "### 문서를 Pull Request하는 경우",
  "changesText8": "Vuetify 문서와 관련된 모든 pull request의 경우, `master` 브랜치로 pull request를 해주세요."
}
