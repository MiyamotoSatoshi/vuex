{
  "headerText": "选择器组件用于从选项列表中收集用户提供的信息。",
  "examples": {
    "light": {
      "header": "亮色主题",
      "desc": "标准的单选有多种配置选项"
    },
    "icons": {
      "header": "图标",
      "desc": "使用自定义前置或者后置图标。"
    },
    "multiple": {
      "header": "多选",
      "desc": "多选择器可以使用 `v-chip` 组件来显示已选项。"
    },
    "custom-text-and-value": {
      "header": "自定义选项的文本和值",
      "desc": "你可以指定选项数组中的文本与值字段对应的特定属性，在默认情况下是 **text** 和 **value**。在这个例子中，我们也可以用 `return-object` 属性来返回被选中的对象。"
    },
    "disabled": {
      "header": "禁用"
    }
  },
  "props": {
    "autocomplete": "根据用户输入进行筛选",
    "cacheItems": "保留已经通过 **items** 属性的项在本地的唯一副本",
    "chips": "改变一个已选择项为小纸片（chips）的显示方式",
    "combobox": "在单选中 **tags** 的一个变种",
    "debounceSearch": "去除搜索框正在 emitted 的值",
    "deletableChips": "添加一个去除图标的到选定的小纸片（chips）",
    "dense": "减小列表的最大高度",
    "disabled": "禁用输入",
    "editable": " 创建一个可编辑按钮 - [spec](https://material.io/guidelines/components/buttons.html#buttons-dropdown-buttons)",
    "filter": "用于过滤条目的功能",
    "hideSelected": "不要在选择菜单中显示已选择的项",
    "itemDisabled": " 禁用 **items** 的属性值",
    "itemText": "设置**items**'属性的文本值",
    "minWidth": "Mixins.Menuable.props.minWidth",
    "multiple": "多选，接受数组作为值",
    "multiLine": "当选择器组件被聚焦或使用时，使标签浮动",
    "noDataText": "当没有数据时显示的文本",
    "openOnClear": "当使用 **clearable** 属性, 一旦清除，选择菜单将打开或保持打开，这个取决于当前状态",
    "overflow": "创建一个溢出按钮 - [spec](https://material.io/guidelines/components/buttons.html#buttons-dropdown-buttons)",
    "returnObject": "将选择器的行为更改为直接返回对象，而不是 item-value 指定的值",
    "searchInput": "使用自动补全（autocomplete）属性，使用 .sync 修饰符从自动补全搜索框中捕获用户的输入",
    "segmented": "创建一个分段按钮 - [spec](https://material.io/guidelines/components/buttons.html#buttons-dropdown-buttons)",
    "tags": "标记功能允许用户创建一个 **items** 属性中不存在的新值",
    "value": "Components.Inputs.props.value"
  },
  "slots": {
    "append": "Components.Inputs.slots.append",
    "append-outer": "Components.TextFields.slots.append-outer",
    "no-data": "Mixins.Filterable.slots.noData",
    "prepend": "Components.Inputs.slots.prepend",
    "prepend-inner": "Components.TextFields.slots.prepend-inner"
  },
  "events": {
    "change": "Components.Inputs.events.change",
    "click:append": "Components.Inputs.events['click:append']",
    "click:append-outer": "Components.TextFields.events['click:append-outer']",
    "click:clear": "Components.TextFields.events['click:clear']",
    "click:prepend": "Components.Inputs.events['click:prepend']",
    "click:prepend-inner": "Components.TextFields.events['click:prepend-inner']",
    "update:error": "Mixins.Validatable.events['update:error']"
  }
}
