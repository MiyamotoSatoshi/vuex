{
  "heading": "# 文本框",
  "headingText": "文本框组件用于收集用户提供的信息。",
  "examples": {
    "usage": {
      "desc": "具有占位符 和/或 标签的简单文本字段。"
    },
    "single-line": {
      "heading": "### 单行",
      "desc": "单行文本框的标签不会浮动到焦点或数据之上。"
    },
    "shaped": {
      "heading": "### 形状",
      "desc": "`shaped` 文本框如果被 `outlined` 则显示为圆角，如果被 `filled`，则为更高的 `border-radius` 。"
    },
    "disabled-and-readonly": {
      "heading": "### 禁用且只读",
      "desc": "文本框可以是 `disabled` 或 `readonly`。"
    },
    "dense": {
      "heading": "### 密集",
      "desc": "您可以使用 `dense` 属性降低文本字段的高度。"
    },
    "icon": {
      "heading": "### 图标",
      "desc": "您可以使用 `prepend-icon`, `append-icon` 和 `append-outer-icon` 属性添加图标到文本字段"
    },
    "clearable": {
      "heading": "### 可清除",
      "desc": "当处于 `clearable` 时，您可以使用 `clear-icon` 自定义清除图标。"
    },
    "icon-events": {
      "heading": "### 图标事件",
      "desc": "`click:prepend`, `click:append`, `click:append-outer`, 和 `click:clear` 将在单击相应的图标时发出。请注意，如果使用插槽，则不会触发这些事件。"
    },
    "icon-slots": {
      "heading": "### 图标插槽",
      "desc": "可以使用插槽来扩展输入的功能，而不是使用 prepend / append / append-outer 图标。"
    },
    "label-slot": {
      "heading": "### 标签插槽",
      "desc": "文本字段标签可以在 `label` 插槽中定义 - 允许使用 HTML 内容"
    },
    "character-counter": {
      "heading": "### 字符计数器",
      "desc": "使用 `counter` 属性来通知用户字符限制。 计数器本身不会执行任何验证。 您需要将其与内部验证系统或第三方库配对。 您可以在常规，方框或轮廓文本字段中使用它。"
    },
    "password": {
      "heading": "### 密码输入",
      "desc": "密码输入可以用附加图标以及回调一起控制密码的可见性。"
    },
    "validation": {
      "heading": "验证",
      "desc": "Vuetify包含简单的验证通过使用 `rules` 属性，这个属性接受一个回调函数组，在验证规则时，当前的 v-model 值将被传递给回调函数，这个回调函数必须返回 `ture` 或 `String` 或者错误信息。"
    },
    "full-width-with-character-counter": {
      "heading": "### 带计数器的全宽文本框",
      "desc": "全宽文本框允许你创建一个不限制输入的文本框，在下面的例子中，我们是用 `v-divider` 来分隔文本框。"
    },
    "hint": {
      "heading": "### 提示文本",
      "desc": "在文本框组件使用 `hint` 来设置将提示的文本添加到文本字段下。使用 `persistent-hint` 保持提示文本在文本字段未被聚焦时保持可见性。"
    },
    "prefixes-and-suffixes": {
      "heading": "### 前缀和后缀",
      "desc": " `prefix` 和 `suffix` 属性允许你在文本字段旁添加一段不可修改的文本。"
    },
    "custom-validation": {
      "heading": "### 自定义验证",
      "desc": "虽然内置的 `v-form` 组件以及第三方插件比如 [vuelidate](https://github.com/monterail/vuelidate) or [vee-validation](https://github.com/logaretm/vee-validate) 可以帮助你简化验证过程，但你仍可以简单的自行控制它。"
    },
    "box": {
      "heading": "### 盒子样式",
      "desc": "文本框可以使用替代的样式设计，但是这种模式下不支持附加或者前置图标属性。"
    },
    "solo": {
      "heading": "### 单独样式",
      "desc": "文本字段可以与其他单独设计一起使用。"
    },
    "outlined": {
      "heading": "### 轮廓样式",
      "desc": "文本字段可以与其他轮廓设计一起使用。"
    },
    "custom-colors": {
      "heading": "### 自定义颜色",
      "desc": "你可以将文本框的颜色更改为 Material design 调色板中的任何颜色。下面是带验证的自定义表单的示例实现。"
    },
    "masks": {
      "heading": "### 马赛克（使用 vue-the-mask）",
      "desc": "您可以使用第三方库（例如 vue-the-mask）添加马赛克功能。"
    },
    "progress-bar": {
      "heading": "### 进度条",
      "desc": "你可以用一个进度条来替换下划线，你可以使用与文本框具有相同颜色的默认的不确定进度的进度条，你也可以使用 `progress` 插槽来自定义进度条。"
    }
  },
  "props": {
    "appendOuterIcon": "在组件的外部添加一个图标，使用与 `v-icon` 相同的语法",
    "autoGrow": "自动增长输入，需要使用 **v-model**",
    "autofocus": "启用自动聚焦",
    "filled": "应用替代填充输入样式",
    "clearIcon": "当使用 **clearable** 且有输入值时应用",
    "counter": "为输入长度创建一个计数器，如果未指定数字，则默认为25，不会应用任何验证。",
    "dark": "Components.Inputs.props.dark",
    "flat": "Mixins.Soloable.props.flat",
    "fullWidth": "指定输入类型为全宽度",
    "multiLine": "转为多行文本框",
    "noResize": "删除调整大小句柄，只适用于 **multi-line** 和 **textarea** 属性",
    "outlined": "将轮廓样式应用于输入",
    "placeholder": "设置输入的占位符文本",
    "prefix": "显示前缀",
    "prependInnerIcon": "在组件的输入中添加一个图标，使用与 `v-icon` 相同的语法",
    "reverse": "反转输入方向",
    "rounded": "向输入添加边框半径",
    "rows": "Textarea 的行数",
    "rowHeight": "指定自定义 _row-height_。 在使用 **multi-line** 或 **textarea** 属性时用于确定输入高度",
    "solo": "Mixins.Soloable.props.solo",
    "soloInverted": "Mixins.Soloable.props.soloInverted",
    "suffix": "显示后缀",
    "textarea": "Textarea 使用备用样式",
    "toggleKeys": "切换输入键值的数组（如果支持切换的话）",
    "type": "设置输入类型",
    "value": "Components.Inputs.props.value",
    "shaped": "如果 `outlined` 则为圆形，如果 `filled` 则增加 `border-radius`。必须与 `outlined` 或 `filled` 一起使用"
  },
  "slots": {
    "append": "Components.Inputs.slots.append",
    "append-outer": "在输入内容内追加一个项目",
    "prepend": "Components.Inputs.slots.prepend",
    "prepend-inner": "在输入内容中预设一个项目"
  },
  "events": {
    "blur": "当组件不再聚焦时发出",
    "change": "Components.Inputs.events.change",
    "click:append": "Components.Inputs.events['click:append']",
    "click:append-outer": "单击附加的外部图标时发出",
    "click:clear": "单击可清除图标时发出",
    "click:prepend": "Components.Inputs.events['click:prepend']",
    "click:prepend-inner": "单击前置的内部图标时发出",
    "focus": "组件聚焦时发出",
    "keydown": "当 **any** 键被按下时，文本字段必须被聚焦",
    "update:error": "Mixins.Validatable.events['update:error']"
  }
}
