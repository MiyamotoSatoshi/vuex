{
  "heading": "# 自动完成",
  "headingText": "`v-autoompalty` 组件提供简单灵活的输入提示功能。当搜索大量数据甚至从 API 中动态请求信息时是十分有用的。",
  "examples": {
    "usage": {
      "desc": "自动完成组件扩展了`v-select`并为其增加了过滤项目的能力。"
    },
    "api": {
      "heading": "### 搜索 API",
      "desc": "轻松绑定动态数据并创造独特的体验。`v-autocomplete` 的扩展的支持列表使得对输入的各个方面进行调优变得很容易。"
    },
    "slots": {
      "heading": "### 插槽",
      "desc": "利用插槽的强大功能，您可以自定义选择的可视输出。在本例中，我们为纸片和列表项添加了一个配置文件图片。"
    },
    "customFilter": {
      "heading": "### 自动完成时的自定义过滤器",
      "desc": "prop`filter`可以用来过滤每个项目，并带有自定义逻辑。在这个例子中，我们按名称过滤项目"
    },
    "asynchronous": {
      "heading": "### 异步项目",
      "desc": "有时您需要根据搜索查询从外部加载数据。 使用 `autocomplete` 属性时，请使用带有 **.sync** 修饰符的 `search-input` 属性。 我们还利用了新的 `cache-items` 属性。 这将保留已传递给 `items` 属性的所有物品的唯一列表，并且在使用异步属性和 **multiple** 属性时是 **REQUIRED** 的。"
    },
    "advanced": {
      "heading": "### 高级插槽",
      "desc": "`v-autocomplete` 组件非常灵活，几乎可以适应任何用例。 为 **no-data**, **item** 和 **selection** 插槽创建自定义显示，以提供独特的用户体验。 使用 _slots_ 可使您轻松自定义应用程序所需的外观。"
    },
    "stateSelector": {
      "heading": "### 状态选择器",
      "desc": "结合使用 `v-autocomplete` 插槽和过渡，您可以创建一个时尚的可切换自动完成字段，例如此状态选择器。"
    },
    "dense": {
      "heading": "### 密集",
      "desc": "您可以使用 `dense` 属性来降低自动完成高度和列表项的最大高度。"
    }
  },
  "props": {
    "allowOverflow": "允许菜单溢出屏幕",
    "autoSelectFirst": "搜索时，总是选中第一个选项",
    "dark": "Components.Inputs.props.dark",
    "filled": "Components.TextFields.props.filled",
    "filter": "搜索时使用的过滤算法。[example](https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VAutocomplete/VAutocomplete.ts#L36)",
    "hideNoData": "当没有要显示的选项时，隐藏菜单。用于防止在异步获取结果之前打开菜单。也有打开菜单的效果，当“ `items` 数组改变，如果还没有打开。",
    "noFilter": "搜索时不要应用过滤。在过滤服务器端数据时非常有用",
    "searchInput": "搜索值。 可以和 `.sync` 修饰符一起使用。",
    "value": "Components.Inputs.props.value"
  },
  "slots": {
    "append": "Components.Inputs.slots.append",
    "append-item": "Components.Selects.slots.append-item",
    "append-outer": "Components.TextFields.slots.append-outer",
    "item": "Components.Selects.slots.item",
    "no-data": "Mixins.Filterable.slots.noData",
    "prepend": "Components.Inputs.slots.prepend",
    "prepend-inner": "Components.TextFields.slots.prepend-inner",
    "prepend-item": "Components.Selects.slots.prepend-item",
    "selection": "Components.Selects.slots.selection"
  },
  "events": {
    "change": "Components.Inputs.events.change",
    "click:append": "Components.Inputs.events['click:append']",
    "click:append-outer": "Components.TextFields.events['click:append-outer']",
    "click:clear": "Components.TextFields.events['click:clear']",
    "click:prepend": "Components.Inputs.events['click:prepend']",
    "click:prepend-inner": "Components.TextFields.events['click:prepend-inner']",
    "update:error": "Mixins.Validatable.events['update:error']",
    "update:list-index": "Components.Selects.events['update:list-index']",
    "update:search-input": "`search-input.sync` 事件"
  }
}
