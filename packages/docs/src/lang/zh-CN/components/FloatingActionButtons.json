{
  "heading": "# 按钮：浮动按钮",
  "headingText": "`v-btn`组件可以用作浮动按钮；它可以为应用提供最主要的操作。通过与 `v-speed-dial` 组件的组合使用，你可以为你的用户创建一系列的功能集。",
  "examples": {
    "usage": {
      "desc": "浮动按钮可以附着于材料之上，用于突显你应用中的重要操作，在大多数实例中通常使用其默认大小，而小型按钮一般用于保持其与相似大小元素之间的连续性。"
    },
    "small": {
      "heading": "### 小型按钮",
      "desc": "为了达到更好的视觉效果，我们可以使用小型按钮以适配列表的头像。"
    },
    "display-animation": {
      "heading": "### 显示时的动画",
      "desc": "首次显示时，浮动按钮应当使用一个动画效果加载到屏幕上，这里我们使用 `v-fab-transition` 和 v-show 来演示动画效果，你也可以使用任何 Vuetify 内置的动画或者自己定义一个。"
    },
    "lateral-screens": {
      "heading": "### 横向屏幕切换",
      "desc": "当你的按钮需要改变默认的操作时，推荐使用一个过渡效果来彰显它的变化（如下进行标签页切换时，给悬浮响应按钮一个过渡动画）。我们是通过绑定 `key` 属性到数据块来正确地发送响应变化信号至 Vue 过渡系统。当你使用自定义过渡效果时，请确保已经设置`mode`属性为 **out-in**。"
    },
    "speed-dial": {
      "heading": "### 浮动按钮和 speed-dial 组件一起",
      "desc": "`v-speed-dial` 组件为浮动按钮提供了强大的 api，你可以尽情定制你想要的效果。"
    }
  },
  "api": {
    "v-btn": "Components.Buttons"
  },
  "props": {
    "v-speed-dial": {
      "direction": "Speed-dial 显示的方向。可设置的值有 `top`, `bottom`, `left`, `right`。",
      "openOnHover": "鼠标悬浮时开启 speed-dial"
    }
  }
}
