{
  "heading": "# Иконки",
  "headingText": "Vuetify поставляется с поддержкой иконок в стиле Material Design Icons, Material Icons, Font Awesome 4 и Font Awesome 5. По умолчанию приложения будут использовать иконки в стиле [Material Design Icons](https://materialdesignicons.com/).",
  "usageText1": "Чтобы изменить библиотеку шрифтов, добавьте опцию `iconfont` во время создания экземпляра `Vuetify`.",
  "usageText2": "Использование предопределенной опции позволит предварительно заполнить значения по умолчанию на основе выбранного пресета. Это приведет к перезаписи значений по умолчанию компонентов, имеющих значения **icon** по умолчанию. Для получения дополнительной информации обратитесь к [icon preset values](https://github.com/vuetifyjs/vuetify/tree/master/packages/vuetify/src/services/icons/presets).",
  "installHeader": "## Установка шрифтовых иконок",
  "installText1": "Вы должны включить указанную библиотеку иконок (даже если используется по умолчанию). Это можно сделать, включив CDN ссылку или импортируя библиотеку иконок в ваше приложение",
  "installMD": "### Установка библиотеки Material Icons",
  "installMDText1": "Установка такая же, как указано выше. Для проектов, не использующих систему сборки, рекомендуется импортировать иконки из CDN",
  "installMDText2": "В качестве альтернативы библиотеку иконок можно установить локально с помощью yarn или npm. Имейте в виду, что это не официальный репозиторий google и могут не обновляться своевременно",
  "installMDText3": "После установки пакета, импортируйте его в основной файл js. Как правило, это `main.js`, `index.js` или `app. s` находится в папке `src/`. Если вы используете серверный рендеринг (SSR) в вашем приложении, то, у вас может быть файл `client.js` или `entry-client.js`.",
  "installMDI": "### Установка библиотеки Material Design Icons",
  "installMDIText1": "Это шрифт иконок по умолчанию для Vuetify. Вы можете подключить его через CDN:",
  "installMDIText2": "Или как локальная зависимость:",
  "installMDISvg": "### Установка иконок в стиле Material Design Icons (JS SVG)",
  "installMDISvgText1": "Используйте путь к SVG как указанно в [@mdi/js](https://www.npmjs.com/package/@mdi/js). Это рекомендуемая установка при оптимизации приложения для производительности. Используйте это **ТОЛЬКО**, если вы планируете использовать больше, чем значки по умолчанию.",
  "installMDISvgText2": "Укажите **mdiSvg** в iconfont:",
  "installMDISvgText3": "Вы можете импортировать только те иконки, которые вы используете, это гораздо уменьшит размер пакета.",
  "installFA": "### Установка библиотеки Font Awesome 5 Icons",
  "installFAText1": "Самый простой способ начать работать с **FontAwesome** – использовать CDN. В части `head` вашего файла `index.html` поместите следующий код:",
  "installFAText2": "Для локальной установки можно скачать [бесплатную версию **FontAwesome**](https://fontawesome.com/) используя ваш менеджер пакетов:",
  "installFAText3": "В вашей основной точке входа просто импортируйте пакет **all.css**. Если вы используете сконфигурированный проект webpack, вам нужно будет настроить поддержку `.css` файлов, используя webpack [css loader](https://github.com/webpack-contrib/css-loader). Если вы уже используете [Vue CLI](https://cli.vuejs.org/), то это делается для вас автоматически.",
  "installFA4": "### Установка библиотеки Font Awesome 4 Icons",
  "installFA4Text1": "Установка выполняется так же, как и Font Awesome 5. Импорт через CDN - это самый простой способ использовать Font Awesome 4 в своем проекте:",
  "installFA4Text2": "Установка **Font Awesome 4** такая же, как и установка новой версии, но из другого репозитория. Используйте репозиторий `font-awesome` вместо `@fortawesome`.",
  "installFA4Text3": "Не забывайте, что ваш проект должен быть настроен для импорта `.css`. Если вы используете Webpack, установите и настройте [css-loader](https://github.com/webpack-contrib/css-loader).",
  "installFASvg": "### Установка Font Awesome SVG Icons",
  "installFASvgText1": "Добавить требуемые зависимости.",
  "installFASvgText2": "Затем добавьте глобально компонент `font-awesome-icon` и установите в конфигурации Vuetify iconfont `faSvg`.",
  "customIconsHeader": "## Использование пользовательских иконок",
  "customIconsText1": "Если вам нужно использовать другие иконки в компонентах Vuetify, то вместо создания компонента-обертки или указания нужной иконки вручную при каждом использовании компонента, вы можете настроить их глобально.",
  "customIconsText2": "Если вы используете библиотеку иконок, не имеющую предустановленных иконок для компонентов, вы можете настроить иконки сами.",
  "reusableHeader": "## Повторное использование пользовательских иконок",
  "reusableText1": "Vuetify будет _автоматически объединять_ все иконки, предоставленные в пул доступных пресетов. Это позволяет создать пользовательские строки, которые могут быть использованы в вашем приложении, просто ссылаясь на **глобальные иконки**.",
  "reusableText2": "Это поможет вам убедиться, что ваше приложение всегда использует пользовательские иконки. Вот несколько способов использования `<v-icon>` с пользовательскими иконками.",
  "customComponentHeader": "## Пользовательские компоненты",
  "customComponentText1": "Вы можете использовать такие же иконки в ваших собственных компонентах. Каждый раз, когда вы передаете **$vuetify.icons** (или ярлык **$**) через _v-text_, _v-html_ или как текст, `<v-icon>` будет использовать это значение. Это позволяет вам создавать решения, легкие в построении и управлении.",
  "componentIconsHeader": "## Иконки компонентов",
  "componentIconsText1": "Вместо предустановленных шрифтовых иконок вы можете использовать собственные иконки компонентов. Вы также можете переключать иконки, которые используются в компоненте Vuetify, на свои собственные.",
  "componentIconsText2": "Если вы хотите, чтобы SVG иконка корректно наследовала цвета и масштаб - убедитесь, что добавили к ней следующее css свойство:",
  "usingMissingMaterialIconsHeader": "## Использование отсутствующих Material Icons",
  "usingMissingMaterialIconsText1": "По умолчанию некоторые иконки отсутствуют. Например, `person` и `person_outline` доступны, но `visibility_outline` нет, пока есть `visibility`. Для использования недостающих material icons необходимо подключить шрифт ниже (удалить другой material font, если он уже зарегистрирован).",
  "usingMissingMaterialIconsText2": "Вы можете добавить ваш собственный компонент. Позвольте мне предположить, что это **@/components/MaterialIcon.vue**.",
  "usingMissingMaterialIconsText3": "Затем вам нужно зарегистрировать нужные вам material icons.",
  "usingMissingMaterialIconsText4": "Наконец, вы можете использовать такие material icons, как показано ниже.",
  "customFASvg": "### Пользовательские иконки Font Awesome Pro Icons",
  "customFASvgText1": "Вы можете использовать иконки компонентов с помощью Font Awesome Pro для выбора индивидуального icon weights:"
}
