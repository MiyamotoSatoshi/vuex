{
  "examples": {
    "usage": {
      "desc": "Основной пример"
    },
    "color": {
      "heading": "### Цвет"
    },
    "directory": {
      "desc": "Вы можете динамически загружать дочерние данные, предоставляя _Promise_ callback для `load-children` prop. Этот callback будет выполнен при первой попытке пользователя расширить элемент у которого есть свойство children, которое является пустым массивом."
    },
    "hotspots": {
      "desc": "Настройте **on**, **off** и **indeterminate** иконки для вашего выбираемого дерева. Комбинируйте с другими продвинутыми возможностями, такими как элементы, загруженные через API."
    },
    "human-resources": {
      "desc": "Легко фильтруйте ваш treeview используя **search** prop. Вы можете легко применить свою собственную функцию фильтрации (если вам нужна чувствительная к регистру или fuzzy фильтрация) установив **filter** prop. Это работает аналогично как [v-autocomplete](/components/autocompletes) компонент."
    }
  },
  "props": {
    "v-treeview": {
      "activatable": "Позволяет пользователю пометить узел как активный, нажав на него",
      "active": "Синхронизируемая prop, позволяющая контролировать, какие узлы активны. Массив состоит из `item-key` каждого активного элемента.",
      "activeClass": "Класс применяющийся к узлу, когда тот активен",
      "expandIcon": "Иконка, используемая для обозначения возможности открытия узла",
      "hoverable": "Применяет класс наведения при наведении мыши на узлы",
      "filter": "Пользовательская функция фильтрации элементов. По умолчанию используется поиск без учета регистра по label элемента.",
      "itemChildren": "Свойство у предоставленных `items` которое содержит детей каждого элемента",
      "itemKey": "Свойство для поставляемых `items`, используемое для отслеживания состояния узла. Значение этого свойства должно быть уникальным среди всех элементов.",
      "items": "Массив элементов, используемых для построения дерева",
      "itemText": "Свойство для поставляемых `items`, содержащее текст метки",
      "loadChildren": "Функция, используемая при динамической загрузке детей. Если этот prop установлен, то функция будет работать если развернуть элемент, имеющий свойство `item-children`, которое является пустым массивом. Поддерживает возврат Promise.",
      "loadingIcon": "Иконка, используемая, когда узел находится в состоянии загрузки",
      "multipleActive": "Когда `true`, позволяет пользователю иметь несколько активных узлов одновременно",
      "open": "Синхронизируемая prop которая позволяет контролировать, какие узлы открыты. Массив состоит из `item-key` каждого открытого элемента.",
      "openAll": "Когда `true` приведет к открытию всех узлов всех ветвей при mounted компонента",
      "openOnClick": "Когда `true` заставит узлы открываться щелчком в любом месте на нем, а не открываться только нажатием на значок расширения. При использовании этого prop с `activatable` вы не сможете пометить узлы с дочерними элементами как активные.",
      "search": "Модель поиска для фильтрации результатов",
      "selectable": "Будет отображать флажок рядом с каждым узлом, позволяя им быть выбранными",
      "selectedColor": "Цвет флажка выбора",
      "transition": "Применяет переход, когда узлы открываются и закрываются",
      "value": "Позволяет контролировать, какие узлы выбраны. Массив состоит из `item-key` каждого выбранного элемента. Используется с `@input` событием чтобы разрешить `v-model` биндинг."
    }
  },
  "slots": {
    "v-treeview": {
      "append": "Добавляет контент после label",
      "label": "Контент для label",
      "prepend": "Добавляет контент перед label"
    }
  },
  "functions": {
    "updateAll": "Открывает или закрывает все узлы"
  }
}
