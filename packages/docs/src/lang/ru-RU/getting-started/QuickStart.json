{
  "header": "# Быстрый старт",
  "headerText": "Используйте один из пакетов CLI Vuetify Vue _(на основе официальных примеров)_ , чтобы мгновенно запустить ваш проект. Vuetify поддерживает **SSR** (рендеринг на стороне сервера), **SPA** (одностраничное приложение), **PWA** (прогрессивное веб-приложение) и стандартные **HTML** страницы.",
  "vueCliHeader": "## Установка с Vue CLI 3",
  "vueCliText1": "Vue CLI 3 — инструмент нового поколения, созданный для еще более быстрого старта, чем ранее. Когда вы создаете ваше приложение с помощью Vue CLI 3, вы также сможете получать официальные обновления и изменения настроек webpack, а также обновления Vuetify без трудоёмкого процесса обновления.",
  "vueCliText4": "Когда Vue CLI 3 установлен, вы можете легко создать новый проект. Выбирайте _default install_, пока вам не нужны специфические пакеты (например _vuex_ или _vue-router_). Vue CLI 3 создаст новый проект Vue с выбранными опциями, который уже готов к работе.",
  "vueCliText5": "Когда вы создали проект, добавьте [плагин Vuetify](https://github.com/vuetifyjs/vue-cli-plugin-vuetify), используя cli.",
  "vueCliText7": "После установки, просто запустите <kbd>yarn serve</kbd> или <kbd>npm run serve</kbd>, чтобы запустить своё новое приложение.",
  "uiHeader": "## Установка с Vue UI",
  "uiText2": "Это запустит Vue UI и откроет [новое окно](http://localhost:8000) в вашем браузере. Слева, нажмите **Plugins**. Потом, введите _Vuetify_ в строку поиска.",
  "uiImg1": "Установка плагина Vuetify",
  "uiImg2": "Настройка Vuetify",
  "uiText3": "После установки, вы сможете настроить опции Vuetify.",
  "browserHeader": "## Поддерживаемые браузеры",
  "browserText": "Vuetify - это прогрессивный фреймворк, который пытается продвинуть веб-разработку на следующий уровень. Чтобы лучше выполнить эту задачу, мы пошли на некоторые жертвы, с точки зрения поддержки более старых версий Internet Explorer. Это не исчерпывающий список совместимых браузеров, а основные целевые.",
  "newHeader": "## Новые приложения",
  "existingHeader": "## Существующие приложения",
  "existingAlert": "Если ваше существующее приложение использует Vue CLI 3, пожалуйста, используйте [инструкцию выше](#new-applications) для установки плагина Vuetify.",
  "existingText1": "Чтобы включить Vuetify в существующий проект, вы должны подключить его в свои node_modules. Для этого вы можете использовать `npm` или `yarn`. Это оба менеджера пакетов, которые позволяют вам контролировать, какие ресурсы доступны для вашего приложения.",
  "alert2": "Предупреждение. Хотя Vuetify пытается как можно больше не вызвать какой-либо css-коллапс, нет никакой гарантии, что ваши пользовательские стили не изменят ваш стиль при интеграции этой структуры в ваш существующий проект.",
  "ie11Header": "## Поддержка IE11 и Safari 9",
  "ie11Text": "В каталоге проекта установите `babel-polyfill` и импортируйте его в свою основную точку входа приложения:",
  "ie11Text1": "В каталоге проекта установите `babel-polyfill` и импортируйте его в свою основную точку входа приложения:",
  "ie11Text2": "Из-за ограниченной поддержки Internet Explorer тегов `<template>`, вы должны отправить полностью скомпилированные элементы dom в браузер. Это можно сделать, либо заранее создав код Vue, либо создав вспомогательные компоненты для замены элементов dom. Например, если отправлено непосредственно в IE, это не будет выполнено:",
  "ie11Text3": "Рекомендуется использовать `babel-preset-env` с соответствующим полифиллом, чтобы быть уверенным, что только нужные полифиллы будут импортированы в приложение. Чтобы узнать больше о `babel-present-env`, [читайте документацию](https://babeljs.io/docs/en/next/babel-preset-env.html)",
  "ie11Text4": "После установки, добавьте настройки в `.babelrc` или `babel.config.js`",
  "ie11Text5": "К сожалению, Vue CLI 3 не добавляет совместимость с IE11 автоматически, поэтому вы можете столкнуться с некоторыми ошибками (такими как <i>Symbol is not defined</i>). Чтобы исправить эти проблемы, нужно вручную добавить параметр `transpileDependencies` в `vue.config.js`",
  "ie11Text6": "Из-за ограниченной поддержки тегов `<template>` в Internet Explorer, вы должны отправлять в браузер полностью скомпилированные элементы DOM. Это можно сделать, собирая код Vue заранее или создавая компоненты для замены элементов DOM. Например, при непосредственном запуске в IE, этот код вызовет ошибку:",
  "browserSupport": {
    "supported": "Поддерживается",
    "notSupported": "Не поддерживается",
    "polyfill": "Поддержка с polyfill"
  }
}
