{
  "heading": "# ボタン",
  "headingText": "`v-btn` コンポーネントは基本的な HTMLにおけるボタンをマテリアルデザインで置き換え、多数のオプションを提供します。 様々なカラーヘルパークラスを利用して、背景やテキストの色を変更することができます。",
  "alert": "`v-btn` は **dark** prop を使用したときに振る舞いが変化する唯一のコンポーネントです。通常のコンポーネントは **dark** prop を使用して暗い色の背景であることを明示し、テキストを白に変更する必要があります。しかし、`v-btn` では自動的にスタイルが変化するので、ボタンが白い背景と組み合わせて無効化されているときなど、色のついた背景の**上に置かれているとき**のみこの prop を使用することをおすすめします。白いテキストが必要な場合は、ただ **white-text** クラスを追加するだけでテキストを白くできます。",
  "usageText": "最も単純な形式のボタンには、大文字のテキスト、わずかな高さ、ホバー効果、クリック時の波紋エフェクトが含まれます。",
  "examples": {
    "flat": {
      "heading": "フラットボタン",
      "desc": "フラットボタンは影と背景色を持ちません。ホバーした時のみに、ボタンの形状が表示されます。"
    },
    "raised": {
      "heading": "### 影付きボタン",
      "desc": "レイズドボタンはクリックした時に広がる影を持ちます。これはデフォルトのスタイルです。"
    },
    "depressed": {
      "heading": "### ディプレスド",
      "desc": "ディプレスドボタン背景色は変化しますが、影は持ちません。"
    },
    "dropdown": {
      "heading": "### ドロップダウン型ボタン",
      "desc": "ドロップダウン型ボタンは、スタイルが付与された一般的な Select です。",
      "uninverted": true
    },
    "icon": {
      "heading": "アイコン",
      "desc": "アイコンをボタンの主要なコンテンツとして使用することができます。"
    },
    "floating": {
      "heading": "フローティング",
      "desc": "フローティングボタンは丸く、多くの場合アイコンを含んでいます。"
    },
    "loaders": {
      "heading": "ローディング",
      "desc": "loading prop を使用すれば、処理中であることをユーザーに通知することができます。デフォルトの振る舞いには `v-progress-circular` コンポーネントが使用されますが、これはカスタマイズすることができます。"
    },
    "sizing": {
      "heading": "サイズ",
      "desc": "ボタンにはさまざまなシナリオに合うように、異なったサイズのオプションを設定することができます。"
    },
    "outlined": {
      "heading": "アウトライン",
      "desc": "アウトラインボタンは現在適用されている色を引き継いだ境界線を表示します。"
    },
    "rounded": {
      "heading": "ラウンド",
      "desc": "ラウンドボタンは角が丸くなり、通常のボタンと同じように振る舞います。"
    },
    "tile": {
      "heading": "タイル",
      "desc": "Tileボタンは、通常のボタンと同じように振る舞う、枠がないボタンです。"
    },
    "block": {
      "heading": "ブロック",
      "desc": "ブロックボタンは可能な限り横に広がります。"
    }
  },
  "props": {
    "v-btn": {
      "block": "ボタンを使用可能なスペースの最大限まで広げます。",
      "depressed": "ボタンの影を削除します。",
      "fab": "ボタンを丸い floating-action-button として指定します。",
      "icon": "ボタンをアイコンとして丸くフラットにします。",
      "inputValue": "ボタンの有効状態を制御します。",
      "left": "コンポーネントを左に揃えます。これは **absolute** もしくは **fixed** props と共に使うべきです。",
      "loading": "ローディングアニメーションを追加します。",
      "outlined": "背景を透明にし、細い境界線を適用します。",
      "right": "コンポーネントを左に揃えます。これは **absolute** もしくは **fixed** props と共に使うべきです。",
      "rounded": "ボタンの境界線に大きな半径を適用します。",
      "text": "背景を透明にします。",
      "type": "ボタンの **type** 属性を設定します。",
      "value": "Mixins.Groupable.props.value",
      "retainFocusOnClick": "クリック時のぼかしを無効化します。"
    },
    "v-btn-toggle": {
      "rounded": "ボタンの境界線に大きな半径を適用します。"
    }
  },
  "events": {
    "v-btn-toggle": {
      "change": "Components.Inputs.events.change"
    }
  },
  "slots": {
    "v-btn": {
      "loader": "カスタムローダー"
    }
  }
}
