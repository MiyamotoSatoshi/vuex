{
  "heading": "# ボタン : フローティング・アクション・ボタン",
  "headingText": "`v-btn`コンポーネントはフローティング・アクション・ボタンとして使用できます。これにより、アプリケーションに主要なアクションポイントが提供されます。 `v-speed-dial`コンポーネントと組み合わせて、ユーザーが利用できるさまざまな機能セットを作成できます。",
  "examples": {
    "usage": {
      "desc": "フローティング・アクション・ボタンは、アプリケーションに促されたアクションを示すために、マテリアルに取り付けることができます。ほとんどの場合、デフォルトのサイズが使用されますが、似たようなサイズの要素との連続性を維持するために `small` バリアントを使用することができます。"
    },
    "small": {
      "heading": "### Small バリアント",
      "desc": "視覚的にアピールするために、リストのアバターに合わせて小さなボタンを使用しています。"
    },
    "display-animation": {
      "heading": "### アニメーション",
      "desc": "初めて表示されるとき、フローティングアクションボタンはアニメーション表示されます。ここでは、v-showで `v-fab-transition`を使用します。 Vuetifyまたは独自のトランジションを使用することもできます。"
    },
    "lateral-screens": {
      "heading": "### 横長のスクリーン",
      "desc": "ボタンのデフォルトのアクションを変更する場合は、変更を示すトランジションを表示することをお勧めします。これを行うには、`key` propを、Vue トランジションシステムにアクションの変更を適切に知らせることができるデータにバインドします。これにはカスタムトランジションを使用することもできますが、`mode` propを **out-in** に設定してください。"
    },
    "speed-dial": {
      "heading": "### スピードダイヤル付きのFAB",
      "desc": "speed-dial コンポーネントには、FABエクスペリエンスを正確にカスタマイズするための非常に堅牢なAPIがあります。"
    }
  },
  "api": {
    "v-btn": "Components.Buttons"
  },
  "props": {
    "v-speed-dial": {
      "direction": "スピード ダイヤルのコンテンツが表示される方向。指定できる値は、`top`, `bottom`, `left`, `right` です。",
      "openOnHover": "ホバー時にスピードダイヤルを開く"
    }
  }
}
