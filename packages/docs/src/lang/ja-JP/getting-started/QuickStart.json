{
  "header": "# クイックスタート",
  "headerText": "プロジェクトをすぐに開始するには、 _(公式のサンプルを用いる場合)_ Vuetify Vue CLIパッケージのいずれかを使用します。 Vuetifyは、 **SSR** （サーバーサイドレンダリング）、 **SPA**（シングルページアプリケーション）、 **PWA**（プログレッシブWebアプリケーション）、および標準の **HTML**ページをサポートしています。",
  "vueCliHeader": "## Vue CLI-3 のインストール",
  "vueCliText1": "Vue-CLI 3は、あなたがより簡単に新しいアプリケーションの開発を始めるための次世代のcliツールです。 vue-cliを使ってアプリを起動すると、公式のwebpackのアップデートや設定の変更、そしてVuetifyのアップデートも面倒なアップグレード作業なしで入手できます。",
  "vueCliText2": "Vue-CLI-3の使用方法については、[公式ドキュメント](https://cli.vuejs.org/guide/)を参照してください。",
  "vueCliText3": "**Tip** ：既に **vue-cli** がインストールされている場合は、コマンドラインから<kbd> vue --version </kbd>と入力して最新版であることを確認してください。",
  "vueCliText4": "cliがインストールされたら、新しいプロジェクトの雛形(scaffold)を生成できます。 特定のパッケージを含める必要がない限り、 _default install_ を選択してください（例： _vuex_ または _vue-router_ ）。 これにより、選択したオプションに合わせて準備が整った新しいVueプロジェクトが作成されます。\n",
  "vueCliText5": "インスタンス化されたプロジェクトが完成したので、cliを使用して[Vuetifyパッケージ](https://github.com/vuetifyjs/vue-cli-plugin-vuetify)を追加できます。",
  "vueCliText6": "これにより、インストールをカスタマイズするための一連のオプションが表示されます。 デフォルトのプリセットは[アラカルト](/framework/a-la-carte)がすでに有効になっています。",
  "vueCliText7": "インストールが完了したら、<kbd> yarn serve </kbd>または<kbd> npm run serve </kbd>を実行してアプリケーションを起動します。\n",
  "uiHeader": "## Vue UI",
  "uiText1": "Vuetifyは、 _vue-cli-3_ 用の新しいビジュアルアプリケーション **Vue UI** を使用してインストールすることもできます。 最新バージョンのvue-cliがインストールされていて、端末の種類からインストールされていることを確認してください。",
  "uiText2": "これでVueユーザーインターフェースが起動し、ブラウザに[新しいウィンドウ](http://localhost:8000)が開きます。 画面の左側にある **Plugins** をクリックしてください。 移動したら、入力フィールドで _Vuetify_ を検索します。",
  "uiImg1": "Vuetify Pluginをインストールする",
  "uiImg2": "Vuetifyのインストール設定をする",
  "uiText3": "インストール後、アプリケーションのデフォルトのVuetify設定を変更することができます。",
  "browserHeader": "## サポートしているブラウザ",
  "browserText": "Vuetifyは、Web開発を次のレベルに進めることを試みる進歩的なフレームワークです。 そのため、古いバージョンのInternet Explorerのサポートに関してはいくらかの犠牲を払う必要がありました。 これは互換性のあるブラウザの網羅的なリストではなく、主な対象ブラウザです。",
  "cdnHeader": "## CDNインストール",
  "cdnText": "Vue CLIからテンプレートをインストールせずにVuetify.jsを試してみるには、以下のコードをあなたの `index.html` にコピーしてください。 これでVueとVuetifyの最新バージョンが引き出され、コンポーネントを使って遊べるようになります。 codepenでは[Vuetifyスターター](https://template.vuetifyjs.com)を使うこともできます。",
  "newHeader": "## 新しいアプリケーションの作成",
  "newAlert": "これらのパッケージは `vue-cli @ 2` を必要とします。 あなたが真新しいアプリケーションを始めているなら、それは `vue-cli @ 3` を使うことを勧めます。 以下のパッケージは現在、新しいシステムを使用するように変換されています。 **version 3** の使い方の詳細については、[ここをクリック](＃vue-cli-3)",
  "newText": "Vuetifyには8つのVue CLIテンプレートがあり、そのうちの3つは[official Vue.js templates](https://github.com/vuejs-templates)から分岐しています。 それらはあなたがVuetifyをさらに早く始めるのを助けるために小さな修正を含みます。 これらのテンプレートは、次のプロジェクトをできるだけ早く始めるために設計されています。",
  "existingHeader": "## 既存のアプリケーション",
  "existingAlert": "あなたの既存のアプリケーションが `vue-cli @ 3` を使っているなら、Vuetifyパッケージをインストールする方法について[上記のガイド](＃vue-cli-3)を使ってください。",
  "existingText1": "既存のプロジェクトにVuetifyを含めるには、その _npm package_ をインストールする必要があります。 このタスクを達成するために `npm` か `yarn` を使うことができます。 どちらもパッケージマネージャで、アプリケーションで利用可能なリソースを管理できます。",
  "existingText2": "あなたの環境で `npm` を動かす方法の詳細な説明については、[公式ドキュメント](https://docs.npmjs.com/getting-started/what-is-npm)を調べてください。 あるいは、もしあなたが `yarn` を使いたいのであれば、[公式ドキュメント](https://yarnpkg.com/lang/en/docs/)を見つけることができます。 セットアップが完了したら、コマンドプロンプトからどちらのコマンドも実行できます。",
  "existingText3": "Vuetifyがインストールされたら、アプリケーションのメインエントリポイントに移動します。 ほとんどの場合、これは `index.js` または `main.js` になります。 このファイルにVuetifyをインポートしてVueに使用するよう指示します。",
  "existingText4": "あなたはそれからあなたのVueオプションにVuetifyオブジェクトを渡さなければなりません。 これは **vuex** または **vue-router** のインストールに似ています。",
  "existingText5": "Vuetifyをインポートすると、アプリケーションに必要な基本スタイルもすべて取り込まれます。各コンポーネントはそれ自身のスタイルにも責任があり、[vuetify-loader](/ framework/a-la-carte＃vuetify-loader)を使うとき、あなたが使うコンポーネント（そしてそれぞれのスタイル）だけがあなたの最終バンドルに含まれます。",
  "existingText6": "あなたがタイポグラフィを持っていることを保証するためにあなたはまたGoogle Robotoフォントをインポートしなければなりません。",
  "existingText7": "非同期でフォントを読み込むこともできます。 これには、[webfontloader](https://github.com/typekit/webfontloader)を `npm` または `yarn` によってインストールしてください。",
  "alert2": "*警告*: Vuetifyは可能な限りCSSの衝突を引き起こさないようにしていますが、このフレームワークを既存のプロジェクトに統合するときにカスタムスタイルがあなたの経験を変えないという保証はありません。",
  "ie11Header": "## IE11 & Safari 9 サポート",
  "ie11Text": "Vuetifyは、 **Internet Explorer 11** および **Safari 9/10** にpolyfillを使用する必要があるES2015/2017の機能を利用しています。あなたがvue-cli-3を使っているなら、これは自動的に行われます。 そうでなければ、プロジェクトディレクトリに `babel-polyfill` をインストールしてください：",
  "ie11Text1": "Vuetifyは、 **Internet Explorer 11** および **Safari 9/10** にpolyfillを使用する必要があるES2015/2017の機能を利用しています。あなたがvue-cli-3を使っているなら、これは自動的に行われます。 そうでなければ、プロジェクトディレクトリに `babel-polyfill` をインストールしてください：",
  "ie11Text2": "メインの **index.js** ファイル内にできるだけ早くプラグインを含めることが重要です。 Vuetify SSRパッケージを使用している場合、これは **client-entry.js** ファイルに適用されます。",
  "ie11Text3": "必要なpolyfillだけがあなたのアプリケーションに追加されることを確実にするために、対応するポリフィルと共に `babel-preset-env` を使うことが推奨されます。 `babel-present-env` についての詳細は、[ドキュメントを参照してください](https://babeljs.io/docs/en/next/babel-preset-env.html)",
  "ie11Text4": "インストールをしたら、プロジェクトの `.babelrc` または `babel.config.js` にプリセットを追加してください",
  "ie11Text5": "残念ながら、vue-cli-3は自動的にIE11との互換性がなくなるため、さまざまなエラーが発生する可能性があります（<i>Symbolが定義されていない</i>など）。これらのエラーを解決しやすくするために、手動で `vue.config.js` に `transpileDependencies` パラメータを追加する必要があるかもしれません",
  "ie11Text6": "Internet Explorerでは `<template>` タグのサポートが限定されているため、完全にコンパイルされたDOM要素をブラウザに送信する必要があります。 これは、事前にVueコードを構築するか、またはDOM要素を置き換えるヘルパーコンポーネントを作成することによって実行できます。 たとえば、IEに直接送信された場合、これは失敗します。",
  "browserSupport": {
    "supported": "サポート",
    "notSupported": "非サポート",
    "polyfill": "polyfillによりサポート"
  }
}
