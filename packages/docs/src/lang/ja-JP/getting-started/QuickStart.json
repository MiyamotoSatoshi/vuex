{
  "heading": "# クイックスタート",
  "headingText": "世界で最も人気のあるVue.jsフレームワークVuetifyを始めましょう。豊富な機能を備えた非常に高速なアプリケーションを構築できます。",
  "vueCliHeader": "## Vue CLI のインストール",
  "vueCliText1": "Vue CLI は、アプリケーションの構築の複雑さを抽象化するために作られた次世代の cli ツールです。Vue CLI でアプリを起動すると、公式の WebPack の更新や構成の変更、Vuetify の更新を困難なアップグレードプロセスなしで取得することもできます。",
  "vueCliText2": "新しいVue.jsプロジェクトをまだ作成していない場合は、**Vue CLI** を使用し、次のように入力することで新規作成できます:",
  "vueCliText3": "インスタンス化されたプロジェクトができたので、cliを使用して [Vuetify Vue CLIパッケージ](https://github.com/vuetifyjs/vue-cli-plugin-vuetify) を追加できます。",
  "vueCliAlert1": "Vue CLI の使用方法に関する情報については、[公式ドキュメント](https://cli.vuejs.org/guide/) を確認してください。",
  "uiHeader": "### Vue UI のインストール",
  "uiText1": "Vuetifyは、Vue CLIの新しいビジュアルアプリケーションである **Vue UI** を使用してインストールすることもできます。VueCLIの最新バージョンがインストールされていることを確認してから、ターミナルに次のコマンドを入力します：",
  "uiImg1": "Vuetify プラグインのインストール",
  "uiImg2": "Vuetify インストールの設定",
  "uiText2": "Vueユーザーインターフェイスが起動し、ブラウザで [新しいウィンドウ](http://localhost:8000/) が開きます。ページ左側の **プラグイン** をクリックします。開いたページで _Vuetify_ と入力して検索してください。",
  "nuxtHeading": "## Nuxt のインストール",
  "nuxtText1": "Vuetifyを追加するには、 [Nuxt Vuetifyモジュール](https://github.com/nuxt-community/vuetify-module)  をインストールします。",
  "nuxtText2": "インストールしたら、 `nuxt.config.js`ファイルを更新して、ビルドにVuetifyモジュールを含めます。",
  "nuxtText3": "Nuxtのインストールの詳細については、 [公式ドキュメント](https://nuxtjs.org/) をご覧ください。",
  "webpackHeader": "## Webpack のインストール",
  "webpackText1": "VuetifyをWebpackプロジェクトにインストールするには、いくつかの依存関係を追加する必要があります。",
  "webpackText2": "インストールしたら、 `webpack.config.js`ファイルを見つけて、以下のスニペットを **rules** 配列にコピーします。既存の **sass** ルールが設定されている場合、以下の変更の一部またはすべてを適用する必要があります。ツリーシェーキングに **vuetify-loader** を使用する場合は、Webpackのバージョン `>=4`であることを確認してください。 [A-la-carte](/customization/a-la-carte#vueconfigjs-installation) ページでwebpackを使用した設定の詳細を見つけることができます。",
  "webpackText3": "Vuetify用のプラグインファイル、 `src/plugins/vuetify.js` を以下の内容で作成します。",
  "webpackText4": "`vuetify-loader` を使用する場合は、以下の内容を適用します:",
  "webpackText5": "Vue インスタンスを初期化しているアプリケーションの main エントリーポイントに移動して、Vuetify オブジェクトをオプションとして渡してください。",
  "webpackHeader2": "### フォントのインストール",
  "webpackText6": "Vuetify は [Google の Roboto フォント](https://material.io/design/typography/the-type-system.html)および [Material Design Icons](https://materialdesignicons.com/) を使用します。これらをインストールする最も簡単な方法は、メインの `index.html` に CDN を含めることです。",
  "webpackText7": "他のアイコンフォントの使い方やさらなる情報については [Icons](/customization/icons) を参照してください。",
  "cdnHeader": "## CDN の使用",
  "cdnText": "Vue CLIのテンプレートを使わずにVuetify.jsを試すには、下記のコードを`index.html`に貼り付けてください。最新のVueとVuetifyを使って、コンポーネントを試すことができます。codepenの[Vuetify starter](https://template.vuetifyjs.com)を使うこともできます。おすすめはされていませんが、もし本番環境でCDNパッケージを利用する場合は、アセットのバージョンを指定するようにしましょう。詳しいやり方は[jsdelivr](https://www.jsdelivr.com/)を参照してください。",
  "cdnAlert": "アプリケーションを正しく動作させるには、アプリケーションを `v-app` コンポーネントでラップする必要があります。詳細については、 [Application](/components/application) コンポーネントページを参照してください。",
  "electronHeader": "## Electronでの利用",
  "electronText": "Vuetifyを **Electron** で使用するには、Vue CLIで[electron-builder](https://github.com/nklayman/vue-cli-plugin-electron-builder) プラグインを追加します。",
  "pwaHeader": "## PWAでの利用",
  "pwaText": "Vue CLI で新しいアプリを作成する場合は、 `vue create my-app`を実行した後、最初のプロンプトで **Progressive Web App (PWA) Support** を選択するオプションがあります。このパッケージは、次のコマンドを入力して、既存の Vue CLI プロジェクトにインストールすることもできます。",
  "cordovaHeader": "## Cordovaでの利用",
  "cordovaText": "Vuetify を **Cordova** で使用するには、Vue CLIで [Cordova](https://github.com/m0dch3n/vue-cli-plugin-cordova) プラグインを追加します:",
  "capacitorHeader": "## Capacitorでの利用",
  "capacitorText": "Vuetify を **Corodova** で使用するには、Vue CLIで [Capacitor](https://github.com/nklayman/vue-cli-plugin-capacitor) プラグインを追加します。"
}
