{
  "heading": "# コントリビューションガイド",
  "headingText": "Vuetifyは、Issueを登録したり、プルリクエストを作成したり、貴重なフィードバックを提供してくれる素晴らしいコミュニティによって成り立っています。私たちの仕事は、あなたが素晴らしいアプリケーションを作成できるようにすることです。長い間、Vuetifyを使っていると、もっと改善できるかもしれないことを見つけることでしょう。バグを見つけたり、新しい機能に関するアイデアを思いつくこともあると思います。それは素晴らしいことです。Vuetify リポジトリをクローンして、開発環境で作業を始めるのはとても簡単です。",
  "issueHeader": "## Issues を報告する",
  "issue1": "このリポジトリの Issue リストは、バグレポートとフィーチャーリクエストのためにだけ使われています。そのため、バグの再現が確認できていない Issue はすぐにクローズされます。",
  "issue2": "一般的な質問をしたい場合、[コミュニティ](https://chat.vuetifyjs.com)の方に参加して行ってください。",
  "issue3": "issue を送る前に、あなたの問題について検索してみてください。過去にすでに回答されている場合があります。",
  "issue4": "最新版でエラーが再現可能であることを確認してください。",
  "issue5": "もし再現可能であれば、サンプルの [codepen](https://template.vuetifyjs.com) または期待する動作を再現できるクローン可能なリポジトリを提供してください。",
  "issue6": "新しい issue を作る場合には、必ず [issue creator](https://issues.vuetifyjs.com) を使用してください。",
  "localHeader": "## 開発環境の必要条件",
  "localText1": "Vuetifyには、新しい機能、関数、およびコンポーネントをテストするために起動できるローカル開発環境が含まれています。 ただし、始める前に、vuetifyの多くの機能を管理するのを助けるためにインストールする必要があるものがいくつかあります。",
  "localSubHeader1": "### 事前条件: Commitizen をインストールする",
  "localText2": "Vuetifyチームは、すべてのリポジトリのコミットに [Commitizen](https://github.com/commitizen/cz-cli) を使用します。 これにより、通常のコミット機能への最小限の変更で、読みやすく整理されたコミットが可能になります。 npmを使用してCommitizenをグローバルにインストールするには：",
  "localTextWarning": "時々cmdを使用して.czrcを作成してもうまくいかないことがあります。予期しない結果が出る場合はVS Codeを使用してホームディレクトリにファイルを作成してみてください。",
  "localText3": "おめでとうございます！ Commitizenがインストールされました！コミットするときは、通常のようにファイルを追加し、 `git commit -m \"your message\"` を `git cz` に置き換えて、プロンプトに従ってください。",
  "localText4": "コミットのガイドラインについては、以下の \"Commit Guidelines w/Commitizen\"を参照してください。",
  "localSubHeader2": "### PM2 をインストールする (オプション)",
  "localText5": "必要に応じて、PM2を使用してVuetify mono-repoの複数の部分を同時に実行および管理できます（プレイグラウンド、ドキュメントなど）。ルートディレクトリに含まれるのは、起動するPM2構成ファイルです。 Vuetifyが提供するすべてを管理します。開始するには、PM2を開始する必要があります:",
  "setupHeader": "## 開発環境をセットアップする",
  "setupText1": "開発環境のセットアップは簡単です！ [Vuetify](https://github.com/vuetifyjs/vuetify) を自身のリポジトリにforkしましょう。",
  "setupText2": "これで開発環境を起動する準備ができました!",
  "startupHeader": "## 開発環境を開始する",
  "startupText1": "Vuetify mono-repoで開発環境を起動するには、いくつかの方法があります:",
  "startupSubHeader1": "### Yarn",
  "startupSubHeader2": "### PM2",
  "startupText4": "構成済みの PM2 インスタンスをインポートするには、次の手順を実行します。",
  "startupText5": "インスタンスを開始/停止/再起動するためにPM2で使用するいくつかのコマンドを次に示します。",
  "startupText6": "現在、2つの主要なプロセス名があります: `vuetify` （playground）と `vuetify-docs`",
  "commitHeader": "## Commitizen を使用したコミットのガイドライン",
  "commitText1": "commitizen は、セマンティック バージョニングを処理するための流動的なインターフェイスを提供します。パッチノートを書きやすくする素晴らしい定型文が提供されます。",
  "commitText2": "すべてのコミットは、上記のように [conventional-changelog](https://www.npmjs.com/package/cz-conventional-changelog) で [commitizen](https://github.com/commitizen/cz-cli) を使用する必要があります。コミットは`<type>: <subject>`または`<type>(scope): <subject>`の形式に従う必要があります。",
  "commitSubHeader1": "### コミットの種類",
  "commitText3": "- **feat:** 新しい機能または機能性をもたらすコミット。下位互換性のある機能は次の **MINOR**でリリースされますが、重大な変更は次の **MAJOR** で行われます。重大な変更を伴うコミットの本文は、`BREAKING CHANGE`で始まり、その後にAPIがどのように変更されたかの説明が続く必要があります。",
  "commitText4": "- **fix:** vuetifyのコードベース内のバグの修正を提供するコミット。",
  "commitText5": "- **docs:** ドキュメントの更新を提供するコミット。",
  "commitText6": "- **style:** コードの実行方法に影響を与えないコミット。これらは単にフォーマットの変更です。",
  "commitText7": "- **refactor:** バグの修正も機能の追加も行わないコミット。",
  "commitText8": "- **perf:** パフォーマンスを向上させるコミット。",
  "commitText9": "- **test:** 不足しているテストまたは既存のテストを修正するコミット。",
  "commitText11": "- **revert:** 以前のコミットを元に戻すコミット。",
  "changesHeader": "## 変更のサブミット / Pull Requests",
  "changesText1": "コミットを行う前に、devから鮮度ピチピチのものを取得する必要があります。ここから、ブランチと開発版の競合をマージして解決します。開発が絶えず行われているため、頻繁にプルするのが良い経験則です。",
  "changesText4": "最後に `git push` でプルリクエストを開きます。",
  "changesSubHeader1": "### Vuetify に対する Pull Request",
  "changesText7": "Vuetifyに関連するプルリクエスト：\n* **バグ修正** および **ドキュメントの更新** については、プルリクエストを `master`に送信します。\n* **新機能** および **拡張** の場合、プルリクエストを `dev` に送信します。\n* **バグ** および **v1.5 / LTS** に関連する **重大な修正** の場合、プルリクエストを `stable` に送信します。\n* **重大な変更**を含む**機能**については、プルリクエストを `next`に送信します。 ",
  "changesSubHeader2": "### ドキュメントに対する Pull Request",
  "changesText8": "Vuetify のドキュメントに関する pull request は、`master` ブランチに対して送信してください。"
}
