{
  "header": "# Grid system",
  "headerText": "Vuetifyには12ポイントで分割できるグリッドシステムがあります。 <kbd>flex-box</kbd>を使用して構築されたグリッドは、アプリケーションのコンテンツをレイアウトするために使用されます。 これには、デバイスの画面サイズや画面の方向を指定するために使用される5種類のメディアブレークポイントが含まれています。 グリッドコンポーネントの各種propsは、その実態は定義済みのプロパティから派生したclassです。 これにより、これらのヘルパーclassをコンポーネントのプロパティとして簡単に指定でき、どこでもこれらのclassを使用できます。",
  "components": [
    "v-container', 'v-layout', 'v-flex', 'v-spacer"
  ],
  "examples": {
    "usage": {
      "desc": "`v-container`は要素が中央に集中したページに使うことができます。`fluid`プロパティを用いれば、表示幅を一杯にすることもできます。`v-layout`はセクションを区切るために使われ、`v-flex`を含んでいます。レイアウトの構造は次のようになります。**v-container** &raquo; **v-layout** &raquo; **v-flex** 連鎖されたグリッドの各部分はflex-box要素です。`v-flex`は自動的にその子要素に<kbd>flex: 1 1 auto</kbd>を持たせるように設定します。 <br>利便性のため、これらのコンポーネントは自動的に属性をclassに変換しています。その結果、あなたは、`<v-layout class=\"pa-3 mb-2\"></v-layout>` と記述する代わりに、 `<v-layout pa-3 mb-2></v-layout>` と書くことができます。例外的に、[data属性](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes)はそのまま書きます。",
      "uninverted": true
    },
    "playground": {
      "header": "### Layout playground",
      "desc": "簡単ですが以下のplaygroundでレイアウトに関するpropsを試すことができます。",
      "uninverted": true
    },
    "offset": {
      "header": "### Offset",
      "desc": "Offsetは、まだ表示されていない可能性のある要素を補正したり、コンテンツの位置を制御したりするのに役立ちます。 ブレークポイントと同様に、利用可能なサイズにオフセットを設定できます。 これにより、アプリケーションのレイアウトを必要に合わせて微調整できます。",
      "uninverted": true
    },
    "order": {
      "header": "### Order",
      "desc": "グリッドの順序を制御できます。 Offsetと同様に、サイズごとに異なる順序を設定できます。あらゆるアプリケーションに対応できるレイアウトを設計します。",
      "uninverted": true
    },
    "directionAndAlign": {
      "header": "### Direction and Align",
      "desc": "方向と配置をさまざまな方法で指定します。 利用可能な<kbd>flex-box</kbd> apiはすべて、直感的なヘルパーpropsから利用できます。",
      "uninverted": true
    },
    "rowColumnBreakpoint": {
      "header": "### Row and column breakpoints",
      "desc": "解像度に基づいてレイアウトを動的に変更します。 **（画面のサイズを変更し、小さなブレークポイントでレイアウトが `row`に変わるのを見てください）**",
      "uninverted": true
    },
    "growShrink": {
      "header": "### Grow and Shrink",
      "desc": "デフォルトでは、フレックスコンポーネントは自動的に行または列の利用可能なスペースを埋めます。 行または列に十分なスペースがない場合は、フレックスコンテナ内の他のフレックスアイテムと比較して縮小されます。 拡大動作を無効にするには、 `shrink`属性を使います。 縮小動作を無効にするには、 `grow`属性を使います。 拡大と縮小の両方の動作を無効にするには、 `grow-shrink-0`属性を使います。",
      "uninverted": true
    },
    "nestedGrid": {
      "header": "### Nested grid",
      "desc": "非常にカスタマイズされたレイアウトを実現するために、他のフレームワークと同様にグリッドをネストすることができます。",
      "uninverted": true
    },
    "uniqueLayouts": {
      "header": "### Unique layouts",
      "desc": "Vuetifyグリッドシステムのパワーと柔軟性により、素晴らしいユーザーインターフェースを作成できます。",
      "uninverted": true
    },
    "spacer": {
      "header": "### v-spacer",
      "desc": "`v-spacer`コンポーネントは利用可能なスペースを埋めるときや2つのコンポーネントの間にスペースを作りたいときに便利です。"
    },
    "tags": {
      "header": "### Html tags",
      "desc": "`section`や` li`要素のように、レイアウトアイテムを特定のタグとして指定したいことがあるでしょう。"
    }
  },
  "props": {
    "id": "",
    "tag": "Mixins.Routable.props.tag",
    "alignBaseline": "アイテムを交差軸に対してベースラインに揃えます。",
    "alignCenter": "アイテムを交差軸に対して中央に揃えます。",
    "alignContentCenter": "コンテンツを交差軸に対して中央に揃えます。",
    "alignContentEnd": "コンテンツを交差軸に対して末尾に揃えます。",
    "alignContentSpaceAround": "コンテンツを交差軸に対して均等に配置し各アイテムの両側に半分の大きさの間隔を置きます。",
    "alignContentSpaceBetween": "コンテンツを交差軸に対して均等に配置し最初のアイテムは先頭に寄せ、最後のアイテムは末尾に寄せます。",
    "alignContentStart": "コンテンツを交差軸に対して先頭に揃えます。",
    "alignEnd": "アイテムを交差軸に対して末尾に揃えます。",
    "alignStart": "アイテムを交差軸に対して先頭に揃えます。",
    "d-{type}": "要素をflex / inline-flex / blockなどとして表示するように指定します。構文は `d- {type}`です。 例えば `d-flex`です。",
    "fillHeight": "列である要素の高さが親要素の高さの分まで埋まります。 子供が列要素である場合、Safari / Firefoxにとって重要です。",
    "justifyCenter": "コンテンツを主軸に対して中央に整えます",
    "justifyEnd": "コンテンツを主軸に対して末尾に整えます。",
    "justifySpaceAround": "コンテンツを主軸に対して均等に配置し各アイテムの両側に半分の大きさの間隔を置きます。",
    "justifySpaceBetween": "コンテンツを主軸に対して均等に配置し最初のアイテムは先頭に寄せ、最後のアイテムは末尾に寄せます。",
    "justifyStart": "コンテンツを主軸に対して先頭に揃えます",
    "v-container": {
      "grid-list-{xs through xl}": "2pxから24pxの範囲のグリッドリストアイテム間の余白を設定します",
      "fluid": "viewportのブレークポイントを削除します"
    },
    "v-flex": {
      "alignSelfStart": "`align-self: start` を適用します\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self)",
      "alignSelfEnd": "`align-self: end` を適用します\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self)",
      "alignSelfCenter": "`align-self: center` を適用します\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self)",
      "alignSelfBaseline": "`align-self: baseline` を適用します\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self)",
      "grow": "`flex-grow: 1` を適用します\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/flex-grow)",
      "shrink": "`flex-shrink: 1`を適用します\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/flex-shrink)",
      "grow-shrink-0": "`flex-grow: 0` と `flex-shrink: 0` を適用します\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/flex-grow)",
      "offset-(size)(0-12)": "offset-xs: とても小さい, offset-sm: 小さい, offset-md: 中間, offset-lg: 大きい, offset-xl: とても大きい. 例: offset-xs3",
      "order-(size)(1-12)": "order-xs: とても小さい, order-sm: 小さい, order-md: 中間, order-lg: 大きい, order-xl: とても大きい. 例: order-xs3",
      "(size)(1-12)": "xs: とても小さい, sm: 小さい, md: 中間, lg: 大きい, xl: とても大きい - 1 から 12までの数値"
    },
    "v-layout": {
      "row": "frex要素の方向を行に設定",
      "column": "frex要素の方向を列に設定",
      "reverse": "現在選択されている方向（列、行）を反転します。",
      "wrap": "要素の使用率が100％を超えている場合、子はコンテナ内で折り返すことができます。"
    }
  }
}
