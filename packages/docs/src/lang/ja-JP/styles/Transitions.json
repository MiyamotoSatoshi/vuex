{
  "heading": "# モーション",
  "headingText": "スムースなアニメーションはUIの使用感を高めます。Vueのトランジションシステムと関数型コンポーネントにより、アプリケーションで簡単に動きを制御することができます。ほとんどのコンポーネントは`transition`propによって、トランジションを変更することができます。",
  "examples": {
    "usage": {
      "desc": "Vuetifyには10を超えるカスタムcssアニメーションが付属しており、多数のコンポーネントまたは独自のカスタムユースケースに適用できます。"
    },
    "slide-x-transitions": {
      "heading": "### Slide X transitions",
      "desc": "Slide x transitionは水平方向に移動します。"
    },
    "slide-y-transitions": {
      "heading": "### Slide Y transitions",
      "desc": "アニメーションはアプリケーションの`$primary-transition`を利用します。"
    },
    "scroll-x-transitions": {
      "heading": "### Scroll X transitions",
      "desc": "Scroll X トランジションは、水平方向に移動します。"
    },
    "scroll-y-transitions": {
      "heading": "### Scroll Y transitions",
      "desc": "Scroll Y トランジションは、垂直方向に移動します。"
    },
    "scale-transition": {
      "heading": "### Scale transition",
      "desc": "Vuetifyのコンポーネントの多くは`transition`プロパティを含んでいます。"
    },
    "fab-transition": {
      "heading": "### Fab transition",
      "desc": "FABトランジションの例は、`v-speed-dial`コンポーネントにあります。"
    },
    "fade-transition": {
      "heading": "### Fade transition",
      "desc": "Fadeトランジションの例はCarouselで見ることができます。"
    },
    "expand-transition": {
      "heading": "### Expand transition",
      "desc": "expandトランジションは、エクスパンションパネルとリストグループで使用されます。 `v-expand-x-transition`で利用できる水平バージョンもあります。"
    },
    "custom-origin": {
      "desc": "シンプルなプロパティでトランジションのoriginを制御することができます。"
    },
    "todo": {
      "heading": "### Todo リスト",
      "desc": "複数のトランジションを使用すれば、簡単にToDoリストを作成することができます！"
    }
  },
  "createYourOwnHeader": "## 独自のトランジションを作成する",
  "createYourOwnText1": "Vuetify のトランジションヘルパー関数を使用すると、カスタムトランジションを簡単に作成できます。この関数は Vue にインポートできるオブジェクトを返します。Vueの [関数型コンポーネント](https://jp.vuejs.org/v2/guide/render-function.html#%E9%96%A2%E6%95%B0%E5%9E%8B%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%Bc%E3%83%8D%E3%83%B3%E3%83%88) オプションを使用することによって、効率的にトランジションを作ることができます。",
  "createYourOwnText2": "`createSimpleTransition`関数は引数としてnameを受け取ります。これはスタイルで利用するための名前となります。これは`v-fade-transition`がどのように見えるかの例です。",
  "props": {
    "group": "`transition-group` コンポーネントを作成します。 [vue docs](https://jp.vuejs.org/v2/api/index.html#transition-group)",
    "hideOnLeave": "leave時の要素を非表示にします(終了アニメーションなし)",
    "mode": "Mixins.Transitionable.props.mode",
    "origin": "Mixins.Transitionable.props.origin"
  }
}
