{
  "heading": "# テキスト",
  "headingText": "テキストの配置、折り返し、オーバーフロー、変換などを制御します。",
  "alignmentHeader": "## テキストの位置",
  "alignmentText1": "配置ヘルパー クラスを使用すると、テキストを簡単に再配置できます。",
  "alignmentText2": "レスポンシブ・ディスプレイをサポートする配置クラスもあります。",
  "overflowHeader": "# 折り返しとオーバーフロー",
  "overflowText1": "`.text-no-wrap`ユーティリティクラスでテキストの折り返しを防ぐことができます。",
  "overflowText2": "長いコンテンツは、テキストの省略記号で切り捨てることができます。 **必須** `display: inline-block` **または** `display: block`。",
  "transformHeader": "## テキスト変換",
  "transformText1": "テキストは、capitalizationクラスで大文字や小文字などに変換できます。",
  "transformText2": "テキストの改行や`text-transform`の削除も可能です。最初の例では、`text-transform: uppercase`カスタム クラスが上書きされ、テキストの大文字と小文字の区別を残せるようにします。2 番目の例では、使用可能なスペースに合わせて長い単語を分割します。",
  "weightsHeader": "## フォントの太さと斜体",
  "weightsText1": "マテリアルデザインのデフォルトで **100、300、400、500、700、900** フォントの太さと、斜体のテキストをサポートします。",
  "opacityHeader": "## テキストの不透明度",
  "opacityText1": "不透明度ヘルパー クラスを使用すると、テキストの強調を簡単に調整できます。`text--primary`は、デフォルトのテキストと同じ不透明度を持っています。ヒントとヘルパー テキストに対して`text--secondary`が使用されます。テキストを強調を解除するに`text--disabled`を指定します。",
  "rtlHeader": "## RTLでのテキスト配置",
  "rtlText1": "[RTL](/customization/rtl) を使用する場合は、**rtl** の指定に関係なく配置を維持することができます。次の形式のテキスト配置ヘルパークラスを使用します： `text-<breakpoint>-<direction>`。 ブレークポイントは 'sm', 'md', 'lg', 'xl' で、方向は`left`または`right`にすることができます。また向きについては 'start' と 'end' を使用して rtl に対応するように配置することもできます。"
}
