{
  "heading": "# Text",
  "headingText": "Steuerung der Textausrichtung, Packung, Überlauf, Transformationen und vieles mehr.",
  "alignmentHeader": "## Textausrichtung",
  "alignmentText1": "Ausrichtungshilfeklassen ermöglichen es Ihnen, Text einfach neu auszurichten.",
  "alignmentText2": "Es gibt auch verfügbare Ausrichtungsklassen die Responsive Displays unterstützen.",
  "overflowHeader": "## Textumbruch und Überlauf",
  "overflowText1": "Sie können Packungen mit der Utility-Klasse `.text-no-wrap` verhindern.",
  "overflowText2": "Längere Inhalte können mit einer Textellipse abgeschnitten werden. **Benötigt** `display: inline-block` **or** `display: block`.",
  "transformHeader": "## Text-Transformation",
  "transformText1": "Text kann mit Klassen für Textgroßschreibung umgewandelt werden.",
  "transformText2": "Textbruch und das Entfernen von `text-transform` ist ebenfalls möglich. Im ersten Beispiel wird die benutzerdefinierte Klasse `text-transform: uppercase` überschrieben und erlaubt den Verbleib des Textes. Im zweiten Beispiel zerbrechen wir ein längeres Wort, um in den verfügbaren Raum zu passen.`",
  "weightsHeader": "## Schriftgewichte und Kursiv",
  "weightsText1": "Standardmäßig unterstützt das Material Design **100, 300, 400, 500, 700, 900** Schriftgewichte und kursiven Text.",
  "rtlHeader": "## RTL-Ausrichtung",
  "rtlText1": "Wenn Sie [RTL](/customization/rtl) verwenden, können Sie die Ausrichtung unabhängig von der **rtl**-Bezeichnung behalten wollen. Dies kann mit Hilfe von Textausrichtungshilfeklassen im folgenden Format erreicht werden: `text-<breakpoint>-<direction>`, wobei der Haltepunkt `sm`, `md`, `lg` oder `xl` und Richtung `links` oder `rechts` sein kann. Auch wenn Sie wollen, dass die Ausrichtung auf rtl reagiert, können Sie dies mit den Anweisungen `start` und `end` umsetzen."
}
