{
  "examples": {
    "usage": {
      "desc": "`v-overflow-btn` est utilisé pour créer des listes de sélection"
    },
    "counter": {
      "heading": "### Compteur",
      "desc": "Vous pouvez ajouter un compteur à `v-overflow-btn` pour contrôler le nombre max de caractères"
    },
    "disabled": {
      "heading": "### Désactivé",
      "desc": "`v-overflow-btn` peut être désactivé afin d'empêcher un utilisateur d'interagir avec lui"
    },
    "editable": {
      "desc": "`modifiable` `v-overflow-btn` peut être édité directement, tout comme `v-text-field`"
    },
    "filled": {
      "desc": "Les champs texte peuvent être utilisés avec une conception alternative de la boîte. Les caractères d'icônes supplémentaires et prépendantes sont **not** pris en charge dans ce mode."
    },
    "hint": {
      "heading": "## Astuce",
      "desc": "Vous pouvez ajouter une astuce pour l'utilisateur en utilisant la propriété `hint`"
    },
    "loading": {
      "heading": "### Chargement",
      "desc": "`v-overflow-btn` peut avoir l'état `loading` avec une barre de progression linéaire sous eux"
    },
    "menu-props": {
      "desc": "Vous pouvez définir les props `v-menu` sous-jacents en utilisant la propriété `menu-props`"
    },
    "readonly": {
      "heading": "### Lecture seule",
      "desc": "`v-overflow-btn` peut être placé en mode `readonly`, il deviendra inactif mais ne changera pas la couleur"
    },
    "segmented": {
      "desc": "`segmented` `v-overflow-btn` a et un séparateur supplémentaire entre le contenu et l'icône"
    },
    "dense": {
      "heading": "### Dense",
      "desc": "Vous pouvez utiliser le prop`dense` pour réduire la hauteur des boutons de débordement et la hauteur maximale inférieure des éléments de liste."
    }
  },
  "props": {
    "dark": "Components.Inputs.props.dark",
    "editable": "Crée un bouton modifiable",
    "overflow": "Crée un bouton de débordement",
    "segmented": "Crée un bouton segmenté",
    "value": "Components.Inputs.props.value"
  },
  "slots": {
    "append": "Components.Inputs.slots.append",
    "append-item": "Components.Selects.slots.append-item",
    "append-outer": "Components.TextFields.slots.append-outer",
    "item": "Components.Selects.slots.item",
    "no-data": "Mixins.Filterable.slots.noData",
    "prepend": "Components.Inputs.slots.prepend",
    "prepend-inner": "Components.TextFields.slots.prepend-inner",
    "prepend-item": "Components.Selects.slots.prepend-item",
    "selection": "Components.Selects.slots.selection"
  },
  "events": {
    "change": "Components.Inputs.events.change",
    "click:append": "Components.Inputs.events['click:append']",
    "click:append-outer": "Components.TextFields.events['click:append-outer']",
    "click:clear": "Components.TextFields.events['click:clear']",
    "click:prepend": "Components.Inputs.events['click:prepend']",
    "click:prepend-inner": "Components.TextFields.events['click:prepend-inner']",
    "update:error": "Mixins.Validatable.events['update:error']",
    "update:search-input": "L'événement `search-input.sync`"
  }
}
