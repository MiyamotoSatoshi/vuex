{
  "usageText": "Avec Combobox, vous pouvez permettre à un utilisateur de créer de nouvelles valeurs qui ne sont pas présentes dans une liste d'éléments fournis.",
  "examples": {
    "no-data": {
      "desc": "Dans cet exemple, nous utilisons un emplacement **no-data** personnalisé pour fournir un contexte à l'utilisateur lors de la recherche / création d'éléments."
    },
    "advanced": {
      "desc": "Le `v-combobox` améliore les fonctionnalités ajoutées de `v-select` et `v-autocomplete`. Cela vous permet d'avoir une interface expansive pour créer des implémentations vraiment personnalisées. Cet exemple profite de certaines fonctionnalités plus avancées telles qu'un algorithme **filter** personnalisé, l'édition de liste d'entrées et d'éléments d'entrée dynamiques."
    },
    "combobox-multiple": {
      "desc": "Précédemment connu sous le nom de **tags** - l'utilisateur est autorisé à saisir plus d'une valeur"
    },
    "dense": {
      "heading": "### Dense",
      "desc": "Vous pouvez utiliser le prop`dense` pour réduire la hauteur des combobox et la hauteur maximale inférieure des éléments de liste."
    }
  },
  "props": {
    "dark": "Components.Inputs.props.dark",
    "delimiters": "Accepte un tableau de chaînes qui déclenchera un nouveau tag lors de la saisie. Ne remplace pas l'onglet normal et les clés Entrées."
  }
}
