{
  "heading": "# Support du navigateur",
  "headingText": "Vuetify est un framework progressif qui tente de pousser le développement Web à un autre niveau. Dans le but d'accomplir cette tâche, quelques sacrifices doivent être fait en terme de prise de charge des vieilles versions d'Internet Explorer. Ce n'est pas une liste exhaustive de compatibilité navigateur, mais des principaux ciblés.",
  "browserHeader": "## Navigateurs supportés",
  "browserText": "Vuetify est un framework progressif qui tente de pousser le développement Web à un autre niveau. Dans le but d'accomplir cette tâche, quelques sacrifices doivent être fait en terme de prise de charge des vieilles versions d'Internet Explorer. Ce n'est pas une liste exhaustive de compatibilité navigateur, mais des principaux ciblés.",
  "browserSupport": {
    "supported": "Supporté",
    "notSupported": "Non supporté",
    "polyfill": "Supporté avec polyfill"
  },
  "ie11Text2": "Il est important d'inclure le plugin dès que possible dans votre fichier **index.js** principal. Si vous utilisez un paquet Vuetify SSR, cela s'appliquera au fichier **client-entry.js**",
  "ie11Text3": "Il est recommandé d'utiliser `babel-preset-env` avec le polyremplissage correspondant pour s'assurer que seuls les polyfilles nécessaires sont ajoutés à votre application. Pour plus d'informations sur `babel-preset-env`, [visitez la documentation](https://babeljs.io/docs/fr/next/babel-preset-env.html)",
  "ie11Text4": "Une fois installé, ajoutez le preset à votre fichier `.babelrc` ou `babel.config.js`",
  "ie11Text6": "En raison d'une prise en charge limitée des balises `<template>` par Internet Explorer, vous devez envoyer des éléments DOM entièrement compilés au navigateur. Cela peut être fait soit en compilant votre code Vue à l'avance, soit en créant des composants auxiliaires pour remplacer les éléments du DOM. Par exemple, si envoyé directement à IE, cela échouera :"
}
