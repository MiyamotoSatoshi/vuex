{
  "treeshakeWarning": "Le traitement ne fonctionnera qu'avec Webpack 4 en **mode de production**. Ceci est automatique lorsque vous utilisez Vue CLI 3.",
  "loaderHeader1": "## vuetify-loader",
  "loaderText1a": "Garder une trace de tous les composants que vous utilisez peut être une vraie corvée. Le [vuetify-loader](https://github.com/vuetifyjs/vuetify-loader) atténue cette douleur en important automatiquement tous les composants Vuetify que vous utilisez, là où vous les utilisez. Cela rendra également le fractionnement de code plus efficace, car webpack ne chargera que les composants nécessaires à l'affichage de ce bloc.",
  "loaderHeader2": "### Importation",
  "loaderText2a": "Pour profiter des composants a-la-carte, vous devez importer Vuetify à partir de **vuetify/lib**.",
  "optionsInfo": "L'objet options que vous transmettez comme second argument à `Vue.use` peut également inclure une propriété _components_, _directives_ et _transitions_.",
  "loaderHeader3": "### Installation de vue.config.js",
  "loaderText3a": "Bien qu'il n'est pas recommandé, vous pouvez choisir d'utiliser le plugin Vue CLI 3 et configurer manuellement le chargeur via [configure webpack](https://cli.vuejs.org/config/#configurewebpack) de Vue CLI 3.",
  "loaderHeader4": "### Installation Webpack",
  "loaderText4a": "Vous pouvez également installer explicitement le loader pour les projets basés sur webpack. Similaire à la configuration vue.config.js, vous n'avez qu'à ajouter le loader aux plugins webpack de votre projet.",
  "loaderHeader5": "## Styles requis",
  "loaderText5a": "Lorsque vous importez de `vuetify/lib` les styles de cadre de base sont également tirés dans. Chaque composant est responsable individuellement de leurs styles et sera compilé exactement la même. Si vous utilisez Vue CLI 3 et le plugin `vue-cli-plugin-vuetify`, cela est fait pour vous automatiquement et vous pouvez **sauter** cette section. Si vous travaillez dans un projet où vous n'avez pas accès au cli, vous pouvez inclure manuellement les paquets requis.",
  "sassInfo": "Pour une explication plus détaillée sur la manière de configurer votre application pour gérer SASS, naviguez vers [theme page](/customization/theme).",
  "loaderText5b": "Après l'installation, vous devrez toujours configurer votre fichier webpack.config.js pour parser les fichiers .sass. Pour plus d'informations sur la façon de le faire avec **fibers**, regardez la [documentation officielle](https://webpack.js.org/loaders/sass-loader/).",
  "loaderHeader6": "## Imports dynamiques personnalisés",
  "loaderText6a": "Le chargeur de vuetify vous permet également d'écrire vos propres fonctions de correspondance pour importer les composants de votre projet. Cela peut être fait dans les projets Vue CLI 3 et webpack.",
  "loaderHeader7": "## Limitations",
  "loaderText7a": "Lors de l'utilisation de `vuetify-loader`, il y a quelques scénarios où une importation manuelle des composants sera nécessaire.",
  "loaderHeader8": "### Composants dynamiques",
  "loaderText8a": "`v-data-iterator` peut utiliser n’importe quel composant via la propriété **content-tag**. Ce composant doit être enregistré [globally](#markup-js-a-la-carte) :",
  "loaderText8b": "Les composants dynamiques utilisés avec `<component :is=\"my-component\">` peuvent être enregistrés [locally](#markup-js-a-la-carte-destructuring) :",
  "loaderHeader9": "### Composants fonctionnels",
  "loaderText9a": "Les composants fonctionnels sont importés par Vue en ligne (inline) lors de l'exécution, et ne peuvent pas avoir de propriété `components` dans leurs options. Tous les composants Vuetify utilisés dans un composant fonctionnel personnalisé doivent être soit enregistrés globalement (recommandé), soit localement, quel que soit le type d'utilisation du composant personnalisé.",
  "loaderHeader10": "## Import manuel",
  "loaderText10a": "Les composants peuvent être importés manuellement lorsque vous n'utilisez pas vuetify-loader. Vous devrez également le faire lorsque vous utilisez des composants dynamiques et le **vuetify-loader** car il ne parse que les utilisations explicites. Cela se produit généralement lorsque vous utilisez le `<component is=\"my-component\" />` fournit par Vue. Plus d'informations sur les composants dynamiques sont dans la [documentation](https://vuejs.org/v2/guide/components.html#Dynamic-Components) Vue officielle.",
  "loaderText10b": "Vous pouvez également importer des composants dans les fichiers .vue, comme indiqué ci-dessous."
}
