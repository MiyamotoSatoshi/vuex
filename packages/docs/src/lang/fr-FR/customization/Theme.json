{
  "headingText": "Modifiez facilement les couleurs de votre application programmatiquement. Reconstruisez la feuille de style par défaut et personnalisez divers aspects du framework pour vos besoins particuliers.",
  "lightAndDarkHeader": "## Clair et sombre",
  "lightAndDarkText1": "Vuetify supporte les variantes **light** et **dark** de la spec Material Design. Cette désignation commence au composant racine de l'application, `v-app` et est supportée par la majorité des composants. Par défaut, votre application utilisera le thème **light** mais cela peut être facilement changé en ajoutant l'option **dark** dans le service de thème.",
  "lightAndDarkText2": "Lorsque vous désignez un composant comme light ou dark, tous ses enfants hériteront et appliqueront le même si vous ne le spécifiez pas autrement. Vous pouvez activer ou désactiver manuellement **dark** en changeant `this.$vuetify.theme.dark` en **true** ou **false**.",
  "customizingHeader": "Personnalisation",
  "customizingText1": "Par défaut, Vuetify a un thème standard appliqué à tous les composants.",
  "customizingText3": "Vous pouvez également utiliser les couleurs Material prédéfinies.",
  "customizingText3a": "Par défaut, le service de thème utilisera la couleur principale de votre application pour les tags **anchor** . Vous pouvez l'écraser en ajoutant une propriété anchor au thème :",
  "customizingText4": "Derrière la scène, Vuetify générera des classes css basées sur ces valeurs qui seront accessibles dans le DOM. Ces classes suivront le même balisage que d'autres classes utilitaires, `primary` ou `secondary--text` par exemple. Si vous fournissez un objet de couleur entier (comme `colors.purple` ci-dessus), les variations lighten/darken seront utilisées directement au lieu d'être générées.",
  "customizingText5": "Ces valeurs seront également rendues disponibles dans l'instance **$vuetify** dans la propriété **theme** . Cela vous permet de _dynamiquement_ modifier votre thème. Derrière la scène, Vuetify régénèrera et mettra à jour vos classes de thème, mettant à jour votre application de manière transparente.",
  "optionHeader": "## Options",
  "optionHeader2": "### Minification",
  "optionHeader3": "### Caching",
  "optionHeader4": "### Propriétés personnalisées",
  "optionHeader5": "### CSP Nonce",
  "themeGeneratorHeader": "## Générateur de thèmes",
  "themeGeneratorText1": "Découvrez et générez de nouveaux thèmes de couleur pour vos applications **Vuetify** en utilisant notre outil [Générateur de thème](https://theme-generator.vuetifyjs.com).",
  "variantsSubheader": "### Variantes de thème personnalisées",
  "variantsText1": "Alors que Vuetify génère automatiquement des variantes _lighten_ et _darken_ pour les couleurs du thème, vous pourriez vouloir les contrôler vous-même. Passez simplement un objet de thème qui contient les variantes que vous souhaitez modifier. Tout ce qui n'est pas fourni sera toujours généré pour vous.",
  "variantsText2": "Vous pouvez maintenant importer votre objet personnalisé et l'appliquer à Vuetify",
  "variantsText3": "Ci-dessous une liste complète des clés réinscriptibles de l'objet thème :",
  "disableSubheader": "### Désactiver le thème",
  "disableText1": "Vous pouvez désactiver la fonctionnalité du thème en utilisant la propriété **disable** avec une valeur de **true**. Cela empêchera la création de la feuille de style Vuetify."
}
