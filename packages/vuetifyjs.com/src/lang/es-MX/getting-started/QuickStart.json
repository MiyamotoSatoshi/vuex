{
  "header": "Inicio rápido",
  "headerText": "Usa uno de los paquetes de Vue CLI de Vuetify _(basados en los ejemplos oficiales)_ para iniciar con tu proyecto en un instante. Vuetify tiene soporte para **SSR** (server-side rendering), **SPA** (single page application), **PWA** (progressive web application) y páginas estándar de **HTML** ",
  "vueCliHeader": "Instalar mediante Vue CLI-3",
  "vueCliText1": "Vue-CLI 3 es la herramienta cli (interfaz de línea de comandos) de nueva generación hecha para ayudarte a iniciar de una forma mucho más sencilla que antes. Cuando comienzas una app con vue-cli también podrás obtener las actualizaciones oficiales de webpack y los cambios en las configuraciones, así como actualizaciones de Vuetify sin tener que pasar por un proceso arduo de actualización.",
  "vueCliText2": "Para información acerca de cómo utilizar Vue-CLI-3, visita la [documentación oficial](https://cli.vuejs.org/guide/)",
  "vueCliText3": "**Tip**: Si no quieres sobreescribir tu versión actual de vue-cli porque todavía necesitas `vue init` de la versión 2, [trata esto](https://cli.vuejs.org/guide/creating-a-project.html#pulling-2-x-templates-legacy).",
  "vueCliText4": "Una vez que la cli ha sido instalado, puedes generar un nuevo scaffold de proyecto. Selecciona la _instalaión default_ a menos que tengas paquetes específicos que necesites incluír (p.ej. _vuex_ or _vue-router_). Esto creará un nuevo proyecto de Vue que está listo con tus opciones seleccionadas.",
  "vueCliText5": "Ahora que ya tienes un proyecto instanciado, puedes agregar el **[paquete de Vuetify](https://github.com/vuetifyjs/vue-cli-plugin-vuetify)** usando la cli.",
  "vueCliText6": "Ten en cuenta, que si estás instalando el paquete de Vuetify en un proyecto _existente_ de vue-cli-3, debes asegurarte de tener un directorio limpio en caso de que haya problemas con el merge.",
  "vueCliText7": "Después de la instalación, puedes correr el script `dev` que se encuentra en el archivo `package.json`. Esto iniciará un servidor de desarrollo local en **https://localhost:8080**.",

  "browserHeader": "Navegadores Soportados",
  "browserText": "Vuetify es un framework progresivo que intenta llevar al desarrollo web al siguiente nivel. Para poder cumplir con esta tarea de la mejor forma, algunos sacrificios se han tenido que hacer en materia de soporte para versiones más antiguas de Internet Explorer. Esta no es una lista exhaustiva de navegadores compatibles, pero de los que más comunmente se les da soporte.",
  "cdnHeader": "Instalación por CDN",
  "cdnText": "Para probar Vuetify.js sin instalar una plantilla de Vue CLI, copia el siguiente código en tu archivo `index.html`. Esto traerá la última versión de Vue y de Vuetify, permitiéndote comenzar a jugar con los componentes. Puedes también utilizar el [Vuetify starter](https://template.vuetifyjs.com) de codepen.",
  "newHeader": "Aplicaciones nuevas",
  "newAlert": "Estos paquetes requieren `vue-cli@2`. Si estás comenzando una aplicación completamente nueva, se recomienda que uses `vue-cli@3`. Los paquetes listados a continuación están siendo convertidos para utilizar el nuevo sistema. Para más información de cómo usar la **versión 3**, haz [click aquí](#vue-cli-3)",
  "newText": "Vuetify tiene 8 plantillas prefabricadas de Vue CLI, 3 de las cuales son forks de [plantillas oficiales de Vue.js](https://github.com/vuejs-templates). Contienen pequeñas modificaciones para ayudarte a comenzar con Vuetify aún más rápido. Estos paquetes requieren `vue-cli`. Para más información acerca de vue-cli, visita el repositorio oficial en [Github](https://github.com/vuejs/vue-cli). Estas plantillas están diseñadas para ayudarte a iniciar tu próximo proyecto tan rápido como sea posible.",
  "existingHeader": "Aplicaciones existentes",
  "existingAlert": "Si tu aplicación existente usa `vue-cli@3`, por favor sigue la [guía de arriba](#vue-cli-3) acerca de cómo instalar el paquete de Vuetify.",
  "existingText1": "Para incluir Vuetify en un proyecto existente, debes instalar su _paquete de npm_. Puedes usar ya sea `npm`o `yarn` para llevarlo a cabo. Ambos son administradores de paquetes que te permitirán controlar qué recursos están disponibles para tu aplicación.",
  "existingText2": "Para una explicación detallada de cómo correr `npm` en tu ambiente, visita la [documentación oficial](https://docs.npmjs.com/getting-started/what-is-npm). En otro caso, si deseas usar yarn, puedes encontrar la documentación oficial [aquí](https://yarnpkg.com/lang/en/docs/). Una vez que hayas instalado alguno, puedes correr cualquier comando desde tu terminal.",
  "existingText3": "Una vez que Vuetify ha sido instalado, navega al archivo principal de tu aplicación. En la mayoría de los casos, esto será `index.js` o `main.js`. En este archivo importarás Vuetify y le dirás a Vue que debe utilizarlo.",
  "existingText4": "También necesitarás incluir el archivo css de Vuetify. Simplemente incluye el archivo css de Vuetify en tu `index.html` o importa el archivo de stylus o el archivo con el css minificado.",
  "existingText5": "Algunos componentes como el _date picker_ utilizan íconos de Material Design. La forma más fácil de incluir los íconos de Material Design es agregar una etiqueta `link` a tu archivo `index.html`",
  "existingText6": "Una alternativa es usar `npm` o `yarn` para instalar el paquete `material-design-icons-iconfont`.",
  "alert2": "*Advertencia*: Aunque Vuetify intenta no causar cualquier colisión de css tanto como sea posible, no hay ninguna garantía de que tus estilos personalizados no alterarán tu experiencia cuando integres este framework en tu proyecto existente.",
  "ie11Header": "Soporte para IE11 y Safari 9",
  "ie11Text": "Vuetify utiliza características de ES2015/2017 qu requieren polyfills para **Internet Explorer 11** y **Safari 9/10**. Si estás usando vue-cli-3, esto se hace automáticamente por tí. De otra forma, en tu carpeta del proyecto  puedes instalar `babel-polyfill`:",
  "ie11Text1": "Es importante incluir el plugin tan pronto como sea posible dentro de tu archivo **main.js**. Si estás usando un paquete de Vuetify SSR, esto se deberá hacer en el archivo **client-entry.js**",
  "ie11Text2": "Se recomienda que uses `babel-preset-env` con el polyfill correspondiente para asegurar que sólo se agregan los polyfills necesarios a tu aplicación. Para mayor información acerca de `babel-present-env`, [visita la documentación](https://babeljs.io/docs/en/next/babel-preset-env.html)",
  "ie11Text3": "Una vez instalado, agrega el preset a tu archivo `.babelrc` o al archivo `babel.config.js`",
  "ie11Text4": "Debido al soporte limitado de Internet Explorer para las etiquetas `<template>`, debes enviar elementos del DOM completamente compilados al navegador. Esto puede lograrse ya sea compilando tu código de Vue de antemano o creando componentes \"helper\" para reemplazar los elementos del DOM. Por ejemplo, si se envía lo siguiente directamente a IE, fallará: ",
  "browserSupport": {
    "supported": "Soportado",
    "notSupported": "No soportado",
    "polyfill": "Soportado con polyfill"
  }
}
