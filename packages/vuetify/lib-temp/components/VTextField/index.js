import VTextField from './VTextField';
import VTextarea from '../VTextarea/VTextarea';
import rebuildSlots from '../../util/rebuildFunctionalSlots';
import dedupeModelListeners from '../../util/dedupeModelListeners';
import { deprecate } from '../../util/console';
// TODO: remove this in v2.0
/* @vue/component */
const wrapper = {
    functional: true,
    $_wrapperFor: VTextField,
    props: {
        textarea: Boolean,
        multiLine: Boolean
    },
    render(h, { props, data, slots, parent }) {
        dedupeModelListeners(data);
        const children = rebuildSlots(slots(), h);
        if (props.textarea) {
            deprecate('<v-text-field textarea>', '<v-textarea outline>', wrapper, parent);
        }
        if (props.multiLine) {
            deprecate('<v-text-field multi-line>', '<v-textarea>', wrapper, parent);
        }
        if (props.textarea || props.multiLine) {
            data.attrs.outline = props.textarea;
            return h(VTextarea, data, children);
        }
        else {
            return h(VTextField, data, children);
        }
    }
};
export { wrapper as VTextField };
export default wrapper;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9WVGV4dEZpZWxkL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sVUFBVSxNQUFNLGNBQWMsQ0FBQTtBQUNyQyxPQUFPLFNBQVMsTUFBTSx3QkFBd0IsQ0FBQTtBQUM5QyxPQUFPLFlBQVksTUFBTSxtQ0FBbUMsQ0FBQTtBQUM1RCxPQUFPLG9CQUFvQixNQUFNLGlDQUFpQyxDQUFBO0FBQ2xFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQTtBQUU5Qyw0QkFBNEI7QUFDNUIsb0JBQW9CO0FBQ3BCLE1BQU0sT0FBTyxHQUFHO0lBQ2QsVUFBVSxFQUFFLElBQUk7SUFFaEIsWUFBWSxFQUFFLFVBQVU7SUFFeEIsS0FBSyxFQUFFO1FBQ0wsUUFBUSxFQUFFLE9BQU87UUFDakIsU0FBUyxFQUFFLE9BQU87S0FDbkI7SUFFRCxNQUFNLENBQUUsQ0FBQyxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFO1FBQ3ZDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxDQUFBO1FBRTFCLE1BQU0sUUFBUSxHQUFHLFlBQVksQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQTtRQUV6QyxJQUFJLEtBQUssQ0FBQyxRQUFRLEVBQUU7WUFDbEIsU0FBUyxDQUFDLHlCQUF5QixFQUFFLHNCQUFzQixFQUFFLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQTtTQUM5RTtRQUVELElBQUksS0FBSyxDQUFDLFNBQVMsRUFBRTtZQUNuQixTQUFTLENBQUMsMkJBQTJCLEVBQUUsY0FBYyxFQUFFLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQTtTQUN4RTtRQUVELElBQUksS0FBSyxDQUFDLFFBQVEsSUFBSSxLQUFLLENBQUMsU0FBUyxFQUFFO1lBQ3JDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUE7WUFDbkMsT0FBTyxDQUFDLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQTtTQUNwQzthQUFNO1lBQ0wsT0FBTyxDQUFDLENBQUMsVUFBVSxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQTtTQUNyQztJQUNILENBQUM7Q0FDRixDQUFBO0FBRUQsT0FBTyxFQUFFLE9BQU8sSUFBSSxVQUFVLEVBQUUsQ0FBQTtBQUNoQyxlQUFlLE9BQU8sQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBWVGV4dEZpZWxkIGZyb20gJy4vVlRleHRGaWVsZCdcbmltcG9ydCBWVGV4dGFyZWEgZnJvbSAnLi4vVlRleHRhcmVhL1ZUZXh0YXJlYSdcbmltcG9ydCByZWJ1aWxkU2xvdHMgZnJvbSAnLi4vLi4vdXRpbC9yZWJ1aWxkRnVuY3Rpb25hbFNsb3RzJ1xuaW1wb3J0IGRlZHVwZU1vZGVsTGlzdGVuZXJzIGZyb20gJy4uLy4uL3V0aWwvZGVkdXBlTW9kZWxMaXN0ZW5lcnMnXG5pbXBvcnQgeyBkZXByZWNhdGUgfSBmcm9tICcuLi8uLi91dGlsL2NvbnNvbGUnXG5cbi8vIFRPRE86IHJlbW92ZSB0aGlzIGluIHYyLjBcbi8qIEB2dWUvY29tcG9uZW50ICovXG5jb25zdCB3cmFwcGVyID0ge1xuICBmdW5jdGlvbmFsOiB0cnVlLFxuXG4gICRfd3JhcHBlckZvcjogVlRleHRGaWVsZCxcblxuICBwcm9wczoge1xuICAgIHRleHRhcmVhOiBCb29sZWFuLFxuICAgIG11bHRpTGluZTogQm9vbGVhblxuICB9LFxuXG4gIHJlbmRlciAoaCwgeyBwcm9wcywgZGF0YSwgc2xvdHMsIHBhcmVudCB9KSB7XG4gICAgZGVkdXBlTW9kZWxMaXN0ZW5lcnMoZGF0YSlcblxuICAgIGNvbnN0IGNoaWxkcmVuID0gcmVidWlsZFNsb3RzKHNsb3RzKCksIGgpXG5cbiAgICBpZiAocHJvcHMudGV4dGFyZWEpIHtcbiAgICAgIGRlcHJlY2F0ZSgnPHYtdGV4dC1maWVsZCB0ZXh0YXJlYT4nLCAnPHYtdGV4dGFyZWEgb3V0bGluZT4nLCB3cmFwcGVyLCBwYXJlbnQpXG4gICAgfVxuXG4gICAgaWYgKHByb3BzLm11bHRpTGluZSkge1xuICAgICAgZGVwcmVjYXRlKCc8di10ZXh0LWZpZWxkIG11bHRpLWxpbmU+JywgJzx2LXRleHRhcmVhPicsIHdyYXBwZXIsIHBhcmVudClcbiAgICB9XG5cbiAgICBpZiAocHJvcHMudGV4dGFyZWEgfHwgcHJvcHMubXVsdGlMaW5lKSB7XG4gICAgICBkYXRhLmF0dHJzLm91dGxpbmUgPSBwcm9wcy50ZXh0YXJlYVxuICAgICAgcmV0dXJuIGgoVlRleHRhcmVhLCBkYXRhLCBjaGlsZHJlbilcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGgoVlRleHRGaWVsZCwgZGF0YSwgY2hpbGRyZW4pXG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCB7IHdyYXBwZXIgYXMgVlRleHRGaWVsZCB9XG5leHBvcnQgZGVmYXVsdCB3cmFwcGVyXG4iXX0=