import { createSimpleTransition, createJavaScriptTransition } from '../../util/helpers';
import ExpandTransitionGenerator from './expand-transition';
// Component specific transitions
export const VBottomSheetTransition = createSimpleTransition('bottom-sheet-transition');
export const VCarouselTransition = createSimpleTransition('carousel-transition');
export const VCarouselReverseTransition = createSimpleTransition('carousel-reverse-transition');
export const VTabTransition = createSimpleTransition('tab-transition');
export const VTabReverseTransition = createSimpleTransition('tab-reverse-transition');
export const VMenuTransition = createSimpleTransition('menu-transition');
export const VFabTransition = createSimpleTransition('fab-transition', 'center center', 'out-in');
// Generic transitions
export const VDialogTransition = createSimpleTransition('dialog-transition');
export const VDialogBottomTransition = createSimpleTransition('dialog-bottom-transition');
export const VFadeTransition = createSimpleTransition('fade-transition');
export const VScaleTransition = createSimpleTransition('scale-transition');
export const VScrollXTransition = createSimpleTransition('scroll-x-transition');
export const VScrollXReverseTransition = createSimpleTransition('scroll-x-reverse-transition');
export const VScrollYTransition = createSimpleTransition('scroll-y-transition');
export const VScrollYReverseTransition = createSimpleTransition('scroll-y-reverse-transition');
export const VSlideXTransition = createSimpleTransition('slide-x-transition');
export const VSlideXReverseTransition = createSimpleTransition('slide-x-reverse-transition');
export const VSlideYTransition = createSimpleTransition('slide-y-transition');
export const VSlideYReverseTransition = createSimpleTransition('slide-y-reverse-transition');
// JavaScript transitions
export const VExpandTransition = createJavaScriptTransition('expand-transition', ExpandTransitionGenerator());
export const VRowExpandTransition = createJavaScriptTransition('row-expand-transition', ExpandTransitionGenerator('datatable__expand-col--expanded'));
export default {
    $_vuetify_subcomponents: {
        VBottomSheetTransition,
        VCarouselTransition,
        VCarouselReverseTransition,
        VDialogTransition,
        VDialogBottomTransition,
        VFabTransition,
        VFadeTransition,
        VMenuTransition,
        VScaleTransition,
        VScrollXTransition,
        VScrollXReverseTransition,
        VScrollYTransition,
        VScrollYReverseTransition,
        VSlideXTransition,
        VSlideXReverseTransition,
        VSlideYTransition,
        VSlideYReverseTransition,
        VTabReverseTransition,
        VTabTransition,
        VExpandTransition,
        VRowExpandTransition
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy90cmFuc2l0aW9ucy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsc0JBQXNCLEVBQ3RCLDBCQUEwQixFQUMzQixNQUFNLG9CQUFvQixDQUFBO0FBRTNCLE9BQU8seUJBQXlCLE1BQU0scUJBQXFCLENBQUE7QUFFM0QsaUNBQWlDO0FBQ2pDLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUFHLHNCQUFzQixDQUFDLHlCQUF5QixDQUFDLENBQUE7QUFDdkYsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsc0JBQXNCLENBQUMscUJBQXFCLENBQUMsQ0FBQTtBQUNoRixNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRyxzQkFBc0IsQ0FBQyw2QkFBNkIsQ0FBQyxDQUFBO0FBQy9GLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxzQkFBc0IsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFBO0FBQ3RFLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLHNCQUFzQixDQUFDLHdCQUF3QixDQUFDLENBQUE7QUFDckYsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLHNCQUFzQixDQUFDLGlCQUFpQixDQUFDLENBQUE7QUFDeEUsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLHNCQUFzQixDQUFDLGdCQUFnQixFQUFFLGVBQWUsRUFBRSxRQUFRLENBQUMsQ0FBQTtBQUVqRyxzQkFBc0I7QUFDdEIsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsc0JBQXNCLENBQUMsbUJBQW1CLENBQUMsQ0FBQTtBQUM1RSxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBRyxzQkFBc0IsQ0FBQywwQkFBMEIsQ0FBQyxDQUFBO0FBQ3pGLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxzQkFBc0IsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBO0FBQ3hFLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLHNCQUFzQixDQUFDLGtCQUFrQixDQUFDLENBQUE7QUFDMUUsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsc0JBQXNCLENBQUMscUJBQXFCLENBQUMsQ0FBQTtBQUMvRSxNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBRyxzQkFBc0IsQ0FBQyw2QkFBNkIsQ0FBQyxDQUFBO0FBQzlGLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLHNCQUFzQixDQUFDLHFCQUFxQixDQUFDLENBQUE7QUFDL0UsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUcsc0JBQXNCLENBQUMsNkJBQTZCLENBQUMsQ0FBQTtBQUM5RixNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxzQkFBc0IsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFBO0FBQzdFLE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFHLHNCQUFzQixDQUFDLDRCQUE0QixDQUFDLENBQUE7QUFDNUYsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsc0JBQXNCLENBQUMsb0JBQW9CLENBQUMsQ0FBQTtBQUM3RSxNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRyxzQkFBc0IsQ0FBQyw0QkFBNEIsQ0FBQyxDQUFBO0FBRTVGLHlCQUF5QjtBQUN6QixNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRywwQkFBMEIsQ0FBQyxtQkFBbUIsRUFBRSx5QkFBeUIsRUFBRSxDQUFDLENBQUE7QUFDN0csTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsMEJBQTBCLENBQUMsdUJBQXVCLEVBQUUseUJBQXlCLENBQUMsaUNBQWlDLENBQUMsQ0FBQyxDQUFBO0FBRXJKLGVBQWU7SUFDYix1QkFBdUIsRUFBRTtRQUN2QixzQkFBc0I7UUFDdEIsbUJBQW1CO1FBQ25CLDBCQUEwQjtRQUMxQixpQkFBaUI7UUFDakIsdUJBQXVCO1FBQ3ZCLGNBQWM7UUFDZCxlQUFlO1FBQ2YsZUFBZTtRQUNmLGdCQUFnQjtRQUNoQixrQkFBa0I7UUFDbEIseUJBQXlCO1FBQ3pCLGtCQUFrQjtRQUNsQix5QkFBeUI7UUFDekIsaUJBQWlCO1FBQ2pCLHdCQUF3QjtRQUN4QixpQkFBaUI7UUFDakIsd0JBQXdCO1FBQ3hCLHFCQUFxQjtRQUNyQixjQUFjO1FBQ2QsaUJBQWlCO1FBQ2pCLG9CQUFvQjtLQUNyQjtDQUNGLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uLFxuICBjcmVhdGVKYXZhU2NyaXB0VHJhbnNpdGlvblxufSBmcm9tICcuLi8uLi91dGlsL2hlbHBlcnMnXG5cbmltcG9ydCBFeHBhbmRUcmFuc2l0aW9uR2VuZXJhdG9yIGZyb20gJy4vZXhwYW5kLXRyYW5zaXRpb24nXG5cbi8vIENvbXBvbmVudCBzcGVjaWZpYyB0cmFuc2l0aW9uc1xuZXhwb3J0IGNvbnN0IFZCb3R0b21TaGVldFRyYW5zaXRpb24gPSBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uKCdib3R0b20tc2hlZXQtdHJhbnNpdGlvbicpXG5leHBvcnQgY29uc3QgVkNhcm91c2VsVHJhbnNpdGlvbiA9IGNyZWF0ZVNpbXBsZVRyYW5zaXRpb24oJ2Nhcm91c2VsLXRyYW5zaXRpb24nKVxuZXhwb3J0IGNvbnN0IFZDYXJvdXNlbFJldmVyc2VUcmFuc2l0aW9uID0gY3JlYXRlU2ltcGxlVHJhbnNpdGlvbignY2Fyb3VzZWwtcmV2ZXJzZS10cmFuc2l0aW9uJylcbmV4cG9ydCBjb25zdCBWVGFiVHJhbnNpdGlvbiA9IGNyZWF0ZVNpbXBsZVRyYW5zaXRpb24oJ3RhYi10cmFuc2l0aW9uJylcbmV4cG9ydCBjb25zdCBWVGFiUmV2ZXJzZVRyYW5zaXRpb24gPSBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uKCd0YWItcmV2ZXJzZS10cmFuc2l0aW9uJylcbmV4cG9ydCBjb25zdCBWTWVudVRyYW5zaXRpb24gPSBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uKCdtZW51LXRyYW5zaXRpb24nKVxuZXhwb3J0IGNvbnN0IFZGYWJUcmFuc2l0aW9uID0gY3JlYXRlU2ltcGxlVHJhbnNpdGlvbignZmFiLXRyYW5zaXRpb24nLCAnY2VudGVyIGNlbnRlcicsICdvdXQtaW4nKVxuXG4vLyBHZW5lcmljIHRyYW5zaXRpb25zXG5leHBvcnQgY29uc3QgVkRpYWxvZ1RyYW5zaXRpb24gPSBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uKCdkaWFsb2ctdHJhbnNpdGlvbicpXG5leHBvcnQgY29uc3QgVkRpYWxvZ0JvdHRvbVRyYW5zaXRpb24gPSBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uKCdkaWFsb2ctYm90dG9tLXRyYW5zaXRpb24nKVxuZXhwb3J0IGNvbnN0IFZGYWRlVHJhbnNpdGlvbiA9IGNyZWF0ZVNpbXBsZVRyYW5zaXRpb24oJ2ZhZGUtdHJhbnNpdGlvbicpXG5leHBvcnQgY29uc3QgVlNjYWxlVHJhbnNpdGlvbiA9IGNyZWF0ZVNpbXBsZVRyYW5zaXRpb24oJ3NjYWxlLXRyYW5zaXRpb24nKVxuZXhwb3J0IGNvbnN0IFZTY3JvbGxYVHJhbnNpdGlvbiA9IGNyZWF0ZVNpbXBsZVRyYW5zaXRpb24oJ3Njcm9sbC14LXRyYW5zaXRpb24nKVxuZXhwb3J0IGNvbnN0IFZTY3JvbGxYUmV2ZXJzZVRyYW5zaXRpb24gPSBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uKCdzY3JvbGwteC1yZXZlcnNlLXRyYW5zaXRpb24nKVxuZXhwb3J0IGNvbnN0IFZTY3JvbGxZVHJhbnNpdGlvbiA9IGNyZWF0ZVNpbXBsZVRyYW5zaXRpb24oJ3Njcm9sbC15LXRyYW5zaXRpb24nKVxuZXhwb3J0IGNvbnN0IFZTY3JvbGxZUmV2ZXJzZVRyYW5zaXRpb24gPSBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uKCdzY3JvbGwteS1yZXZlcnNlLXRyYW5zaXRpb24nKVxuZXhwb3J0IGNvbnN0IFZTbGlkZVhUcmFuc2l0aW9uID0gY3JlYXRlU2ltcGxlVHJhbnNpdGlvbignc2xpZGUteC10cmFuc2l0aW9uJylcbmV4cG9ydCBjb25zdCBWU2xpZGVYUmV2ZXJzZVRyYW5zaXRpb24gPSBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uKCdzbGlkZS14LXJldmVyc2UtdHJhbnNpdGlvbicpXG5leHBvcnQgY29uc3QgVlNsaWRlWVRyYW5zaXRpb24gPSBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uKCdzbGlkZS15LXRyYW5zaXRpb24nKVxuZXhwb3J0IGNvbnN0IFZTbGlkZVlSZXZlcnNlVHJhbnNpdGlvbiA9IGNyZWF0ZVNpbXBsZVRyYW5zaXRpb24oJ3NsaWRlLXktcmV2ZXJzZS10cmFuc2l0aW9uJylcblxuLy8gSmF2YVNjcmlwdCB0cmFuc2l0aW9uc1xuZXhwb3J0IGNvbnN0IFZFeHBhbmRUcmFuc2l0aW9uID0gY3JlYXRlSmF2YVNjcmlwdFRyYW5zaXRpb24oJ2V4cGFuZC10cmFuc2l0aW9uJywgRXhwYW5kVHJhbnNpdGlvbkdlbmVyYXRvcigpKVxuZXhwb3J0IGNvbnN0IFZSb3dFeHBhbmRUcmFuc2l0aW9uID0gY3JlYXRlSmF2YVNjcmlwdFRyYW5zaXRpb24oJ3Jvdy1leHBhbmQtdHJhbnNpdGlvbicsIEV4cGFuZFRyYW5zaXRpb25HZW5lcmF0b3IoJ2RhdGF0YWJsZV9fZXhwYW5kLWNvbC0tZXhwYW5kZWQnKSlcblxuZXhwb3J0IGRlZmF1bHQge1xuICAkX3Z1ZXRpZnlfc3ViY29tcG9uZW50czoge1xuICAgIFZCb3R0b21TaGVldFRyYW5zaXRpb24sXG4gICAgVkNhcm91c2VsVHJhbnNpdGlvbixcbiAgICBWQ2Fyb3VzZWxSZXZlcnNlVHJhbnNpdGlvbixcbiAgICBWRGlhbG9nVHJhbnNpdGlvbixcbiAgICBWRGlhbG9nQm90dG9tVHJhbnNpdGlvbixcbiAgICBWRmFiVHJhbnNpdGlvbixcbiAgICBWRmFkZVRyYW5zaXRpb24sXG4gICAgVk1lbnVUcmFuc2l0aW9uLFxuICAgIFZTY2FsZVRyYW5zaXRpb24sXG4gICAgVlNjcm9sbFhUcmFuc2l0aW9uLFxuICAgIFZTY3JvbGxYUmV2ZXJzZVRyYW5zaXRpb24sXG4gICAgVlNjcm9sbFlUcmFuc2l0aW9uLFxuICAgIFZTY3JvbGxZUmV2ZXJzZVRyYW5zaXRpb24sXG4gICAgVlNsaWRlWFRyYW5zaXRpb24sXG4gICAgVlNsaWRlWFJldmVyc2VUcmFuc2l0aW9uLFxuICAgIFZTbGlkZVlUcmFuc2l0aW9uLFxuICAgIFZTbGlkZVlSZXZlcnNlVHJhbnNpdGlvbixcbiAgICBWVGFiUmV2ZXJzZVRyYW5zaXRpb24sXG4gICAgVlRhYlRyYW5zaXRpb24sXG4gICAgVkV4cGFuZFRyYW5zaXRpb24sXG4gICAgVlJvd0V4cGFuZFRyYW5zaXRpb25cbiAgfVxufVxuIl19