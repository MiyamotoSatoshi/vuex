@use 'sass:math'
@forward './variables'
@use 'sass:map'
@use '../../styles/settings'
@use '../../styles/tools'
@use './mixins' as *
@use './variables' as *

.v-btn
  align-items: center
  border-radius: $button-border-radius
  display: inline-flex
  font-weight: $button-font-weight
  justify-content: center
  letter-spacing: $button-text-letter-spacing
  line-height: $button-line-height
  max-width: $button-max-width
  outline: none
  overflow: $button-overflow
  position: relative
  text-decoration: none
  text-indent: $button-text-letter-spacing
  text-transform: $button-text-transform
  transition-property: $button-transition-property
  transition-duration: 0.28s
  transition-timing-function: settings.$standard-easing
  user-select: none
  vertical-align: $button-vertical-align
  flex-shrink: 0
  white-space: $button-white-space

  @at-root
    @include button-sizes()
    @include button-density('height', $button-density)

  @include tools.border($button-border...)
  @include tools.states('.v-btn__overlay', false)
  @include tools.variant($button-variants...)

  @supports selector(:focus-visible)
    &::after
      @include tools.absolute(true)
      pointer-events: none
      border: 2px solid currentColor
      border-radius: inherit
      opacity: 0
      transition: opacity .2s ease-in-out

    &:focus-visible::after
      opacity: calc(.25 * var(--v-theme-overlay-multiplier))

  &--icon
    border-radius: $button-icon-border-radius
    min-width: 0
    padding: 0
    font-size: $button-icon-font-size

    @at-root &
      @include button-density(('width', 'height'), $button-icon-density)

  &--elevated
    &:hover,
    &:focus
      +tools.elevation(map.get($button-elevation, 'hover'))

    &:active
      +tools.elevation(map.get($button-elevation, 'active'))

  &--flat
    box-shadow: none

  &--block
    display: flex
    flex: 1 0 auto
    min-width: 100%

  &--disabled
    pointer-events: none

    &.v-btn--disabled
      color: rgba(var(--v-theme-on-surface), $button-disabled-opacity)
      opacity: 1

    &.v-btn--variant-contained
      background: rgb(var(--v-theme-surface))
      box-shadow: none

      .v-btn__overlay
        // This is multiplied by the text opacity,
        // so we need to divide it to get the desired value
        opacity: math.div($button-disabled-overlay, $button-disabled-opacity)

  &--stacked
    flex-direction: column
    line-height: $button-stacked-line-height

    @at-root
      @include button-sizes($button-stacked-sizes, true)
      @include button-density('height', $button-stacked-density)

  &--rounded
    @include tools.rounded($button-rounded-border-radius)

  .v-icon
    --v-icon-size-multiplier: #{calc(18/21)}

  &--icon
    .v-icon
      --v-icon-size-multiplier: 1

  &--stacked
    .v-icon
      --v-icon-size-multiplier: #{calc(24/21)}

.v-btn__content
  transition: $button-content-transition

.v-btn__overlay
  @include tools.absolute()
  background-color: currentColor
  border-radius: inherit
  pointer-events: none
  opacity: 0
  transition: opacity .2s ease-in-out

// VAppBar
.v-btn
  .v-app-bar &
    @include tools.elevation($button-app-bar-elevation)

// VCard
.v-btn
  .v-card-actions &
    padding: $button-card-actions-padding

    @include tools.elevation($button-card-actions-elevation)

  ~ .v-btn
    .v-card-actions &
      margin-inline-start: $button-card-actions-margin

// VBanner
.v-btn
  .v-banner-actions &
    padding: $button-banner-actions-padding

// VPagination
.v-btn
  .v-pagination &
    @include tools.rounded($button-pagination-border-radius)

  &__overlay
    .v-pagination__item--is-active &
      opacity: $button-pagination-active-overlay-opacity

// VSnackbar
.v-btn
  .v-snackbar-actions &
    padding: $button-snackbar-action-padding
