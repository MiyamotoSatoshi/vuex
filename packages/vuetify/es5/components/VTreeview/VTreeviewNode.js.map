{"version":3,"sources":["../../../src/components/VTreeview/VTreeviewNode.ts"],"names":[],"mappings":"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","sourcesContent":["// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\nimport VTreeviewNode from './VTreeviewNode'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utils\nimport mixins from '../../util/mixins'\nimport { getObjectValueByPath } from '../../util/helpers'\nimport { PropValidator } from 'vue/types/options'\n\n// Types\nimport Vue, { VNode } from 'vue'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\ninterface options extends Vue {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active'\n  },\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent'\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$vuetify.icons.checkboxIndeterminate'\n  },\n  onIcon: {\n    type: String,\n    default: '$vuetify.icons.checkboxOn'\n  },\n  offIcon: {\n    type: String,\n    default: '$vuetify.icons.checkboxOff'\n  },\n  expandIcon: {\n    type: String,\n    default: '$vuetify.icons.subgroup'\n  },\n  loadingIcon: {\n    type: String,\n    default: '$vuetify.icons.loading'\n  },\n  itemKey: {\n    type: String,\n    default: 'id'\n  },\n  itemText: {\n    type: String,\n    default: 'name'\n  },\n  itemChildren: {\n    type: String,\n    default: 'children'\n  },\n  loadChildren: Function as PropValidator<(item: any) => Promise<void>>,\n  openOnClick: Boolean,\n  transition: Boolean\n}\n\nexport default mixins<options>(\n  RegistrableInject('treeview')\n  /* @vue/component */\n).extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null\n    }\n  },\n\n  props: {\n    item: {\n      type: Object,\n      default: () => null\n    },\n    ...VTreeviewNodeProps\n  },\n\n  data: () => ({\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n    isIndeterminate: false, // Node has at least one selected child\n    isActive: false, // Node is selected (row)\n    isLoading: false,\n    hasLoaded: false\n  }),\n\n  computed: {\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      return getObjectValueByPath(this.item, this.itemChildren)\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    }\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      return this.$createElement('label', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label'\n      }, [this.text])\n    },\n    genContent () {\n      const children = [\n        this.$scopedSlots.prepend && this.$scopedSlots.prepend(this.scopedProps),\n        this.genLabel(),\n        this.$scopedSlots.append && this.$scopedSlots.append(this.scopedProps)\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content'\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          }\n        }\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected ? this.selectedColor : undefined\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          }\n        }\n      }, [this.computedIcon])\n    },\n    genNode (): VNode {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n      if (this.children) children.unshift(this.genToggle())\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__root',\n        on: {\n          click: () => {\n            if (this.openOnClick && this.children) {\n              this.open()\n            } else if (this.activatable) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          }\n        }\n      }, children)\n    },\n    genChild (item: any): VNode {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick\n        },\n        scopedSlots: this.$scopedSlots\n      })\n    },\n    genChildrenWrapper (): any {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(this.genChild)]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children'\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    }\n  },\n\n  render (h): VNode {\n    const children = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        [this.activeClass]: this.isActive,\n        'v-treeview-node--leaf': !this.children,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--selected': this.isSelected\n      }\n    }, children)\n  }\n})\n"],"sourceRoot":""}