{"version":3,"sources":["../../../../src/components/Vuetify/mixins/breakpoint.ts"],"names":[],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport { VuetifyBreakpoint } from 'types'\n\n/**\n * A modified version of https://gist.github.com/cb109/b074a65f7595cffc21cea59ce8d15f9b\n */\n\n/**\n * A Vue mixin to get the current width/height and the associated breakpoint.\n *\n *   <div v-if=\"$breakpoint.smAndDown\">...</div>\n *\n */\nexport default Vue.extend({\n  data: () => ({\n    clientHeight: getClientHeight(),\n    clientWidth: getClientWidth(),\n    resizeTimeout: undefined as number | undefined\n  }),\n\n  computed: {\n    breakpoint (): VuetifyBreakpoint {\n      const xs = this.clientWidth < 600\n      const sm = this.clientWidth < 960 && !xs\n      const md = this.clientWidth < (1280 - 16) && !(sm || xs)\n      const lg = this.clientWidth < (1920 - 16) && !(md || sm || xs)\n      const xl = this.clientWidth >= (1920 - 16)\n\n      const xsOnly = xs\n      const smOnly = sm\n      const smAndDown = (xs || sm) && !(md || lg || xl)\n      const smAndUp = !xs && (sm || md || lg || xl)\n      const mdOnly = md\n      const mdAndDown = (xs || sm || md) && !(lg || xl)\n      const mdAndUp = !(xs || sm) && (md || lg || xl)\n      const lgOnly = lg\n      const lgAndDown = (xs || sm || md || lg) && !xl\n      const lgAndUp = !(xs || sm || md) && (lg || xl)\n      const xlOnly = xl\n\n      let name\n      switch (true) {\n        case (xs):\n          name = 'xs'\n          break\n        case (sm):\n          name = 'sm'\n          break\n        case (md):\n          name = 'md'\n          break\n        case (lg):\n          name = 'lg'\n          break\n        default:\n          name = 'xl'\n          break\n      }\n\n      return {\n        // Definite breakpoint.\n        xs,\n        sm,\n        md,\n        lg,\n        xl,\n\n        // Useful e.g. to construct CSS class names dynamically.\n        name,\n\n        // Breakpoint ranges.\n        xsOnly,\n        smOnly,\n        smAndDown,\n        smAndUp,\n        mdOnly,\n        mdAndDown,\n        mdAndUp,\n        lgOnly,\n        lgAndDown,\n        lgAndUp,\n        xlOnly,\n\n        // For custom breakpoint logic.\n        width: this.clientWidth,\n        height: this.clientHeight\n      }\n    }\n  },\n\n  created () {\n    if (typeof window === 'undefined') return\n\n    window.addEventListener('resize', this.onResize, { passive: true })\n  },\n\n  beforeDestroy () {\n    if (typeof window === 'undefined') return\n\n    window.removeEventListener('resize', this.onResize)\n  },\n\n  methods: {\n    onResize (): void {\n      clearTimeout(this.resizeTimeout)\n\n      // Added debounce to match what\n      // v-resize used to do but was\n      // removed due to a memory leak\n      // https://github.com/vuetifyjs/vuetify/pull/2997\n      this.resizeTimeout = window.setTimeout(this.setDimensions, 200)\n    },\n    setDimensions (): void {\n      this.clientHeight = getClientHeight()\n      this.clientWidth = getClientWidth()\n    }\n  }\n})\n\n// Cross-browser support as described in:\n// https://stackoverflow.com/questions/1248081\nfunction getClientWidth () {\n  if (typeof document === 'undefined') return 0 // SSR\n  return Math.max(\n    document.documentElement!.clientWidth,\n    window.innerWidth || 0\n  )\n}\n\nfunction getClientHeight () {\n  if (typeof document === 'undefined') return 0 // SSR\n  return Math.max(\n    document.documentElement!.clientHeight,\n    window.innerHeight || 0\n  )\n}\n"],"sourceRoot":""}