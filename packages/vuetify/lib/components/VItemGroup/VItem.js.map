{"version":3,"sources":["../../../src/components/VItemGroup/VItem.ts"],"names":[],"mappings":";;;AACA,SAAS,WAAW,gBAApB,QAA4C,wBAA5C;AAEA;AACA,OAAO,MAAP,MAAmB,mBAAnB;AACA,SAAS,WAAT,QAA4B,oBAA5B;AAKA,eAAe,OACb,iBAAiB,WAAjB,EAA8B,QAA9B,EAAwC,cAAxC;AACA;AAFa,EAGb,MAHa,CAGN;AACP,UAAM,QADC;AAGP,WAAO;AACL,eAAO;AACL,sBAAU;AADL;AADF,KAHA;AASP,UATO,oBASD;AACJ,YAAI,CAAC,KAAK,YAAL,CAAkB,OAAvB,EAAgC;AAC9B,wBAAY,wCAAZ,EAAsD,IAAtD;AAEA,mBAAO,IAAP;AACD;AAED,YAAI,gBAAJ;AAEA;AACA,YAAI,KAAK,YAAL,CAAkB,OAAtB,EAA+B;AAC7B,sBAAU,KAAK,YAAL,CAAkB,OAAlB,CAA0B;AAClC,wBAAQ,KAAK,QADqB;AAElC,wBAAQ,KAAK;AAFqB,aAA1B,CAAV;AAID;AAED,YAAI,CAAC,OAAD,IAAY,OAAO,OAAP,KAAmB,QAA/B,IAA2C,MAAM,OAAN,CAAc,OAAd,CAA/C,EAAuE;AACrE,wBAAY,6CAAZ,EAA2D,IAA3D;AAEA,mBAAO,OAAP;AACD;AAED,gBAAQ,IAAR,GAAe,QAAQ,IAAR,IAAgB,EAA/B;AACA,gBAAQ,IAAR,CAAc,KAAd,GAAsB,CACpB,QAAQ,IAAR,CAAc,KADM,sBAEjB,KAAK,WAFY,EAEE,KAAK,QAFP,EAAtB;AAKA,eAAO,OAAP;AACD;AAvCM,CAHM,CAAf","sourcesContent":["// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents } from 'vue/types/vnode'\n\nexport default mixins(\n  GroupableFactory('itemGroup', 'v-item', 'v-item-group')\n  /* @vue/component */\n).extend({\n  name: 'v-item',\n\n  props: {\n    value: {\n      required: false\n    }\n  },\n\n  render (): VNode {\n    if (!this.$scopedSlots.default) {\n      consoleWarn('v-item is missing a default scopedSlot', this)\n\n      return null as any\n    }\n\n    let element: VNode | VNodeChildrenArrayContents | string | undefined\n\n    /* istanbul ignore else */\n    if (this.$scopedSlots.default) {\n      element = this.$scopedSlots.default({\n        active: this.isActive,\n        toggle: this.toggle\n      })\n    }\n\n    if (!element || typeof element === 'string' || Array.isArray(element)) {\n      consoleWarn('v-item should only contain a single element', this)\n\n      return element as any\n    }\n\n    element.data = element.data || {}\n    element.data!.class = [\n      element.data!.class,\n      { [this.activeClass]: this.isActive }\n    ]\n\n    return element\n  }\n})\n"],"sourceRoot":""}