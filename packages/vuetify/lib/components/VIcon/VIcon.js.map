{"version":3,"sources":["../../../src/components/VIcon/VIcon.ts"],"names":[],"mappings":"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","sourcesContent":["import '../../stylus/components/_icons.styl'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Sizeable from '../../mixins/sizeable'\nimport Themeable from '../../mixins/themeable'\n\n// Util\nimport {\n  convertToUnit,\n  keys,\n  remapInternalIcon\n} from '../../util/helpers'\n\n// Types\nimport Vue, { VNode, VNodeChildren, VNodeData } from 'vue'\nimport mixins from '../../util/mixins'\n\nenum SIZE_MAP {\n  small = '16px',\n  default = '24px',\n  medium = '28px',\n  large = '36px',\n  xLarge = '40px'\n}\n\nfunction isFontAwesome5 (iconType: string): boolean {\n  return ['fas', 'far', 'fal', 'fab'].some(val => iconType.includes(val))\n}\n\nconst VIcon = mixins(\n  Colorable,\n  Sizeable,\n  Themeable\n/* @vue/component */\n).extend({\n  name: 'v-icon',\n\n  props: {\n    disabled: Boolean,\n    left: Boolean,\n    right: Boolean\n  },\n\n  render (h): VNode {\n    const sizes = {\n      small: this.small,\n      medium: this.medium,\n      large: this.large,\n      xLarge: this.xLarge\n    }\n    const explicitSize = keys(sizes).find(key => sizes[key] && !!key)\n    const fontSize = (explicitSize && SIZE_MAP[explicitSize]) || convertToUnit(this.size)\n\n    const newChildren: VNodeChildren = []\n    const data: VNodeData = {\n      staticClass: 'v-icon',\n      attrs: {\n        'aria-hidden': true,\n        ...this.$attrs\n      },\n      on: this.$listeners\n    }\n\n    if (fontSize) data.style = { fontSize }\n\n    let iconName = ''\n    if (this.$slots.default) iconName = this.$slots.default[0].text!\n\n    // Remap internal names like '$vuetify.icons.cancel' to the current name for that icon\n    iconName = remapInternalIcon(this, iconName)\n\n    let iconType = 'material-icons'\n    // Material Icon delimiter is _\n    // https://material.io/icons/\n    const delimiterIndex = iconName.indexOf('-')\n    const isCustomIcon = delimiterIndex > -1\n\n    if (isCustomIcon) {\n      iconType = iconName.slice(0, delimiterIndex)\n\n      if (isFontAwesome5(iconType)) iconType = ''\n      // Assume if not a custom icon\n      // is Material Icon font\n    } else newChildren.push(iconName)\n\n    data.class = {\n      'v-icon--disabled': this.disabled,\n      'v-icon--left': this.left,\n      'v-icon--link': this.$listeners.click || this.$listeners['!click'],\n      'v-icon--right': this.right,\n      [iconType]: true,\n      [iconName]: isCustomIcon,\n      ...this.themeClasses\n    }\n\n    return h('i', this.setTextColor(this.color, data), newChildren)\n  }\n})\n\nexport default Vue.extend({\n  name: 'v-icon',\n\n  $_wrapperFor: VIcon,\n\n  functional: true,\n\n  render (h, { data, children }): VNode {\n    let iconName = ''\n\n    // Support usage of v-text and v-html\n    if (data.domProps) {\n      iconName = data.domProps.textContent ||\n        data.domProps.innerHTML ||\n        iconName\n\n      // Remove nodes so it doesn't\n      // overwrite our changes\n      delete data.domProps.textContent\n      delete data.domProps.innerHTML\n    }\n\n    return h(VIcon, data, iconName ? [iconName] : children)\n  }\n})\n"],"sourceRoot":""}